{"version":3,"sources":["panels/StartWindow/contacts.svg","panels/ListQuestions/IteamListQuestion/BottomSheet/rectangle.svg","panels/ListQuestions/IteamListQuestion/BottomSheet/candelabrum.svg","img/ageRussianEmpire/The era of palace coups/The era of palace coups.png","img/ageRussianEmpire/main.png","components/ButtonWrapper/ButtonWrapper.js","panels/StartWindow/StartWindow.js","help.js","components/ListCard/ListCard.js","components/Header/Header.js","panels/ListAge/ListAge.js","panels/ListQuestions/IteamListQuestion/IteamListQuestion.js","components/ModalPageHead/ModalPageHead.js","components/AlertWrapper/AlertWrapper.js","panels/ListQuestions/ListQuestions.js","anime/easeOut.js","panels/Result/ResultButtons/ResultButtons.js","panels/AnswersQuestions/ItemAnswerQuestion/ItemAnswerQuestion.js","panels/AnswersQuestions/AnswersQuestions.js","panels/Result/Result.js","panels/ListQuizes/ListQuizes.js","panels/SpinnerView/SpinnerView.js","App.js","store/ageRussianEmpire/quizPetr1.js","store/ageRussianEmpire/quizTheEraOfPalaceCoups.js","store/ageRussianEmpire/ageRussianEmpire.js","store/store.js","store/results/results.js","index.js","img/ageRussianEmpire/quizPetr1/Картинка.png","img/ageRussianEmpire/quizPetr1/petr.png"],"names":["module","exports","ButtonWrapper","isActived","text","onClick","before","className","classNameText","isCentered","hasActive","style","activeEffectDelay","mode","centered","StartWindow","id","arrForPreDownload","useState","separator","width","height","src","svgContacts","alt","isTitleCentre","element","curWidth","document","getElementById","scrollWidth","stub","getColNumber","undefined","ListCard","info","cardClick","index","size","map","record","i","header","title","percentProgress","numberOfQuestions","image","imageSrc","caption","description","Header","left","leftBtnFunc","isClose","icon","click","justifyContent","cursor","visor","fixed","ListAge","eras","screenSpinner","createOnClickItemAge","IteamListQuestion","platform","question","numberCurrentQuestion","countQuestions","indexAnswer","name","goToPrevQuestion","goToNextQuestion","isModalOpen","isClicked","changeModal","setNotActiveBackgoundToAnswerButton","isImgInfoOpen","setisImgInfoOpen","transform","transition","CSSTransition","in","timeout","classNames","onEnter","onExited","weight","questionText","answerOptions","answer","ModalPageHead","onClose","textAlign","isDesktop","useAdaptivity","viewWidth","ViewWidth","SMALL_TABLET","right","AlertWrapper","leftText","children","leftFunc","rightText","rightFunc","actionsLayout","actions","autoclose","action","ListQuestions","arrQuestions","onBack","onFinish","totalScore","createIdActivePanel","history","setHistory","alert","setAlert","stateAnswers","setStateAnswers","indexQuestion","setIndexQuestion","setIndexQuestionAndHistory","newIndex","changeHistory","resetData","createGoToNextQuestion","maxLength","giveAnswer","onFinishWithAlert","createGoToPrevQuestion","openCloseListQuestionsAleret","lastIndexQuestion","setLastIndexQuestion","goToLastQuestion","setModalOpen","nextIndex","his","push","vkBridge","send","isAllAnswered","openFinishAlert","length","modal","activeModal","settlingHeight","arr","key","toIndexQuestion","buttons","getElementsByName","getElementsByClassName","console","log","backgroundColor","activePanel","onSwipeBack","popout","currentIndexQuestion","timing","timeFraction","ResultButtons","onAgain","onGoToAnswersQuestion","goToViewListAndQuizes","color","ItemAnswerQuestion","indexRightAnswer","indexUserAnswer","openAlert","AnswersQuestions","questions","indexesAnswers","display","q","findIndex","a","score","Result","f","percent","year","quizes","historicalEvent","isFirstOpenResult","setIsFirstOpenResult","indexQuiz","createOnClickItemQuizes","setActivePanel","goBackInHistory","pop","bridge","goForwardInHistory","panelId","isAdVisible","setAdVisible","domain","trackingLink","ctaText","advertisingLabel","iconLink","ageRestrictions","statistics","url","type","adDate","getAnswerText","indexInAnswer","stepAnimDealyForCard","makeStepAnimDealyForCard","getClassNameForPercent","animationDelay","bannerData","ListQuizes","SpinnerView","App","results","MAX_SCORE","savePercentQuiz","useEffect","then","data","Platform","IOS","ANDROID","catch","error","setCurWidth","activeView","setActiveView","goToViewListQuestions","goToViewResult","goToPanelListQuizes","indexAge","setIndexAge","setIndexQuiz","indexResuslt","setIndexResult","setIndexesAnswers","goToViewListAgeAndQuizes","isImageDownloaded","downloadImagesArr","quiz","quizzes","setIsImageDownloaded","view","Image","isWebView","animate","sum","quizPetr1","imagePetr1","imgExample","overSideImg","quizTheEraOfPalaceCoups","imageTheEraOfPalaceCoups","ageRussianEmpire","shortTitle","mainImage","store","ReactDOM","render","era","Math","max","numberOfPassedQuizes","reduce","round","calculatePercentAge","default"],"mappings":"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","file":"static/js/main.9873403f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/contacts.da748c82.svg\";","module.exports = __webpack_public_path__ + \"static/media/rectangle.1386c6fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/candelabrum.0d4d7bb2.svg\";","module.exports = __webpack_public_path__ + \"static/media/The era of palace coups.42e7310b.png\";","module.exports = __webpack_public_path__ + \"static/media/main.96699d6f.png\";","import { CellButton } from \"@vkontakte/vkui\"\r\nimport React from \"react\"\r\n\r\nimport './ButtonWrapper.css'  \r\n\r\nconst ButtonWrapper = ({isActived, text, onClick, before, className, classNameText, isCentered, hasActive, style}) => {\r\n\r\n    return(\r\n        <CellButton \r\n            activeEffectDelay={0}\r\n            onClick={onClick} \r\n            mode=\"secondary\"\r\n            centered={isCentered} \r\n            before={before}\r\n            hasActive={hasActive}\r\n            className={`ButtonWrapper ${isActived && \"ButtonWrapper_active\"} ${className}`}\r\n            style={style}\r\n            \r\n        >\r\n            <div className={`ButtonWrapper__text ${classNameText}`}>\r\n                {text}\r\n            </div>\r\n        </CellButton>\r\n    )\r\n}\r\n\r\nexport default ButtonWrapper","import { Card, CardScroll, Panel, PanelHeader, View, CardGrid, ContentCard, Button, ScreenSpinner} from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport ButtonWrapper from '../../components/ButtonWrapper/ButtonWrapper';\r\nimport test from '../../img/ageRussianEmpire/quizPetr1/petr.png'\r\n\r\nimport svgContacts from './contacts.svg';\r\n\r\nimport './StartWindow.css';\r\n\r\n// class testClass extends React.Component {\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.props=props;\r\n//     }\r\n\r\n//     render() {\r\n//         return <StartWindow {...this.props}></StartWindow>\r\n//     }\r\n// }\r\n\r\nconst StartWindow = ({id, onClick=()=>{}, arrForPreDownload}) => {\r\n    const ID_ACTIVE_PANEL = \"ID_ACTIVE_PANEL\";\r\n    \r\n    const [screenSpinner, setScreenSpinner] = useState(null)\r\n\r\n    const openSpinner = () => {\r\n        setScreenSpinner(\r\n            <ScreenSpinner></ScreenSpinner>\r\n        )\r\n    }\r\n\r\n    \r\n    return (\r\n        <View id={id}> \r\n            <Panel separator={false}>\r\n                <div className=\"StartWindow\">\r\n                    <div className=\"StartWindow__container\">\r\n                        <img width=\"50\" height=\"50\" src={svgContacts} alt=\"contacts\"/>\r\n                        <h1 className=\"StartWindow__title\">Привет, друг!123</h1>\r\n                        <p className=\"StartWindow__text\">\r\n                            Это приложение поможет тебе проверить свои знания в области истори родной страны. Удачи!\r\n                        </p>\r\n                        <ButtonWrapper className=\"StartWindow__button\" classNameText=\"StartWindow__button-text\" isCentered={true} onClick={onClick} text=\"Поехали!\"></ButtonWrapper>\r\n                    </div>\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default StartWindow;","import React from 'react';\r\n\r\nexport function isTitleCentre ( element) {\r\n    let curWidth = document.getElementById('root').scrollWidth;\r\n    return({\r\n    stub:curWidth >= 370 ? <div style={{width:\"90px\"}}>{element} </div> :element,\r\n    text:curWidth >= 370 ? \"center\" : \"start\"\r\n    })\r\n}\r\n\r\nexport function getColNumber(curWidth) {\r\n    if(curWidth === undefined){\r\n        curWidth = document.getElementById('root').scrollWidth;\r\n    }\r\n    if(curWidth>1280){\r\n        return \"s\"\r\n    }\r\n    else if (curWidth>560){\r\n        return \"m\"\r\n    }\r\n    else {\r\n        return \"l\"\r\n    } \r\n}\r\n","import { CardGrid, ContentCard, Div } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport './ListCard.css'\r\nimport { getColNumber } from '../../help';\r\n\r\nconst ListCard = ( { info, curWidth, cardClick = (index) => null } ) => {\r\n    return (\r\n        <Div>\r\n            <div className=\"ListCard\">\r\n                <CardGrid size={getColNumber(curWidth)}>\r\n                {\r\n                    info.map((record,i) => (\r\n                        <ContentCard\r\n                            header={\r\n                                <div className=\"ListCard__title\">\r\n                                    <div>{record.title}</div>\r\n                                    <div>{record.percentProgress}/{record.numberOfQuestions}</div>\r\n                                </div>\r\n                            }\r\n                            mode={\"tint\"}\r\n                            onClick={cardClick(i)}\r\n                            image={record.imageSrc}\r\n                            caption={record.description}\r\n                            className=\"ListCard__Card\"\r\n                        />\r\n                    ))\r\n                }\r\n                </CardGrid>\r\n            </div>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default ListCard","import { PanelHeader, PanelHeaderBack, PanelHeaderClose, PanelHeaderContent  } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport { isTitleCentre } from '../../help';\r\nimport './Header.css'\r\n\r\nconst Header = ({curWidth, leftBtnFunc, isClose, text, icon, click}) => {\r\n    \r\n    let left \r\n    let justifyContent = isTitleCentre(curWidth).text;\r\n    let cursor = \"inherit\";\r\n\r\n    if (isClose) {\r\n        left = isTitleCentre(<PanelHeaderClose  onClick={leftBtnFunc} className=\"Header__button-back\" ></PanelHeaderClose>).stub \r\n    }\r\n    else if (leftBtnFunc !== undefined ){\r\n        left = isTitleCentre(<PanelHeaderBack onClick={leftBtnFunc} className=\"Header__button-back\" ></PanelHeaderBack>).stub\r\n    }\r\n    else{\r\n        left = isTitleCentre(curWidth).stub\r\n    }\r\n\r\n    if(click !== undefined){\r\n        cursor=\"pointer\"\r\n    }\r\n\r\n    return(\r\n        <PanelHeader                     \r\n            separator={false}\r\n            visor={true}\r\n            // transparent={true}\r\n            fixed={true}\r\n            left={ left }\r\n            >\r\n\r\n            <div className=\"Header__inside\" style={{justifyContent, cursor:cursor}} onClick={click}>\r\n                {text}\r\n                {icon}\r\n            </div>\r\n\r\n        </PanelHeader>\r\n    )\r\n}\r\n\r\nexport default Header","import { PanelHeader, Panel, Div } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport './ListAge.css'\r\nimport { isTitleCentre } from '../../help';\r\nimport ListCard from '../../components/ListCard/ListCard'\r\nimport Header from '../../components/Header/Header'\r\n\r\n\r\nconst ListAge = ({id, eras,curWidth, screenSpinner, createOnClickItemAge=index=>null}) => {\r\n\r\n    const ID_ACTIVE_PANEL = \"ID_ACTIVE_PANEL\";\r\n\r\n\r\n    return (\r\n        <Panel id={ID_ACTIVE_PANEL}>\r\n            \r\n            {\r\n            // screenSpinner ||\r\n\r\n            <div className=\"ListAge\">\r\n\r\n                <Header\r\n                    text=\"Выбирете эпоху\"\r\n                ></Header> \r\n\r\n                <ListCard\r\n                    info={eras}\r\n                    curWidth={curWidth}\r\n                    cardClick={createOnClickItemAge}>\r\n                </ListCard>\r\n\r\n            </div>\r\n            }\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default ListAge;\r\n","import { Icon24Back, Icon28ChevronBack, Icon28UsersOutline, Icon28ChevronDownOutline } from '@vkontakte/icons';\r\nimport { ModalRoot, Panel, PanelHeaderContext, PanelHeaderContent, platform, Text, Div, CardGrid, Cell, List, ModalPage } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport AnswerOption from '../../../components/AnswerOption/AnswerOption';\r\nimport ButtonWrapper from '../../../components/ButtonWrapper/ButtonWrapper';\r\nimport Header from '../../../components/Header/Header';\r\nimport ListCard from '../../../components/ListCard/ListCard';\r\nimport BottomSheet from './BottomSheet/BottomSheet';\r\n\r\nimport \"./IteamListQuestion.css\";\r\n\r\nconst osName = platform();\r\n\r\nconst IteamListQuestion = ({ id, question,\r\n    numberCurrentQuestion, countQuestions, indexAnswer,name,\r\n    goToPrevQuestion, goToNextQuestion,isModalOpen,isClicked,\r\n    changeModal = () => {}, setNotActiveBackgoundToAnswerButton = () => {} }) => {\r\n\r\n    const [isImgInfoOpen, setisImgInfoOpen] = useState(false)\r\n\r\n    return (\r\n        <Panel id={id} separator={false} name={name}>\r\n            <div className=\"IteamListQuestion\">\r\n\r\n                <Header\r\n                    isClose={numberCurrentQuestion === 1 ? true : false}\r\n                    leftBtnFunc={goToPrevQuestion}\r\n                    text={numberCurrentQuestion + \" из \" + countQuestions} \r\n                    icon={<Icon28ChevronDownOutline style={{ transform: `rotate(${isModalOpen ? '180deg' : '0'})`, transition:\"0.5s\" }} />}\r\n                    click={changeModal}\r\n                >              \r\n                    \r\n                </Header>\r\n\r\n                \r\n                <Div className=\"IteamListQuestion__content\">\r\n\r\n                    <div className=\"IteamListQuestion__image-container\" onClick={() => {setisImgInfoOpen(!isImgInfoOpen)}}>\r\n\r\n                        <img\r\n                            className=\"IteamListQuestion__image\" \r\n                            src={question.imageSrc}\r\n                        />\r\n                        \r\n                        <CSSTransition \r\n                            in={isImgInfoOpen} \r\n                            timeout={200}   \r\n                            classNames=\"IteamListQuestion__image-info\"\r\n                            onEnter={() => {setisImgInfoOpen(true)}}\r\n                            onExited={() => {setisImgInfoOpen(false)}}>\r\n                            <div className=\"IteamListQuestion__image-info\">\r\n                                <Div className=\"IteamListQuestion__image-description\">\r\n                                    Илья Репин.<br/>\"Осенний букет\"\r\n                                </Div>\r\n                            </div>\r\n                        </CSSTransition>\r\n\r\n                    </div>\r\n\r\n                    <Text weight=\"regular\" className=\"IteamListQuestion__question\">{question.questionText}</Text> \r\n\r\n                    <div className=\"IteamListQuestion__answer-options\">\r\n                        {\r\n                            question.answerOptions.map((answer, i) => (\r\n                                <ButtonWrapper\r\n                                    onClick={() => {\r\n                                        setNotActiveBackgoundToAnswerButton();\r\n                                        goToNextQuestion(i);\r\n                                    }}\r\n                                    isActived={indexAnswer === i}\r\n                                    text={answer.text}\r\n                                    className={`IteamListQuestion__answer ${isClicked?\"IteamListQuestion__answer-active\":\"\"}` }\r\n                                    // style={testStyle}\r\n                                >\r\n                                </ButtonWrapper>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </Div>\r\n            </div>\r\n        </Panel>\r\n    )\r\n};\r\n\r\nexport default IteamListQuestion;\r\n","import React from \"react\";\r\nimport { ANDROID, IOS, ModalPageHeader, useAdaptivity, usePlatform, PanelHeaderButton, PanelHeaderClose, ViewWidth } from \"@vkontakte/vkui\";\r\nimport './ModalPageHead.css'\r\nimport { isTitleCentre } from \"../../help\";\r\nimport { Icon24Dismiss } from \"@vkontakte/icons\";\r\n\r\n\r\nconst ModalPageHead = ({text, curWidth, onClose = () => {}}) => {\r\n\r\n    let textAlign = isTitleCentre(curWidth).text;\r\n    const { viewWidth } = useAdaptivity();\r\n    const isDesktop = !(viewWidth >= ViewWidth.SMALL_TABLET);    \r\n    return(\r\n        <ModalPageHeader\r\n            // separator={false}\r\n            // visor={true}\r\n            // transparent={true}\r\n            right={isDesktop && <Icon24Dismiss className=\"ModalPageHead__button-close\" onClick={onClose}/>}\r\n            left={isDesktop && <PanelHeaderClose className=\"ModalPageHead__button-pug\"/>}\r\n        >\r\n         <div className=\"ModalPageHead__inside\" style={{textAlign}}>\r\n            {text}\r\n        </div>\r\n        </ModalPageHeader>\r\n    )\r\n}\r\n\r\nexport default ModalPageHead","import { Alert } from \"@vkontakte/vkui\"\r\nimport React from 'react';\r\nimport './AlertWrapper.css'\r\n\r\nconst AlertWrapper = ({header, description, leftText, children, leftFunc = () => { }, rightText, rightFunc = () => { }, onClose = () => { }}) => {\r\n  // console.log(leftText)\r\n  return(\r\n    <Alert    \r\n      header={header}\r\n      description={description}\r\n      actionsLayout=\"horizontal\"\r\n      onClose={onClose}\r\n      actions={[{\r\n          title: `${leftText}`,\r\n          autoclose: true,\r\n          mode: 'cancel',\r\n          action: () => leftFunc()\r\n        }, {\r\n          title: `${rightText}`,\r\n          autoclose: true,\r\n          mode: 'destructive',\r\n          action: () => rightFunc(),\r\n        }]}\r\n      >\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default AlertWrapper","import { View,ModalRoot,ModalPage,List, SimpleCell, Div, usePlatform, ViewWidth, Group } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport IteamListQuestion from './IteamListQuestion/IteamListQuestion';\r\nimport ModalPageHead from '../../components/ModalPageHead/ModalPageHead';\r\nimport vkBridge from '@vkontakte/vk-bridge'\r\nimport AlertWrapper from '../../components/AlertWrapper/AlertWrapper';\r\nimport './ListQuestions.css'\r\n\r\nconst MODAL_ID = \"MODAL_ID\"\r\nconst PANEL_FIRST_ID=\"IteamListQuestion-0\"\r\n\r\n\r\n\r\nconst ListQuestions = ({id, curWidth, arrQuestions, onBack=()=>{}, onFinish=totalScore=>{}}) => {\r\n    const createIdActivePanel = index => `IteamListQuestion-${index}`;\r\n    const [history, setHistory] = useState([PANEL_FIRST_ID]);\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    // логика хранения ответов\r\n    const getInitStateAnswers = () => [\r\n        // ...arrQuestions.map(question => (\r\n        //     // questionText: question.questionText.substring(0, 15),\r\n        //     // indexAnswer: -1\r\n        //     -1\r\n        // ))\r\n        -1,-1,-1,-1,-1,-1,-1,-1\r\n    ];\r\n\r\n    const [stateAnswers, setStateAnswers] = useState( getInitStateAnswers());\r\n\r\n    const giveAnswer = (indexQuestion, indexAnswer) => {\r\n        stateAnswers[indexQuestion] = indexAnswer;\r\n        setStateAnswers([...stateAnswers]);\r\n    }\r\n\r\n    const calculateScore = () => { \r\n        // let score = 0;\r\n        // stateAnswers.map((answer)\r\n\r\n        // )\r\n        // return stateAnswers.reduce((sum, dataAnswer, indexQuestion) => {\r\n        //     if (dataAnswer === -1) {\r\n        //         return sum;\r\n        //     }\r\n\r\n        //     return sum + arrQuestions[indexQuestion].answerOptions[dataAnswer.indexAnswer].score;\r\n        // }, 0);\r\n    }\r\n\r\n    const resetStateAnswers = () => setStateAnswers(getInitStateAnswers());\r\n\r\n    // логика переключения вопросов\r\n    const [indexQuestion, setIndexQuestion] = useState(0);\r\n    const setIndexQuestionAndHistory = (newIndex) => {\r\n        setIndexQuestion(newIndex)\r\n        changeHistory(newIndex)\r\n    }\r\n\r\n    const resetData = () => {\r\n        resetStateAnswers();\r\n        setIndexQuestionAndHistory(0);\r\n    }\r\n\r\n    const createGoToNextQuestion = (indexQuestion, maxLength) => (indexAnswer) => {\r\n        giveAnswer(indexQuestion, indexAnswer);\r\n\r\n        if (indexQuestion < maxLength - 1) {\r\n            setIndexQuestionAndHistory(indexQuestion + 1);\r\n        } else {\r\n            onFinishWithAlert();\r\n        }\r\n        // setIsClicked(false);\r\n    }\r\n\r\n    const createGoToPrevQuestion = (indexQuestion) => () => {\r\n        if (indexQuestion > 0) {\r\n            setIndexQuestionAndHistory(indexQuestion - 1);\r\n        } else {\r\n            openCloseListQuestionsAleret();\r\n        }\r\n    }\r\n\r\n    // логика перехода к любому вопросу\r\n    const [lastIndexQuestion, setLastIndexQuestion] = useState(-1);\r\n\r\n    const createGoToQuestionWithoutAnswer = (toIndexQuestion) => {\r\n        setNotActiveBackgoundToAnswerButton()\r\n        if (indexQuestion != toIndexQuestion)\r\n        {\r\n            // setLastIndexQuestion(fromIndexQuestion);\r\n            setIndexQuestionAndHistory(toIndexQuestion);\r\n        }   \r\n    }\r\n\r\n    const goToLastQuestion = () => {\r\n        setIndexQuestionAndHistory(lastIndexQuestion);\r\n        setLastIndexQuestion(-1);\r\n    }\r\n\r\n    // Работа с модальным окном\r\n    const [isModalOpen, setModalOpen] = useState(null)\r\n    const changeModal = () => {\r\n        if(isModalOpen === MODAL_ID){\r\n            setModalOpen(null)\r\n        }\r\n        else{\r\n            setModalOpen(MODAL_ID)\r\n        }\r\n    }\r\n\r\n    // История\r\n    const changeHistory = (nextIndex) => { \r\n        setHistory()\r\n\t\tlet his = [];\r\n        for(let i=0;i<nextIndex+1;i++){\r\n            his.push(createIdActivePanel(i))\r\n        }\r\n        setHistory(his)\r\n\r\n\t\tif (createIdActivePanel(nextIndex) === PANEL_FIRST_ID) {\r\n\t\t\tvkBridge.send('VKWebAppDisableSwipeBack');\r\n\t\t  }\r\n        else{\r\n            vkBridge.send('VKWebAppEnableSwipeBack');\r\n        }\r\n\t}\r\n\r\n    //Alert\r\n    const onFinishWithAlert = () => {\r\n        isAllAnswered() ? onFinish(stateAnswers) : openFinishAlert()\r\n    }\r\n    const isAllAnswered = () => {\r\n        // console.log(stateAnswers)\r\n        for (let i=0;i<stateAnswers.length;i++){\r\n            if(stateAnswers[i] === -1) return false;\r\n        }\r\n        return true\r\n    }\r\n    const openCloseListQuestionsAleret = () => {\r\n\r\n        setAlert(\r\n            <AlertWrapper\r\n                header=\"Уверены, что хотите выйти?\"\r\n                leftText={\"Отмена\"}\r\n                rightText={\"Выйти\"}\r\n                rightFunc={ () =>  {onBack(); resetData()}}\r\n                onClose={()=>{setAlert(null)}}\r\n            >\r\n            </AlertWrapper>\r\n    )}\r\n    const openFinishAlert = () => {  \r\n        // console.log(stateAnswers)      \r\n        setAlert(\r\n\r\n            <AlertWrapper\r\n                header=\"Вы ответили не на все вопросы\"\r\n                leftText={\"Отмена\"}\r\n                rightText={\"Завершить\"}\r\n                rightFunc={ () => {onFinish(stateAnswers)}}\r\n                onClose={()=>{setAlert(null)}}\r\n            >\r\n            </AlertWrapper>\r\n\r\n    )}\r\n        \r\n    // const closeAlert = () => {\r\n    //     setAlert(null)\r\n    // }\r\n\r\n    //Модальное окно\r\n    const modal = (\r\n        <ModalRoot activeModal={isModalOpen} onClose={changeModal}>\r\n            <ModalPage \r\n                id={MODAL_ID}\r\n                settlingHeight={75}\r\n                header={\r\n                    <ModalPageHead text=\"Вопросы\" curWidth={curWidth} onClose={changeModal}></ModalPageHead>\r\n                }>\r\n                <Div>\r\n                {\r\n                    arrQuestions.map(({questionText, indexAnswer}, i, arr) => (\r\n                        <SimpleCell \r\n                            key={i}\r\n                            onClick={() => {createGoToQuestionWithoutAnswer(i); changeModal()}}\r\n                            className={`ListQuestions__modal-el ${stateAnswers[i] !== -1 ? 'ListQuestions__modal-el_answered':''}`}>\r\n                            <div className=\"ListQuestions__modal-el__text\">\r\n                                {questionText}\r\n                            </div>\r\n                        </SimpleCell>\r\n                    ))\r\n                    \r\n                }\r\n                <SimpleCell\r\n                    hasActive={false}\r\n                    onClick={ () => {onFinishWithAlert()}}\r\n                    className=\"ListQuestions__modal-el\">\r\n                    <div className=\"ListQuestions__modal-el__finish-btn\">\r\n                       Завершить\r\n                    </div>\r\n                </SimpleCell>\r\n                </Div>\r\n            </ModalPage>\r\n\r\n        </ModalRoot>\r\n    )\r\n\r\n    const setNotActiveBackgoundToAnswerButton = () =>{\r\n        let panel = document.getElementsByName(createIdActivePanel(indexQuestion));\r\n        const buttons = panel[0].getElementsByClassName(\"IteamListQuestion__answer\");\r\n\r\n        for(let i=0;i<buttons.length;i++){\r\n            console.log(buttons[i])\r\n            buttons[i].style.backgroundColor = \"var(--main-second-bg-color)\"\r\n        }\r\n    }\r\n    return (\r\n        <View id={id} \r\n            activePanel={createIdActivePanel(indexQuestion)} \r\n            modal={modal} \r\n            history={history} \r\n            onSwipeBack={createGoToPrevQuestion(indexQuestion)}\r\n            popout={alert}>\r\n            {\r\n                arrQuestions.map((question, i, arr) =>(\r\n                    <IteamListQuestion\r\n                        key={i}\r\n                        id={createIdActivePanel(i)}\r\n                        name={createIdActivePanel(i)}\r\n                        curWidth={curWidth}\r\n\r\n                        question={question}\r\n                        numberCurrentQuestion={i+1}\r\n                        countQuestions={arr.length}\r\n\r\n                        // stateAnswers={stateAnswers}\r\n                        indexAnswer={stateAnswers[i]}\r\n\r\n                        lastIndexQuestion={lastIndexQuestion}\r\n                        currentIndexQuestion={i}\r\n                        goToLastQuestion={goToLastQuestion}\r\n                        // goToQuestionWithoutAnswer={createGoToQuestionWithoutAnswer(i)}\r\n\r\n                        goToNextQuestion={createGoToNextQuestion(i, arr.length)}\r\n                        goToPrevQuestion={createGoToPrevQuestion(i)}\r\n\r\n                        onFinish={() => onFinishWithAlert()}\r\n                        \r\n                        changeModal={changeModal}\r\n                        changeHistory={changeHistory}\r\n                        isModalOpen={isModalOpen}\r\n\r\n                        setNotActiveBackgoundToAnswerButton={setNotActiveBackgoundToAnswerButton}\r\n                    />\r\n                ))\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ListQuestions;\r\n","function makeEaseOut(timing) {\r\n  return function (timeFraction) {\r\n    return 1 - timing(1 - timeFraction);\r\n  }\r\n}\r\n\r\nconst easeOut = makeEaseOut((timeFraction) => timeFraction);\r\n\r\nexport default easeOut;\r\n","import React from \"react\";\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport { Button, CellButton, Div } from \"@vkontakte/vkui\";\r\n\r\nimport './ResultButtons.css';\r\nimport { Icon28AddAwardOutline } from \"@vkontakte/icons\";\r\nimport { Icon56LikeOutline } from '@vkontakte/icons';\r\nimport { Icon28ArticleOutline } from '@vkontakte/icons';\r\nimport { Icon24List } from '@vkontakte/icons';\r\nimport { Icon28RefreshOutline } from '@vkontakte/icons';\r\nimport { Icon56ArticleOutline } from '@vkontakte/icons';\r\nimport { Icon24Globe } from '@vkontakte/icons';\r\nimport { Icon28ShareExternalOutline } from '@vkontakte/icons';\r\nimport ButtonWrapper from \"../../../components/ButtonWrapper/ButtonWrapper\";\r\n\r\nconst ResultButtons = ({onAgain=()=>{}, onGoToAnswersQuestion=()=>{}, goToViewListAndQuizes=()=>{},onBack = () => { }}) => {\r\n    const sendToHistory = (image) => {\r\n        console.log(image);\r\n\r\n        bridge.send(\"VKWebAppShowStoryBox\", {\r\n            \"background_type\": \"image\",\r\n            \"url\": \"https://nikita-jpg.github.io\" + image\r\n        });\r\n    }\r\n\r\n    const sendToWall = (image) => {\r\n        window.open(\"https://vk.com/share.php?url=https://nikita-jpg.github.io\" + image);\r\n    }\r\n\r\n    const iconSize = 28;\r\n\r\n    return (\r\n        <div className=\"Result-buttons__container\">\r\n            {/* <Div> */}\r\n\r\n                <ButtonWrapper\r\n                    text=\"К вопросам\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon24List width={iconSize} height={iconSize} style={{color:\"var(--main-yellow-color)\"}}/>}\r\n                    onClick={onGoToAnswersQuestion}\r\n                >\r\n                </ButtonWrapper>\r\n\r\n                <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"К эпохам\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon24Globe width={iconSize} height={iconSize} style={{color:\"var(--main-purple-color)\"}}/>}\r\n                    onClick={goToViewListAndQuizes}\r\n                >\r\n                </ButtonWrapper>\r\n\r\n                <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"Ещё раз\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon28RefreshOutline width={iconSize} height={iconSize} style={{color:\"var(--main-green-color)\"}}/>}\r\n                    onClick={onAgain}\r\n                >\r\n                </ButtonWrapper>\r\n\r\n                {/* <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"К вопросам\"\r\n                    className=\"Result-buttons\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon24List width={iconSize} height={iconSize} style={{color:\"var(--main-yellow-color)\"}}/>}\r\n                >\r\n                </ButtonWrapper> */}\r\n\r\n                <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"Поделиться\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon28ShareExternalOutline width={iconSize} height={iconSize} style={{color:\"var(--main-blue-color)\"}}/>}\r\n                >\r\n                </ButtonWrapper>\r\n\r\n\r\n                {/* <button className=\"Result-buttons Result-buttons_favorite\">Поддержать</button>\r\n                <button \r\n                    onClick={onAgain} \r\n                    className=\"Result-buttons Result-buttons_refresh\">\r\n                    Ещё раз\r\n                </button>\r\n                <button className=\"Result-buttons Result-buttons_share\">Поделиться</button>\r\n                <button \r\n                    onClick={onGoToAnswersQuestion} \r\n                    className=\"Result-buttons Result-buttons_format-list-bulleted\">\r\n                    К вопросам\r\n                </button> */}\r\n            {/* </Div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultButtons;\r\n\r\n{/* \r\n            <Button\r\n                size=\"l\"\r\n                className=\"Result-buttons\"\r\n                before={<Icon56ArticleOutline width={28} height={28} style={{color:\"var(--main-yellow-color)\"}} />}\r\n            >\r\n                <div className=\"Result-buttons__text\">\r\n                    К вопросам\r\n                </div>\r\n            </Button> */}","import { Div, FixedLayout } from '@vkontakte/vkui';\r\nimport React, { createRef, useEffect, useState } from 'react';\r\nimport animate from '../../../anime/animate';\r\nimport easeOut from '../../../anime/easeOut';\r\nimport BlackBackground from '../../../components/BlackBackground/BlackBackground';\r\nimport ButtonWrapper from '../../../components/ButtonWrapper/ButtonWrapper';\r\nimport Arrow, { colorsArrow, directionArrow } from './Arrow';\r\nimport { Icon16CheckCircleOutline } from '@vkontakte/icons';\r\nimport { Icon16CancelCircleOutline } from '@vkontakte/icons';\r\n\r\nimport \"./ItemAnswerQuestion.css\";\r\n\r\nconst ItemAnswerQuestion = ({indexQuestion, question, indexRightAnswer, indexUserAnswer, openAlert = () => {} }) => {\r\n\r\n    const ICON_SIZE = 24;\r\n\r\n    return (\r\n        \r\n        <Div>\r\n            <ButtonWrapper\r\n                onClick={ () => {openAlert(indexQuestion)}}\r\n                text={question.questionText}\r\n                classNameText=\"ItemAnswerQuestion__button-text\"\r\n                hasActive={false}\r\n                before={indexRightAnswer === indexUserAnswer \r\n                    ? <Icon16CheckCircleOutline height={ICON_SIZE} width={ICON_SIZE} style={{color:\"var(--main-green-color)\"}}/> \r\n                    : <Icon16CancelCircleOutline height={ICON_SIZE} width={ICON_SIZE} style={{color:\"var(--main-red-color)\"}}/> }\r\n            >\r\n            </ButtonWrapper>\r\n        </Div>\r\n\r\n    )\r\n}\r\n\r\nexport default ItemAnswerQuestion;\r\n","import { Icon24Back } from '@vkontakte/icons';\r\nimport { Alert, Div, Panel, PanelHeader, PanelHeaderButton, View } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport Arrow from './ItemAnswerQuestion/Arrow';\r\n// import './ItemAnswerQuestion/ItemAnswerQuestion.css';\r\n\r\nimport \"./AnswersQuestions.css\";\r\nimport ItemAnswerQuestion from './ItemAnswerQuestion/ItemAnswerQuestion';\r\nimport ButtonWrapper from '../../components/ButtonWrapper/ButtonWrapper';\r\n\r\nconst AnswersQuestions = ({id, questions, indexesAnswers, onBack=()=>{}, openAlert=()=>{}}) => {\r\n\r\n    return (\r\n        <Panel id={id}>\r\n\r\n            <Header\r\n                text=\"Вопросы\"\r\n                leftBtnFunc={onBack}\r\n            >\r\n            </Header>\r\n\r\n            <div style={{display:\"flex\",justifyContent:\"center\"}}>\r\n                <div className=\"AnswersQuestions\">\r\n                {\r\n                    questions.map((q, i) => (\r\n                        <ItemAnswerQuestion\r\n                            indexQuestion={i}\r\n                            question={q}\r\n                            indexRightAnswer={questions[i].answerOptions.findIndex(a => a.score === 1)}\r\n                            indexUserAnswer={indexesAnswers[i]}\r\n                            openAlert={openAlert}\r\n                        />\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default AnswersQuestions;\r\n","import { Icon24Back } from \"@vkontakte/icons\";\r\nimport { Alert, ContentCard, Panel, PanelHeader, PanelHeaderButton, PromoBanner, useAdaptivity, View } from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport \"./Result.css\";\r\nimport \"../../components/ListCard/ListCard.css\"\r\nimport animate from \"../../anime/animate\";\r\nimport easeOut from \"../../anime/easeOut\";\r\n// import ListQuizes from \"../../components/ListQuizes/ListQuizes\";\r\nimport ResultButtons from \"./ResultButtons/ResultButtons\";\r\nimport ListCard from \"../../components/ListCard/ListCard\";\r\nimport AnswersQuestions from \"../AnswersQuestions/AnswersQuestions\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\n\r\nconst Result = ({ id, year, percent, historicalEvent, quizes, indexesAnswers, questions, isFirstOpenResult, setIsFirstOpenResult, indexQuiz,\r\n    onBack = () => {}, createOnClickItemQuizes = (index) => null,\r\n    onAgain=()=>{}, onGoToAnswersQuestion=()=>{}, goToViewListAndQuizes=()=>{} }) => {\r\n\r\n\r\n\r\n    //Работа с панелями\r\n        const PANEL_RESULT = \"PANEL_RESULT\";\r\n        const PANEL_ANSWERS_QUESTIONS = \"VIEW_ID_ANSWERS_QUESTIONS\";\r\n        const [activePanel, setActivePanel] = useState(PANEL_RESULT)\r\n\r\n        const goToPanelAnswers = () => {\r\n            goForwardInHistory(PANEL_ANSWERS_QUESTIONS)\r\n            setActivePanel(PANEL_ANSWERS_QUESTIONS)\r\n        }\r\n\r\n\r\n\r\n    //История\r\n        const [history, setHistory] = useState([PANEL_RESULT]);\r\n\r\n        const goBackInHistory = () => {\r\n\t\t\tlet his = history;\r\n\t\t\this.pop()\r\n\t\t\tif (activePanel === PANEL_RESULT) {\r\n\t\t\t\tbridge.send('VKWebAppEnableSwipeBack');\r\n\t\t\t}\r\n\t\t\tsetHistory(his)\r\n            setActivePanel(history[history.length - 1])\t\r\n\t\t}\r\n\r\n\t\tconst goForwardInHistory = (panelId) => { \r\n\t\t\tlet his = history;\r\n\t\t\this.push(panelId);\r\n\t\t\tif (activePanel === PANEL_RESULT) {\r\n\t\t\t\tbridge.send('VKWebAppDisableSwipeBack');\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n    //Кнопки\r\n        // Переход к эпохам\r\n        const goToViewListAndQuizesWrapper = () => {\r\n            setIsFirstOpenResult(true)\r\n            goToViewListAndQuizes()\r\n        }\r\n        // Ещё раз\r\n        const modifyIsFirstOpenResult = (f) => (...args) => {\r\n            setIsFirstOpenResult(true);\r\n            return f(...args);\r\n        }\r\n\r\n\r\n        // const [testAnim,setTestAnim] = useState(false)\r\n    //Анимация \r\n        const getClassNameForPercent = (percent) => {\r\n            if (percent <= 4) {\r\n                return \"Result__points-postfix_bad\";\r\n            }\r\n\r\n            if (percent <= 6) {\r\n                return \"Result__points-postfix_normal\";\r\n            }\r\n\r\n            return \"Result__points-postfix_good\";\r\n        }\r\n\r\n        // const HEIGHT_HEADER = 60;\r\n        // const HEIGHT_YEAR = 76;\r\n        // const WIDTH_CHAR_IN_YEAR = 58;\r\n        // const WIDTH_PERCENT = 78;\r\n        // const WIDTH_YEAR = WIDTH_CHAR_IN_YEAR * year.length;\r\n        // const WIDTH_POSTFIX = WIDTH_CHAR_IN_YEAR * String(percent).length;\r\n        // const WIDTH_PRETFIX = WIDTH_YEAR - WIDTH_POSTFIX;\r\n        // const PADDING_LEFT_AND_RIGHT = 10;\r\n\r\n        \r\n        // const stringPrefix = String(year).replace(String(percent), \"\");\r\n        // const widthContent = document.documentElement.clientWidth - PADDING_LEFT_AND_RIGHT * 2;\r\n\r\n        // const shiftX = WIDTH_YEAR + WIDTH_PERCENT > widthContent\r\n        //     ?(widthContent - WIDTH_YEAR) / 2\r\n        //     :WIDTH_PERCENT / 2;\r\n\r\n        // let initialTransitionYearX;\r\n\r\n        // if (WIDTH_YEAR + WIDTH_PERCENT > widthContent) {\r\n        //     initialTransitionYearX = (widthContent - WIDTH_POSTFIX - WIDTH_PERCENT) / 2 + (WIDTH_YEAR + WIDTH_PERCENT - widthContent);\r\n        // } else {\r\n        //     initialTransitionYearX = WIDTH_PRETFIX / 2;\r\n        // }\r\n\r\n\r\n\r\n\r\n    //Реклама\r\n        const [isAdVisible, setAdVisible] = useState(true)\r\n        const [adDate,setAdDate] = useState({\r\n            title: 'Заголовок',\r\n            domain: 'vk.com',\r\n            trackingLink: 'https://vk.com',\r\n            ctaText: 'Перейти',\r\n            advertisingLabel: 'Реклама',\r\n            iconLink: 'https://sun9-7.userapi.com/c846420/v846420985/1526c3/ISX7VF8NjZk.jpg',\r\n            description: 'Описание рекламы',\r\n            ageRestrictions: \"14+\",\r\n            statistics: [\r\n              { url: '', type: 'playbackStarted' },\r\n              { url: '', type: 'click' }\r\n            ]\r\n          })\r\n\r\n        // const [adDate,setAdDate] = useState(null)\r\n        // const getAdData = () => {\r\n        //     bridge.send('VKWebAppGetAds')\r\n        //         .then((promoBannerProps) => {\r\n        //             setAdDate(promoBannerProps)\r\n        //             setAdVisible(true);\r\n        //         })\r\n        //         .catch(error => console.log(error))\r\n        //         .finally(()=>{\r\n        //             console.log(\"final\")\r\n        //         })\r\n        // }\r\n        // getAdData();\r\n\r\n    \r\n\r\n    //Alert\r\n        const getAnswerText = (indexQuestion, indexInAnswer) => {\r\n            if (indexesAnswers[indexQuestion] === -1) return \"Вы не ответили\"\r\n            return `${questions[indexQuestion].answerOptions[indexInAnswer].text}`;\r\n        }\r\n\r\n        const [alert, setAlert] = useState(null)\r\n        const openAlert = (indexQuestion) => {\r\n            const indexRightAnswer = questions[indexQuestion].answerOptions.findIndex(a => a.score === 1);\r\n            const indexUserAnswer = indexesAnswers[indexQuestion];\r\n\r\n            setAlert(\r\n            <div className=\"AnswersQuestions__alert_big\">\r\n                <Alert\r\n                    // style={{width:\"710px\"}}   \r\n                    actionsLayout={\"horizontal\"}\r\n                    onClose={() => {console.log(document.getElementsByClassName(\"vkuiAlert--ios\")); setAlert(null)}}\r\n                    actions={[{\r\n                        title:\"Закрыть\",\r\n                        autoclose:true,\r\n                        mode:\"cancel\"\r\n                    }]}\r\n                >\r\n                    <div className=\"AnswersQuestions__alert\">\r\n                        <div className=\"AnswersQuestions__alert__answers\">\r\n\r\n                            {\r\n                                indexUserAnswer !== indexRightAnswer &&\r\n                                <div className=\"AnswersQuestions__alert__answer\">\r\n                                    <div className=\"AnswersQuestions__alert__title-answer-wrap AnswersQuestions__alert__title-answer-wrap_bad\">\r\n                                        <div\r\n                                            className=\"AnswersQuestions__alert__title-answer AnswersQuestions__alert__title-answer_bad\"\r\n                                            >Ваш ответ\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        className=\"AnswersQuestions__alert__text-answer\"\r\n                                    >\r\n                                        {getAnswerText(indexQuestion, indexUserAnswer)}\r\n                                    </div>\r\n                                    {/* <div className=\"AnswersQuestions__alert__text-answer\">\r\n                                        {getAnswerText(indexQuestion)}\r\n                                    </div> */}\r\n                                </div>\r\n                            }\r\n                        \r\n                            <div className=\"AnswersQuestions__alert__answer\">\r\n                                <div className=\"AnswersQuestions__alert__title-answer-wrap AnswersQuestions__alert__title-answer-wrap_good\">\r\n                                    <div\r\n                                        className=\"AnswersQuestions__alert__title-answer AnswersQuestions__alert__title-answer_good\"\r\n                                    >\r\n                                        {\r\n                                            indexUserAnswer === indexRightAnswer\r\n                                                ? \"Ваш ответ верен\"\r\n                                                : \"Правильный ответ\"\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div\r\n                                    className=\"AnswersQuestions__alert__text-answer\"\r\n                                >\r\n                                    {getAnswerText(indexQuestion, indexRightAnswer)}\r\n                                </div>\r\n                            </div>\r\n                                \r\n                            <div className=\"AnswersQuestions__alert__answer\"> \r\n                                <div className=\"AnswersQuestions__alert__title-answer-wrap AnswersQuestions__alert__title-answer-wrap_normal\">\r\n                                    <div\r\n                                        className=\"AnswersQuestions__alert__title-answer AnswersQuestions__alert__title-answer_normal\"\r\n                                    >Остальные варианты</div>\r\n                                </div> \r\n\r\n                                {\r\n                                    questions[indexQuestion].answerOptions.map((answer, i) => {\r\n                                        if (i === questions[indexQuestion].answerOptions.findIndex(a => a.score === 1) || i === indexesAnswers[indexQuestion]) {\r\n                                            return null;\r\n                                        }\r\n\r\n                                        return (\r\n                                        <div\r\n                                            className=\"AnswersQuestions__alert__text-answer\"\r\n                                        >\r\n                                            {answer.text}   \r\n                                        </div>\r\n                                            // <p key={i} className=\"AnswersQuestions__alert__text-answer\">\r\n                                            //     {answer.text}\r\n                                            // </p>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        let startAnimDealyForCard = 1;\r\n        let stepAnimDealyForCard = -0.5;\r\n\r\n        const makeStepAnimDealyForCard = () =>{\r\n            stepAnimDealyForCard+=0.5;\r\n            return stepAnimDealyForCard;\r\n        }\r\n\r\n    return (\r\n        <View \r\n            id={id} \r\n            activePanel={activePanel} \r\n            popout={alert} \r\n            onSwipeBack={goBackInHistory}\r\n            history={history}>\r\n\r\n            <Panel id={PANEL_RESULT} onClose={()=>{setIsFirstOpenResult(false)}}>\r\n                <div>\r\n                    <Header></Header>\r\n\r\n                    <div className=\"Result\">\r\n\r\n                        {/* <div className={`Result__year ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} > */}\r\n                            <span className={`Result__points ${getClassNameForPercent(percent)} ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:\"calc(\"+(startAnimDealyForCard+makeStepAnimDealyForCard())+\"*var(--main-delay-anim-result))\"}}>\r\n                                    {percent}\r\n                                <span>/{questions.length}</span>\r\n                            </span>\r\n                        {/* </div> */}\r\n\r\n                        <div className={`Result__buttons ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:\"calc(\"+(startAnimDealyForCard+makeStepAnimDealyForCard())+\"*var(--main-delay-anim-result))\"}}>\r\n                            <ResultButtons \r\n                                onAgain={modifyIsFirstOpenResult(onAgain)}\r\n                                onGoToAnswersQuestion={ () => { setIsFirstOpenResult(false); goToPanelAnswers()}}\r\n                                goToViewListAndQuizes={goToViewListAndQuizesWrapper}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        {\r\n                            isAdVisible &&\r\n                            <div className={`Result__adds ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:\"calc(\"+(startAnimDealyForCard+makeStepAnimDealyForCard())+\"*var(--main-delay-anim-result))\"}}>\r\n                                <PromoBanner bannerData={adDate} onClose={() => {setAdVisible(false)}}></PromoBanner>\r\n                            </div>\r\n                        }\r\n\r\n\r\n                        {\r\n                            quizes.map((record,i) => {\r\n\r\n                                if((record.percentProgress !== record.questions.length) && (i!==indexQuiz))\r\n                                {\r\n                                    return(\r\n                                        <div className={`Result__card ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:\"calc(\"+(startAnimDealyForCard+makeStepAnimDealyForCard())+\"*var(--main-delay-anim-result))\"}}>\r\n                                        <ContentCard\r\n                                            header={\r\n                                                <div className=\"ListCard__title\">\r\n                                                    <div>{record.title}</div>\r\n                                                    <div>{record.percentProgress}/{record.numberOfQuestions}</div>\r\n                                                </div>\r\n                                            }\r\n                                            mode={\"tint\"}\r\n                                            onClick={createOnClickItemQuizes(i)}\r\n                                            image={record.imageSrc}\r\n                                            caption={record.description}\r\n                                            className=\"ListCard__Card\"\r\n                                        />\r\n                                    </div>\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n            </Panel>\r\n\r\n            <AnswersQuestions\r\n                id={PANEL_ANSWERS_QUESTIONS}\r\n                questions={questions}\r\n                indexesAnswers={indexesAnswers}\r\n                onBack={goBackInHistory}\r\n                openAlert={openAlert}\r\n            >\r\n            </AnswersQuestions>\r\n            {/* <Panel\r\n                id={PANEL_ANSWERS_QUESTIONS}>\r\n\r\n            </Panel> */}\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Result;","import { Panel } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ListCard from '../../components/ListCard/ListCard'\r\n\r\nimport './ListQuizes.css';\r\nimport Header from '../../components/Header/Header';\r\n\r\nconst ListQuizes = ({ id, curWidth, title, quizes, onBack = () => { }, createOnClickItemQuizes = (index) => null }) => {\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <div className=\"ListQuizes\">\r\n\r\n                <Header\r\n                    leftBtnFunc={onBack}\r\n                    text={title}\r\n                >\r\n                </Header>\r\n\r\n                <ListCard\r\n                    info={quizes}\r\n                    cardClick={createOnClickItemQuizes}\r\n                />\r\n\r\n            </div>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default ListQuizes;\r\n","import { View, Panel, Spinner } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport './SpinnerView.css'\r\n\r\nconst SpinnerView = ({}) => {\r\n\r\n    // const [isOpen, setIsOpen] = useState(false)\r\n\r\n    // const open = () => {\r\n    //     setIsOpen(!isOpen)\r\n    // }\r\n\r\n    // const style = {\r\n    //     height: isOpen ? \"100px\" : \"0\"\r\n    // }\r\n\r\n    return(\r\n        <View >\r\n            <Panel>\r\n                <Spinner></Spinner>\r\n            </Panel>\r\n            {/* <div className=\"title\"></div>\r\n            <div style={style} className=\"content\"></div> */}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default SpinnerView","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport vkBridge from '@vkontakte/vk-bridge'\r\n\r\nimport { AdaptivityProvider, ModalRoot, AppRoot, ConfigProvider, ModalPage, Header, Panel, PanelHeader, Platform, Root, Scheme, SimpleCell, SplitCol, SplitLayout, View, usePlatform } from '@vkontakte/vkui';\r\n\r\nimport \"./App.css\";\r\nimport StartWindow from './panels/StartWindow/StartWindow';\r\nimport ListAge from './panels/ListAge/ListAge';\r\nimport ListQuestions from './panels/ListQuestions/ListQuestions';\r\nimport Result from './panels/Result/Result';\r\nimport ListQuizes from './panels/ListQuizes/ListQuizes';\r\nimport AnswersQuestions from './panels/AnswersQuestions/AnswersQuestions';\r\nimport Modal from './panels/ListQuestions/IteamListQuestion/Modal/Modal';\r\nimport ModalPageHead from './components/ModalPageHead/ModalPageHead';\r\nimport SpinnerView from './panels/SpinnerView/SpinnerView';\r\nimport testClass from './panels/StartWindow/StartWindow';\r\n\r\nconst App = ({ eras, results, MAX_SCORE, \r\n\tsavePercentQuiz = (indexAge, indexQuiz, percentProgress) => {}}) => {\r\n\r\n\tuseEffect(() => {\r\n\t\t//Стилизуем компоненты интерфейса клиента\r\n\t\tbridge\r\n\t\t\t.send(\"VKWebAppGetClientVersion\")\r\n\t\t\t.then(data => {\r\n\t\t\t\tif(data.platform === Platform.IOS){\r\n\t\t\t\t\tbridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\"});\r\n\t\t\t\t}\r\n\t\t\t\telse if (data.platform === Platform.ANDROID){\r\n\t\t\t\t\tbridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#000\",\"navigation_bar_color\":\"#000000\"});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(error =>{\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n\t\t\r\n\t\t//Обновляем текущую ширину\r\n\t\tsetCurWidth(document.getElementById('root').scrollWidth)\r\n\t}, []);\r\n\r\n\t// логика переключения между View\r\n\tconst VIEW_ID_START_WINDOW = \"VIEW_ID_START_WINDOW\";\r\n\tconst VIEW_ID_LIST_AGE_AND_QUIZES = \"VIEW_ID_LIST_AGE_AND_QUIZES\";\r\n\tconst VIEW_ID_LIST_QUESTIONES = \"VIEW_ID_LIST_QUESTIONES\";\r\n\tconst VIEW_ID_RESULT = \"VIEW_ID_RESULT\";\r\n\tconst VIEW_ID_ANSWERS_QUESTIONS = \"VIEW_ID_ANSWERS_QUESTIONS\";\r\n\tconst VIEW_ID_SPINNER = \"VIEW_ID_SPINNER\";\r\n\r\n\t// логика переключения между Панелями\r\n\tconst PANEL_ID_LIST_AGE = \"PANEL_ID_LIST_AGE\";\r\n\tconst PANEL_ID_LIST_QUIZES = \"PANEL_ID_LIST_QUIZES\";\r\n\r\n\r\n\tconst [activeView, setActiveView] = useState(VIEW_ID_START_WINDOW);\r\n\tconst [activePanel, setActivePanel] = useState(PANEL_ID_LIST_AGE);\r\n\tconst [curWidth, setCurWidth] = useState(0)\r\n\r\n\tconst goToViewStartWindow = () => setActiveView(VIEW_ID_START_WINDOW);\r\n\tconst goToViewListQuestions = () => setActiveView(VIEW_ID_LIST_QUESTIONES);\r\n\tconst goToViewResult = () => setActiveView(VIEW_ID_RESULT);\r\n\tconst goToViewAnswersQuestions = () => setActiveView(VIEW_ID_ANSWERS_QUESTIONS);\r\n\tconst goToViewSpinner = () => setActiveView(VIEW_ID_SPINNER);\r\n\r\n\tconst goToPanelListAge = () => setActivePanel(PANEL_ID_LIST_AGE);\r\n\tconst goToPanelListQuizes = () => setActivePanel(PANEL_ID_LIST_QUIZES);\r\n\r\n\t// логика хранения индексов\r\n\tconst [indexAge, setIndexAge] = useState(0);\r\n\tconst [indexQuiz, setIndexQuiz] = useState(0);\r\n\tconst [indexResuslt, setIndexResult] = useState(0);\r\n\r\n\t// логика хранения ответов\r\n\tconst [indexesAnswers, setIndexesAnswers] = useState([-1,-1,-1,-1,-1,-1,-1,-1]);\r\n\r\n\t// первый раз открываем Result\r\n\tconst [isFirstOpenResult, setIsFirstOpenResult] = useState(true);\r\n\r\n\r\n\r\n\t// функции для StartWindow\r\n\t\tconst onClickStartWindow = () => {\r\n\t\t\tgoToViewListAgeAndQuizes();\r\n\t\t}\r\n\r\n\r\n\r\n\t// Функции для ListAgeAndQuizes\r\n\r\n\t\tconst goToViewListAgeAndQuizes = () => {\r\n\t\t\tif(!isImageDownloaded)\r\n\t\t\t{\r\n\t\t\t\tgoToViewSpinner();\r\n\t\t\t\tdownloadImagesArr(eras)\r\n\t\t\t\teras.map((quiz)=>{\r\n\t\t\t\t\tdownloadImagesArr(quiz.quizzes)\r\n\t\t\t\t})\r\n\t\t\t\tsetIsImageDownloaded(true)\r\n\t\t\t}\r\n\t\t\tsetActiveView(VIEW_ID_LIST_AGE_AND_QUIZES)\r\n\t\t}\r\n\r\n\r\n\t\t// Выбор эпохи\r\n\t\tconst createOnClickItemAge = (index) => () => {\r\n\t\t\tgoForwardInHistory(PANEL_ID_LIST_QUIZES);\r\n\t\t\tsetIndexAge(index);\r\n\t\t\tgoToPanelListQuizes();\r\n\t\t}\r\n\r\n\t\t// Выбор опроса\r\n\t\tconst createOnClickItemQuizes = (index) => () => {\r\n\t\t\tsetIndexQuiz(index);\r\n\t\t\tgoToViewListQuestions();\r\n\t\t}\r\n\r\n\t\t// Возврат от выбранной эпохи к выбору эпохи\r\n\t\tconst onBackListQuizes = () => {\r\n\t\t\tsetIsFirstOpenResult(true);\r\n\t\t\tgoBackInHistory(PANEL_ID_LIST_AGE)\r\n\t\t}\r\n\r\n\t\t//Возврат от результатов к выбору эпохи\r\n\t\tconst goToViewListAgeAndQuizesFromResult = () => {\r\n\t\t\tgoBackInHistory()\r\n\t\t\tgoToViewListAgeAndQuizes()\r\n\t\t}\r\n\r\n\t\t//Загружены ли в кеш картинки эпох и опросов (не картинки внутри опросов, их загружают отдельно)\r\n\t\tconst [isImageDownloaded, setIsImageDownloaded] = useState(false)\r\n\r\n\r\n\r\n\t// История для ListAgeAndQuizes\r\n\r\n\t\tconst [history, setHistory] = useState([PANEL_ID_LIST_AGE]);\r\n\t\tconst goBackInHistory = () => {\r\n\t\t\tlet his = history;\r\n\t\t\this.pop()\r\n\t\t\tif (activePanel === PANEL_ID_LIST_AGE) {\r\n\t\t\t\tvkBridge.send('VKWebAppEnableSwipeBack');\r\n\t\t\t}\r\n\t\t\tsetHistory(his)\r\n\t\t\tsetActivePanel(history[history.length - 1])\t\r\n\t\t}\r\n\r\n\t\tconst goForwardInHistory = (view) => { \r\n\t\t\tlet his = history;\r\n\t\t\this.push(view);\r\n\t\t\tif (activePanel === PANEL_ID_LIST_AGE) {\r\n\t\t\t\tvkBridge.send('VKWebAppDisableSwipeBack');\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// функции для ListQuestions\r\n\tconst onBackListQuestions = () => {\r\n\t\tgoToViewListAgeAndQuizes();\r\n\t\tgoToPanelListQuizes();\r\n\t}\r\n\r\n\tconst onFinishListQuestions = (indexesAnswers) => {\r\n\t\t// console.log(indexesAnswers)\r\n\t\tsetIndexesAnswers(indexesAnswers);\r\n\r\n\t\tlet sum = 0;\r\n\t\tfor(let i=0;i<indexesAnswers.length;i++){\r\n\t\t\tif(indexesAnswers[i] !== -1){\r\n\t\t\t\tsum+=eras[indexAge].quizzes[indexQuiz].questions[i].answerOptions[indexesAnswers[i]].score;\r\n\t\t\t}\r\n\t\t}\r\n\t\teras[indexAge].quizzes[indexQuiz].percentProgress = sum;\r\n\t\tsetIndexResult(sum)\r\n\t\tgoToViewResult();\r\n\t}\r\n\r\n\t// функции для Result\r\n\tconst onBackResult = () => {\r\n\t\tgoToViewListAgeAndQuizes();\r\n\t}\r\n\r\n\tconst onAgainResult = () => {\r\n\t\tgoToViewListQuestions();\r\n\t}\r\n\t\r\n\tconst onGoToAnswersQuestionResult = () => {\r\n\t\tgoToViewAnswersQuestions()\r\n\t}\r\n\r\n\t// функции для AnswersQuestions\r\n\tconst onBackAnswersQuestions = () => {\r\n\t\tgoToViewResult();\r\n\t}\r\n\r\n\r\n\r\n\t// bridge.send(\"VKWebAppShowNativeAds\", {ad_format:\"preloader\"})\r\n\t// .then(data => console.log(data.result))\r\n\t// .catch(error => console.log(error));\r\n\r\n\tconst onBackListAge = () => {\r\n\t\tgoBackInHistory(PANEL_ID_LIST_AGE)\r\n\t\tgoToViewListAgeAndQuizes()\r\n\t}\r\n\r\n\t// const [screenSpinner, setScreenSpinner] = useState(<ScreenSpinner></ScreenSpinner>)\r\n\r\n\t// const downloadTwoDimensionalArr = (arr) => {\r\n\t// \tfor(let i=0;i<arr.length;i++){\r\n\t// \t\tfor(let j=0;j<arr[i].length;j++){\r\n\t// \t\t\tconst img = new Image();\r\n\t// \t\t\timg.src = arr[i][j].fileName;\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\tconst downloadImagesArr = (arr) => {\r\n\t\tconsole.log(arr)\r\n\t\tfor(let i=0;i<arr.length;i++){\r\n\t\t\tconst img = new Image();\r\n\t\t\timg.src = arr[i].imageSrc;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t<ConfigProvider isWebView={true}>\r\n\t\t<AdaptivityProvider>\r\n\t\t\t<AppRoot>\r\n\t\t\t\t<SplitLayout header={null}>\r\n\t\t\t\t\t<SplitCol animate={true}>\r\n\t\t\t\t\t\t<Root activeView={activeView}>\r\n\r\n\t\t\t\t\t\t\t<StartWindow \r\n\t\t\t\t\t\t\t\tarrForPreDownload={eras}\r\n\t\t\t\t\t\t\t\tid={VIEW_ID_START_WINDOW} \r\n\t\t\t\t\t\t\t\tonClick={onClickStartWindow}/>\r\n\r\n\t\t\t\t\t\t\t<View \r\n\t\t\t\t\t\t\t\tid={VIEW_ID_LIST_AGE_AND_QUIZES}\r\n\t\t\t\t\t\t\t\tactivePanel={activePanel}\r\n\t\t\t\t\t\t\t\tonSwipeBack={goBackInHistory}\r\n\t\t\t\t\t\t\t\thistory={history}>\r\n\r\n\t\t\t\t\t\t\t\t<ListAge \r\n\t\t\t\t\t\t\t\t\tid={PANEL_ID_LIST_AGE} \r\n\t\t\t\t\t\t\t\t\teras={eras} \r\n\t\t\t\t\t\t\t\t\tcurWidth={curWidth}\r\n\t\t\t\t\t\t\t\t\tcreateOnClickItemAge={createOnClickItemAge}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<ListQuizes \r\n\t\t\t\t\t\t\t\t\tid={PANEL_ID_LIST_QUIZES} \r\n\t\t\t\t\t\t\t\t\tcurWidth={curWidth}\r\n\t\t\t\t\t\t\t\t\t// title={eras[indexAge].title} \r\n\t\t\t\t\t\t\t\t\t// quizes={eras[indexAge].quizzes} \r\n\t\t\t\t\t\t\t\t\ttitle={eras[0].title} \r\n\t\t\t\t\t\t\t\t\tquizes={eras[0].quizzes} \r\n\t\t\t\t\t\t\t\t\tonBack={onBackListQuizes} \r\n\t\t\t\t\t\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t<ListQuestions \r\n\t\t\t\t\t\t\t\tid={VIEW_ID_LIST_QUESTIONES}\r\n\t\t\t\t\t\t\t\tcurWidth={curWidth}\r\n\t\t\t\t\t\t\t\tarrQuestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\tonBack={onBackListQuestions}\r\n\t\t\t\t\t\t\t\tonFinish={onFinishListQuestions}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\t\tid={VIEW_ID_RESULT}\r\n\t\t\t\t\t\t\t\tpercent={results[indexResuslt].percent}\r\n\t\t\t\t\t\t\t\tyear={results[indexResuslt].year}\r\n\t\t\t\t\t\t\t\thistoricalEvent={results[indexResuslt].historicalEvent}\r\n\t\t\t\t\t\t\t\tquizes={eras[indexAge].quizzes}\r\n\t\t\t\t\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\tindexQuiz={indexQuiz}\r\n\t\t\t\t\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\tonBack={onBackResult}\r\n\t\t\t\t\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\r\n\t\t\t\t\t\t\t\tonAgain={onAgainResult}\r\n\t\t\t\t\t\t\t\tonGoToAnswersQuestion={onGoToAnswersQuestionResult}\r\n\t\t\t\t\t\t\t\tgoToViewListAndQuizes={goToViewListAgeAndQuizesFromResult}\r\n\r\n\t\t\t\t\t\t\t\tisFirstOpenResult={isFirstOpenResult}\r\n\t\t\t\t\t\t\t\tsetIsFirstOpenResult={setIsFirstOpenResult}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <AnswersQuestions\r\n\t\t\t\t\t\t\t\tid={VIEW_ID_ANSWERS_QUESTIONS}\r\n\t\t\t\t\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\tonBack={onBackAnswersQuestions}\r\n\t\t\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t\t\t<SpinnerView\r\n\t\t\t\t\t\t\t\tid={\"VIEW_ID_SPINNER\"}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</SpinnerView>\r\n\r\n\t\t\t\t\t\t</Root>\r\n\t\t\t\t\t</SplitCol>\r\n\t\t\t\t</SplitLayout>\r\n\t\t\t</AppRoot>\r\n    \t</AdaptivityProvider>\r\n    </ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import imagePetr1 from \"../../img/ageRussianEmpire/quizPetr1/petr.png\";\r\n\r\nimport imgExample from \"../../img/ageRussianEmpire/quizPetr1/Картинка.png\";\r\n\r\nimport ababa from \"../../img/ageRussianEmpire/main.png\"\r\n\r\nconst quizPetr1 = {\r\n    title: \"Император Пётр I\",\r\n    description:\"Росси́йская импе́рия (рус. дореф. Россійская имперія; также Всеросси́йская импе́рия, ца́рская Росси́я) — государство, существовавшее в период с 22 октября (2 ноября) 1721 года до Февральской революции и провозглашения республики в сентябре 1917 года Временным правительством.\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 8,\r\n    isImageDownloaded: false,\r\n    imageSrc: imagePetr1,\r\n    questions: [\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: imgExample,\r\n            questionText: \"Основная причина дефолта 98-го года?3156156566644684684\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Лопнул пузырь ГКО (Государственные краткосрочные облигации)\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Отказ западных партнёров выдать кредит\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Решение о срочном запуске печатного станка в “ускоренном режиме\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 2\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 3\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 4\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 5\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 6\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 7\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 8\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default quizPetr1;\r\n","import imageTheEraOfPalaceCoups from \"../../img/ageRussianEmpire/The era of palace coups/The era of palace coups.png\";\r\n\r\nconst quizTheEraOfPalaceCoups = {\r\n    title: \"Эпоха Дворцовых переворотов\",\r\n    imageSrc: imageTheEraOfPalaceCoups,\r\n    questions: []\r\n}\r\n\r\nexport default quizTheEraOfPalaceCoups;\r\n","import mainImage from \"../../img/ageRussianEmpire/quizPetr1/petr.png\";\r\nimport quizPetr1 from \"./quizPetr1\";\r\nimport quizTheEraOfPalaceCoups from \"./quizTheEraOfPalaceCoups\";\r\n\r\nconst ageRussianEmpire = {\r\n    title: \"Империя\",\r\n    shortTitle: \"Империя\",\r\n    imageSrc: mainImage,\r\n    description:\"Росси́йская импе́рия (рус. дореф. Россійская имперія; также Всеросси́йская импе́рия, ца́рская Росси́я) — государство, существовавшее в период с 22 октября (2 ноября) 1721 года до Февральской революции и провозглашения республики в сентябре 1917 года Временным правительством.\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 7,\r\n    // numberOfQuestions:8,\r\n    quizzes: [\r\n        quizPetr1,\r\n        quizPetr1,\r\n        quizPetr1,\r\n        quizPetr1,\r\n        quizPetr1,\r\n        quizPetr1,\r\n        quizTheEraOfPalaceCoups\r\n    ]\r\n}\r\n\r\nexport default ageRussianEmpire;\r\n","import ageRussianEmpire from \"./ageRussianEmpire/ageRussianEmpire\";\r\n\r\nimport results from \"./results/results\";\r\n\r\nconst store = {\r\n    eras: [\r\n        ageRussianEmpire,\r\n        ageRussianEmpire,\r\n        ageRussianEmpire,\r\n        ageRussianEmpire,\r\n        ageRussianEmpire\r\n    ],\r\n\r\n    results,\r\n\r\n    MAX_SCORE: 8\r\n}\r\n\r\nexport default store;\r\n\r\nconst calculatePercentAge = (era) => {\r\n    const numberOfPassedQuizes = era.quizzes.reduce((sum, quiz) => {\r\n        return quiz.percentProgress !== undefined ?sum + 1 :sum\r\n    }, 0);\r\n\r\n    return Math.round(numberOfPassedQuizes / era.length * 100);\r\n}\r\n\r\nexport const savePercentQuiz = (indexAge, indexQuiz, percentProgress) => {\r\n    store.eras = store.eras.map((era, i) => {\r\n        if (i !== indexAge) {\r\n            return era;\r\n        }\r\n\r\n        if (era.quizzes[indexQuiz].percentProgress === undefined) {\r\n            era.quizzes[indexQuiz].percentProgress = percentProgress;\r\n        } else {\r\n            era.quizzes[indexQuiz].percentProgress = Math.max(percentProgress, era.quizzes[indexQuiz].percentProgress);\r\n        }\r\n\r\n        era.percentProgress = calculatePercentAge(era);\r\n\r\n        return {...era};\r\n    })\r\n}\r\n","const results = [\r\n    {\r\n        percent: 0,\r\n        year: \"1700\",\r\n        historicalEvent: \"Начало Северной войны со Швецией\"\r\n    },\r\n    {\r\n        percent: 1,\r\n        year: \"1011\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 2,\r\n        year: \"1022\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 3,\r\n        year: \"1033\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 4,\r\n        year: \"1054\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 5,\r\n        year: \"1065\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 6,\r\n        year: \"1076\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 7,\r\n        year: \"1087\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 8,\r\n        year: \"1108\",\r\n        historicalEvent: \"в Витичеве прошёл 2-й съезд князей Киевской Рус\"\r\n    }\r\n]\r\n\r\nexport default results;\r\n","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\nimport store, { savePercentQuiz } from \"./store/store.js\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(\r\n    <App {...store} savePercentQuiz={savePercentQuiz}/>, \r\n    document.getElementById(\"root\")\r\n);\r\n\r\nimport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/Картинка.f17bd5e3.png\";","module.exports = __webpack_public_path__ + \"static/media/petr.58cb079c.png\";"],"sourceRoot":""}