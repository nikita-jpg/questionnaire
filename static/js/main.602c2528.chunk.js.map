{"version":3,"sources":["img/ageRussianEmpire/The era of palace coups/The era of palace coups.png","panels/Question/Question.js","panels/Result/Result.js","panels/StartWindow/StartWindow.js","panels/ListAge/ItemListAge/ItemListAge.js","panels/ListAge/ListAge.js","panels/ListQuizes/ItemListQuizes/ItemListQuizes.js","panels/ListQuizes/ListQuizes.js","App.js","store/ageRussianEmpire/quizPetr1.js","store/ageRussianEmpire/quizTheEraOfPalaceCoups.js","store/store.js","store/ageRussianEmpire/ageRussianEmpire.js","index.js","panels/StartWindow/contacts.svg","img/ageRussianEmpire/main.png","img/ageRussianEmpire/quizPetr1/petr.png"],"names":["module","exports","platform","StartWindow","id","onClick","activePanel","separator","visor","transparent","className","width","height","src","svgContacts","alt","ItemListAge","image","title","percentProgress","hasLeftButton","goLeft","hasRightButton","goRight","left","ListAge","eras","createOnClickItemAge","index","createIdPanel","useState","indexActivePanel","setIndexActivePanel","createGoRight","map","age","i","arrAge","key","length","ItemListQuizes","classNamePersentProgress","undefined","ListQuizes","quizes","onBack","createOnClickItemQuizes","ID_ACTIVE_PANEL","fill","quiz","App","setUser","size","setPopout","disablePopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","activeView","setActiveView","goToViewListAge","goToViewQuizes","indexAge","setIndexAge","setIndexQuiz","shortTitle","quizzes","quizPetr1","imagePetr1","questions","quizTheEraOfPalaceCoups","imageTheEraOfPalaceCoups","store","mainImage","ReactDOM","render","getElementById","then","default"],"mappings":"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","file":"static/js/main.602c2528.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/The era of palace coups.42e7310b.png\";","import { Icon24Back, Icon28ChevronBack } from '@vkontakte/icons';\r\nimport { Button, IOS, Panel, PanelHeader, PanelHeaderButton, platform } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\n\r\nimport \"./Question.css\";\r\n\r\nconst osName = platform();\r\n\r\nconst Question = ({ id, question, numberCurrentQuestion, countQuestions,\r\n    goToPrevQuestion, goToNextQuestion }) => {\r\n\r\n    const styleBackgroundImg = {\r\n        backgroundImage: `url('${question.questionImgBack}')`\r\n    }\r\n\r\n    const [isRotated, setRotate] = useState(false);\r\n\r\n    const rotateImage = () => setRotate(!isRotated);\r\n\r\n    return (\r\n        <Panel id={id} separator={false}>\r\n            <PanelHeader\r\n                left={\r\n                    <>\r\n                        <PanelHeaderButton onClick={goToPrevQuestion}>\r\n                            {osName === IOS ? <Icon28ChevronBack fill=\"white\" /> : <Icon24Back fill=\"white\" />}\r\n                        </PanelHeaderButton>\r\n                        <span className=\"Question__number-question\">{numberCurrentQuestion}/{countQuestions}</span>\r\n                    </>\r\n                }\r\n                separator={false}\r\n                visor={false}\r\n                transparent={true}\r\n            >\r\n            </PanelHeader>\r\n\r\n            <div className=\"Question\" style={styleBackgroundImg}>\r\n                <div className=\"Question__content\">\r\n                    {\r\n                        question.overSideImg !== undefined\r\n                            ?\r\n                            <div\r\n                                className={`Question__image-wrap ${isRotated ?\"Question__image-wrap_rotated\" :\"\"}`}\r\n                            >\r\n                                <img className=\"Question__image Question__image_hidden\" src={question.questionImg} alt={`image_hidden_${id}`} />\r\n        \r\n                                <div className=\"Question__image-side-wrap Question__image-side-wrap_front\">\r\n                                    <img className=\"Question__image\" src={question.questionImg} alt={`image_front_${id}`} />\r\n\r\n                                    <button \r\n                                        onClick={rotateImage}\r\n                                        className=\"Question__rotate-button Question__rotate-button_front\"\r\n                                    ></button>\r\n                                </div>\r\n\r\n                                <div className={`Question__image-side-wrap \r\n                                    Question__image-side-wrap_back \r\n                                    ${!isRotated ?\"Question__image-side-wrap_disable\" :\"\"}`}\r\n                                >\r\n                                    <img className=\"Question__image\" src={question.overSideImg} alt={`image_back_${id}`} />\r\n                                \r\n                                    <button\r\n                                        onClick={rotateImage}\r\n                                        className=\"Question__rotate-button Question__rotate-button_back\"\r\n                                    ></button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            :<div className=\"Question__image-wrap\">\r\n                                <img className=\"Question__image\" src={question.questionImg} alt={`image_hidden_${id}`} />\r\n                            </div>\r\n                    }\r\n\r\n                    <p className=\"Question__question-text\">{question.questionText}</p>\r\n\r\n                    <div className=\"Question__answer-options\">\r\n                        {\r\n                            question.answerOptions.map((answer, i) => (\r\n                                <Button\r\n                                    key={i}\r\n                                    mode=\"overlay_secondary\"\r\n                                    className=\"Question__answer\"\r\n                                    onClick={() => goToNextQuestion(i)}\r\n                                >\r\n                                    {answer.text}\r\n                                </Button>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Panel>\r\n    )\r\n};\r\n\r\nexport default Question;\r\n","import { Icon24Back, Icon28ChevronBack } from \"@vkontakte/icons\";\r\nimport { Button, IOS, PanelHeader, PanelHeaderButton, platform } from \"@vkontakte/vkui\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport React from \"react\";\r\n\r\nimport \"./Result.css\";\r\n\r\nconst osName = platform();\r\n\r\nconst sendToHistory = (image) => {\r\n    console.log(image);\r\n\r\n    bridge.send(\"VKWebAppShowStoryBox\", { \r\n        \"background_type\" : \"image\",\r\n        \"url\": \"https://nikita-jpg.github.io\" + image\r\n    });\r\n}\r\n\r\nconst sendToWall = (image) => {\r\n    window.open(\"https://vk.com/share.php?url=https://nikita-jpg.github.io\" + image);\r\n}\r\n\r\nconst Result = ({backgroundImage, image, historyImage, wallImage, text, goBack}) => {\r\n    const styleBackgroundImg = {\r\n        backgroundImage: `url('${backgroundImage}')`\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PanelHeader\r\n                left={\r\n                    <>\r\n                        <PanelHeaderButton onClick={goBack}>\r\n                            {osName === IOS ? <Icon28ChevronBack fill=\"white\" /> : <Icon24Back fill=\"white\" />}\r\n                        </PanelHeaderButton>\r\n                        <span className=\"Result__title\">Итог</span>\r\n                    </>\r\n                }\r\n                separator={false}\r\n                visor={false}\r\n                transparent={true}\r\n            >\r\n            </PanelHeader>\r\n\r\n            <div className=\"Result\" style={styleBackgroundImg}>\r\n                <div className=\"Result__content\">\r\n                    <img className=\"Result__image\" src={image} alt={`image_result`} />\r\n\r\n                    <p className=\"Result__text\">{text}</p>\r\n\r\n                    <div className=\"Result__list-buttons\">\r\n                        <Button\r\n                            mode=\"overlay_secondary\"\r\n                            className=\"Result__button\"\r\n                            onClick={() => {\r\n                                sendToHistory(historyImage)\r\n                            }}\r\n                        >\r\n                            В историю\r\n                        </Button>\r\n\r\n                        <Button\r\n                            mode=\"overlay_secondary\"\r\n                            className=\"Result__button\"\r\n                            onClick={() => {\r\n                                sendToWall(wallImage)\r\n                            }}\r\n                        >\r\n                            На стену\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Result;\r\n","import { Panel, PanelHeader, View } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nimport svgContacts from './contacts.svg';\r\n\r\nimport './StartWindow.css';\r\n\r\nconst StartWindow = ({id, onClick}) => {\r\n    const ID_ACTIVE_PANEL = \"ID_ACTIVE_PANEL\";\r\n\r\n    return (\r\n        <View activePanel={ID_ACTIVE_PANEL} id={id}>\r\n            <Panel id={ID_ACTIVE_PANEL} separator={false}>\r\n                <PanelHeader\r\n                    separator={false}\r\n                    visor={false}\r\n                    transparent={true}\r\n                ></PanelHeader>\r\n\r\n                <div className=\"StartWindow\">\r\n                    <div className=\"StartWindow__container\">\r\n                        <img width=\"50\" height=\"50\" src={svgContacts} alt=\"contacts\"/>\r\n                        <h1 className=\"StartWindow__title\">Привет, друг!</h1>\r\n                        <p className=\"StartWindow__text\">\r\n                            Это приложение поможет тебе проверить свои знания в области истори родной страны. Удачи!\r\n                        </p>\r\n                        <button className=\"StartWindow__button\" onClick={onClick}>Поехали!</button>\r\n                    </div>\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default StartWindow;","import { Panel, PanelHeader } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nimport \"./ItemListAge.css\";\r\n\r\nconst ItemListAge = ({id, image, title, percentProgress, onClick,\r\n    hasLeftButton, goLeft, hasRightButton, goRight}) => {\r\n\r\n    return (\r\n        <Panel id={id}>  \r\n            <PanelHeader\r\n                className=\"ItemListAge__PanelHeader\"\r\n                left={\r\n                    <h1 className=\"ItemListAge__header\">Выбор эпохи</h1>\r\n                }\r\n                visor={true}\r\n                transparent={true}\r\n                separator={false}\r\n            ></PanelHeader>\r\n            <div className=\"ItemListAge\">\r\n                <div className=\"ItemListAge__image-wrap\">\r\n                    <img className=\"ItemListAge__image\" src={image} alt={`ItemListAge-image-${id}`}/>\r\n\r\n                    {\r\n                        hasLeftButton && \r\n                        <button onClick={goLeft} className=\"ItemListAge__arrow-button ItemListAge__arrow-button_left\"></button>\r\n                    }\r\n\r\n                    {\r\n                        hasRightButton && \r\n                        <button onClick={goRight} className=\"ItemListAge__arrow-button ItemListAge__arrow-button_right\"></button>\r\n                    }\r\n\r\n                    <h2 className=\"ItemListAge__title\">{title}</h2>\r\n                </div>\r\n\r\n                <p className=\"ItemListAge__progress\">Пройдено {percentProgress}%</p>\r\n\r\n                <button onClick={onClick} className=\"ItemListAge__button\">Открыть</button>\r\n            </div>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default ItemListAge;","import { View } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport ItemListAge from './ItemListAge/ItemListAge';\r\n\r\nconst ListAge = ({id, eras, createOnClickItemAge=index=>null}) => {\r\n    const createIdPanel = index => `${id}_${index}`;\r\n\r\n    const [indexActivePanel, setIndexActivePanel] = useState(0);\r\n\r\n    const createGoRight = (index) => () => setIndexActivePanel(index + 1);\r\n\r\n    const createGoLeft = (index) => () => setIndexActivePanel(index - 1);\r\n\r\n    return (\r\n        <View id={id} activePanel={createIdPanel(indexActivePanel)}>\r\n            {\r\n                eras.map((age, i, arrAge) => (\r\n                    <ItemListAge\r\n                        key={createIdPanel(i)}\r\n                        id={createIdPanel(i)}\r\n                        title={age.title}\r\n                        image={age.image}\r\n                        percentProgress={age.percentProgress}\r\n                        onClick={createOnClickItemAge(i)}\r\n                        hasLeftButton={i > 0}\r\n                        hasRightButton={i < arrAge.length - 1}\r\n                        goLeft={createGoLeft(i)}\r\n                        goRight={createGoRight(i)}\r\n                    />\r\n                ))\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ListAge;\r\n","import React from 'react';\r\n\r\nimport './ItemListQuizes.css';\r\n\r\nconst ItemListQuizes = ({ image, title, onClick, percentProgress }) => {\r\n    let classNamePersentProgress;\r\n\r\n    if (percentProgress === undefined) {\r\n        classNamePersentProgress = undefined;\r\n    }else if (percentProgress > 50) {\r\n        classNamePersentProgress = \"ItemListQuizes__percent_good\";\r\n    } else if (percentProgress > 25) {\r\n        classNamePersentProgress = \"ItemListQuizes__percent_normal\";\r\n    } else {\r\n        classNamePersentProgress = \"ItemListQuizes__percent_bad\";        \r\n    }\r\n\r\n    return (\r\n        <li className=\"ItemListQuizes\">\r\n            <div className=\"ItemListQuizes__image-wrap\">\r\n                <img className=\"ItemListQuizes__image\" src={image} alt={`ItemListQuizes-${title}`} />\r\n\r\n                <div className=\"ItemListQuizes__percent-wrap\">\r\n                    {\r\n                        classNamePersentProgress && \r\n                        <span className={`ItemListQuizes__percent ${classNamePersentProgress}`}>{percentProgress}%</span>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"ItemListQuizes__row-bottom\">\r\n                <h2 className=\"ItemListQuizes__title\">{title}</h2>\r\n\r\n                <button onClick={onClick} className=\"ItemListQuizes__button-play\">Играть</button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ItemListQuizes;\r\n","import { Icon24Back } from '@vkontakte/icons';\r\nimport { Panel, PanelHeader, View } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ItemListQuizes from './ItemListQuizes/ItemListQuizes';\r\n\r\nimport './ListQuizes.css';\r\n\r\nconst ListQuizes = ({ id, title, quizes, onBack = () => { }, createOnClickItemQuizes = (index) => null }) => {\r\n    const ID_ACTIVE_PANEL = `${id}-0`;\r\n\r\n    return (\r\n        <View id={id} activePanel={ID_ACTIVE_PANEL}>\r\n            <Panel id={ID_ACTIVE_PANEL}>\r\n                <PanelHeader\r\n                    left={\r\n                        <div className=\"ListQuizes__header-left\">\r\n                            <Icon24Back onClick={onBack} fill=\"white\" />\r\n                            <h1 className=\"ListQuizes__title\">{title}</h1>\r\n                        </div>\r\n                    }\r\n                    className=\"ListQuizes__header\"\r\n                    visor={true}\r\n                    transparent={true}\r\n                    separator={false}\r\n                >\r\n                </PanelHeader>\r\n\r\n                <ul className=\"ListQuizes\">\r\n                    {\r\n                        quizes.map((quiz, i) => (\r\n                            <ItemListQuizes\r\n                                key={i}\r\n                                image={quiz.image}\r\n                                title={quiz.title}\r\n                                onClick={createOnClickItemQuizes(i)}\r\n                                percentProgress={quiz.percentProgress}\r\n                            />\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </Panel>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default ListQuizes;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Quiz from './panels/Quiz/Quiz';\r\nimport { Alert, Panel, Root } from '@vkontakte/vkui';\r\nimport Question from './panels/Question/Question';\r\nimport Result from './panels/Result/Result';\r\nimport preloadImages from './preloadImages';\r\n\r\nimport \"./App.css\";\r\nimport StartWindow from './panels/StartWindow/StartWindow';\r\nimport ListAge from './panels/ListAge/ListAge';\r\nimport ListQuizes from './panels/ListQuizes/ListQuizes';\r\n\r\nconst App = ({ eras }) => {\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\tconst enablePopout = () => setPopout(<ScreenSpinner size='large' />);\r\n\tconst disablePopout = () => setPopout(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tdisablePopout();\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\t// логика переключения между View\r\n\tconst VIEW_ID_START_WINDOW = \"VIEW_ID_START_WINDOW\";\r\n\tconst VIEW_ID_LIST_AGE = \"VIEW_ID_LIST_AGE\";\r\n\tconst VIEW_ID_QUIZES = \"VIEW_ID_QUIZES\";\r\n\tconst VIEW_ID_QUESTIONES = \"VIEW_ID_QUESTIONES\";\r\n\tconst VIEW_ID_RESULT = \"VIEW_ID_RESULT\";\r\n\r\n\tconst [activeView, setActiveView] = useState(VIEW_ID_QUIZES);\r\n\r\n\tconst goToViewStartWindow = () => setActiveView(VIEW_ID_START_WINDOW);\r\n\tconst goToViewListAge = () => setActiveView(VIEW_ID_LIST_AGE);\r\n\tconst goToViewQuizes = () => setActiveView(VIEW_ID_QUIZES);\r\n\tconst goToViewQuestions = () => setActiveView(VIEW_ID_QUESTIONES);\r\n\tconst goToViewResult = () => setActiveView(VIEW_ID_RESULT);\r\n\r\n\t// логика хранения индексов\r\n\tconst [indexAge, setIndexAge] = useState(0);\r\n\tconst [indexQuiz, setIndexQuiz] = useState(0);\r\n\tconst [indexResuslt, setIndexResult] = useState(0);\r\n\r\n\t// функции для ListAge\r\n\tconst createOnClickItemAge = (index) => () => {\r\n\t\tsetIndexAge(index);\r\n\t\tgoToViewQuizes();\r\n\t}\r\n\r\n\t// функции для ListQuizes\r\n\tconst onBack = () => {\r\n\t\tgoToViewListAge();\r\n\t}\r\n\r\n\tconst createOnClickItemQuizes = (index) => () => {\r\n\t\tsetIndexQuiz(index);\r\n\t\tgoToViewQuizes();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Root activeView={activeView}>\r\n\t\t\t<StartWindow \r\n\t\t\t\tid={VIEW_ID_START_WINDOW} \r\n\t\t\t\tonClick={goToViewListAge}\r\n\t\t\t/>\r\n\r\n\t\t\t<ListAge \r\n\t\t\t\tid={VIEW_ID_LIST_AGE} \r\n\t\t\t\teras={eras} \r\n\t\t\t\tcreateOnClickItemAge={createOnClickItemAge}\r\n\t\t\t/>\r\n\r\n\t\t\t<ListQuizes \r\n\t\t\t\tid={VIEW_ID_QUIZES} \r\n\t\t\t\ttitle={eras[indexAge].shortTitle} \r\n\t\t\t\tquizes={eras[indexAge].quizzes} \r\n\t\t\t\tonBack={onBack} \r\n\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\t\t\t/>\r\n\t\t</Root>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import imagePetr1 from \"../../img/ageRussianEmpire/quizPetr1/petr.png\";\r\n\r\nconst quizPetr1 = {\r\n    title: \"Император Пётр I\",\r\n    image: imagePetr1,\r\n    questions: []\r\n}\r\n\r\nexport default quizPetr1;\r\n","import imageTheEraOfPalaceCoups from \"../../img/ageRussianEmpire/The era of palace coups/The era of palace coups.png\";\r\n\r\nconst quizTheEraOfPalaceCoups = {\r\n    title: \"Эпоха Дворцовых переворотов\",\r\n    image: imageTheEraOfPalaceCoups,\r\n    questions: []\r\n}\r\n\r\nexport default quizTheEraOfPalaceCoups;\r\n","import ageRussianEmpire from \"./ageRussianEmpire/ageRussianEmpire\";\r\n\r\nconst store = {\r\n    eras: [\r\n        ageRussianEmpire\r\n    ]\r\n}\r\n\r\nexport default store;\r\n","import mainImage from \"../../img/ageRussianEmpire/main.png\";\r\nimport quizPetr1 from \"./quizPetr1\";\r\nimport quizTheEraOfPalaceCoups from \"./quizTheEraOfPalaceCoups\";\r\n\r\nconst ageRussianEmpire = {\r\n    title: \"Российская империя\",\r\n    shortTitle: \"Рос. империя\",\r\n    image: mainImage,\r\n    quizzes: [\r\n        quizPetr1,\r\n        quizTheEraOfPalaceCoups\r\n    ]\r\n}\r\n\r\nexport default ageRussianEmpire;\r\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\nimport store from \"./store/store.js\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App {...store}/>, document.getElementById(\"root\"));\n\nimport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n\n","module.exports = __webpack_public_path__ + \"static/media/contacts.da748c82.svg\";","module.exports = __webpack_public_path__ + \"static/media/main.96699d6f.png\";","module.exports = __webpack_public_path__ + \"static/media/petr.58cb079c.png\";"],"sourceRoot":""}