{"version":3,"sources":["App.js","panels/ListAge/ListAge.js","img/defaultImage.svg","panels/ListQuizes/ListQuizes.js","panels/SpinnerView/SpinnerView.js","img/ageRussianEmpire/The era of palace coups/The era of palace coups.png","img/ageRF/ageRF.jpg","img/ageRF/Zero/Zero.jpg","img/ageRF/Zero/img1.jpg","img/ageRF/Zero/img2.jpg","img/ageRF/Zero/img3.jpg","img/ageRF/Zero/img4.jpg","img/ageRF/Zero/img5.jpg","img/ageRF/Zero/img6.jpg","img/ageRF/Zero/img7.jpg","img/ageRF/Zero/img8.jpg","components/ButtonWrapper/ButtonWrapper.js","components/PanelWrapper/PanelWrapper.js","panels/ListQuestions/IteamListQuestion/Modal/Modal.js","panels/SpinnerView/test.svg","panels/SpinnerView/i.svg","img/ageRussianEmpire/Petr1/img1.png","img/ageRussianEmpire/main.png","store/ageRussianEmpire/quizPetr1.js","store/ageRussianEmpire/ageRussianEmpire.js","store/ageRussianEmpire/quizTheEraOfPalaceCoups.js","store/ageRF/MMM.js","store/ageRF/Privatization.js","store/ageRF/TheChechenWar.js","store/ageRF/TheWhiteHouse.js","store/ageRF/Yeltsin.js","store/store.js","store/ageRF/Zero.js","store/ageRF/ageRF.js","store/results/results.js","index.js","panels/ListQuestions/IteamListQuestion/IteamListQuestion.js","components/Header/Header.js","img/ageRF/MMM/MMM.jpg","img/ageRF/Privatization/Privatization.jpg","img/ageRF/TheChechenWar/TheChechenWar.jpg","img/ageRF/TheWhiteHouse/TheWhiteHouse.jpg","img/ageRF/Yeltsin/Yeltsin.jpg","components/ListCard/ListCard.js","components/CardWrapper/CardWrapper.js","img/ageRussianEmpire/Petr1/Petr1.png","panels/StartWindow/StartWindow.js","panels/StartWindow/contacts.svg","help.js","components/ModalPageHead/ModalPageHead.js","anime/easeOut.js","panels/AnswersQuestions/ItemAnswerQuestion/ItemAnswerQuestion.js","panels/AnswersQuestions/AnswersQuestions.js"],"names":["App","results","MAX_SCORE","savePercentQuiz","useState","activeView","setActiveView","activePanel","setActivePanel","curWidth","setCurWidth","goToViewListAgeAndQuizes","goToViewListQuestions","goToPanelListQuizes","indexAge","setIndexAge","setIndexQuiz","setIsFirstOpenResult","http","axios","create","headers","Authorization","window","location","search","slice","russianName","description","image","imageName","sourceImageLink","surveys","questions","idQuestion","textQuestion","answerOptions","idAnswerOption","text","score","userAnswer","eras","setEras","isNeedDateLoad","setIsNeedDateLoad","useEffect","firstDownload","then","data","console","log","isFirstOpen","document","getElementById","scrollWidth","a","downloadEras","downloadImagesArr","get","downloadQuizeImage","index","quizzes","arr","i","length","downloadImage","imageData","img","Image","src","onload","responseType","response","Buffer","from","toString","history","setHistory","goBackInHistory","his","pop","vkBridge","send","goForwardInHistory","view","push","isWebView","scheme","header","animate","id","onClick","onSwipeBack","createOnClickItemAge","title","quizes","onBack","createOnClickItemQuizes","isImageDownloaded","ListAge","headerText","isHeaderFixed","className","info","cardClick","module","exports","ListQuizes","onHeaderBack","SpinnerView","points","stroke-width","fill","x","y","width","height","viewBox","xmlns","d","class","ButtonWrapper","isActived","before","classNameText","isCentered","hasActive","style","isLinkForm","activeEffectDelay","mode","centered","PanelWrapper","name","children","isOneColumn","isVerticalCentre","isHeaderHide","onHeaderClose","headerIcon","headerClick","curHeight","setCurHeight","scrollHeight","separator","minHeight","minWidth","justifyContent","icon","isFixed","onClose","click","maxWidth","quizPetr1","percentProgress","numberOfQuestions","imageSrc","imagePetr1","imgExample","overSideImg","questionText","ageRussianEmpire","imageTheEraOfPalaceCoups","shortTitle","mainImage","quizMMM","imgMain","img1","store","img2","img3","img4","img5","img6","img7","img8","MMM","percent","year","historicalEvent","bridge","platform","Platform","IOS","ANDROID","catch","error","ReactDOM","render","indexQuiz","map","era","undefined","Math","max","numberOfPassedQuizes","reduce","sum","quiz","round","calculatePercentAge","default","PLATFORM_MARGIN_LEFT","usePlatform","getTitle","hasLeftBtn","LEFT_BTN_WIDTH","textWidth","context","createElement","getContext","font","measureText","getTextWidth","marginLeft","paddingLeft","childMargin","speed","direction","delay","textAlign","Header","left","leftClick","cursor","fixed","visor","ListCard","colNumber","record","key","CardWrapper","defaultImage","caption","StartWindow","svgContacts","alt","isTitleCentre","element","stub","ModalPageHead","isDesktop","useAdaptivity","viewWidth","ViewWidth","SMALL_TABLET","right","timing","timeFraction","ItemAnswerQuestion","indexQuestion","question","indexRightAnswer","indexUserAnswer","openAlert","color","AnswersQuestions","indexesAnswers","display","q","findIndex"],"mappings":"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AAU,IAA0B,kC,0aCyK5B+C,G,OAnKG,CACd3D,MAAO,oFACPlE,YAAY,k2CACZ8H,gBAAiB,EACjBC,kBAAmB,EACnBzD,mBAAmB,EACnB0D,SAAUC,IACV5H,UAAW,CACP,CACI2H,SAAUE,IACVC,YAAaD,IACbE,aAAc,sMACd5H,cAAe,CACX,CACIE,KAAM,kUACNC,MAAO,GAEX,CACID,KAAM,mNACNC,MAAO,GAEX,CACID,KAAM,qVACNC,MAAO,KAInB,CACIqH,SAAUE,IACVC,YAAa,KACbC,aAAc,yCACd5H,cAAe,CACX,CACIE,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,KAInB,CACIqH,SAAUE,IACVC,YAAa,KACbC,aAAc,yCACd5H,cAAe,CACX,CACIE,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,KAInB,CACIqH,SAAUE,IACVC,YAAa,KACbC,aAAc,yCACd5H,cAAe,CACX,CACIE,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,KAInB,CACIqH,SAAUE,IACVC,YAAa,KACbC,aAAc,yCACd5H,cAAe,CACX,CACIE,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,KAInB,CACIqH,SAAUE,IACVC,YAAa,KACbC,aAAc,yCACd5H,cAAe,CACX,CACIE,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,KAInB,CACIqH,SAAUE,IACVC,YAAa,KACbC,aAAc,yCACd5H,cAAe,CACX,CACIE,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,KAInB,CACIqH,SAAUE,IACVC,YAAa,KACbC,aAAc,yCACd5H,cAAe,CACX,CACIE,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,IACNC,MAAO,Q,SC3IZ0H,G,OCnBDC,EDAW,CACrBpE,MAAO,kIACPqE,WAAY,6CACZP,SAAUQ,IACVxI,YAAY,k2CACZ8H,gBAAiB,EACjBC,kBAAmB,EAEnB9F,QAAS,CACL4F,K,mCEqBOY,EA9BC,CACZvE,MAAO,qBACPlE,YAAY,mDACZ8H,gBAAiB,EACjBC,kBAAmB,EACnBzD,mBAAmB,EACnB0D,SAAUU,IACVrI,UAAW,CACP,CACI2H,SAAUW,IACVR,YAAaQ,IACbP,aAAc,4EACd5H,cAAe,CACX,CACIE,KAAM,+CACNC,MAAO,GAEX,CACID,KAAM,+CACNC,MAAO,GAEX,CACID,KAAM,+CACNC,MAAO,O,oBCjBb+H,IAGQC,IACGA,I,mBCJXD,IAGQC,IACGA,I,mBCJXD,IAGQC,IACGA,I,mBCJXD,IAGQC,IACGA,I,iKCTnBC,GCWQF,IAGQC,IAmBAE,IAmBAC,IAmBAC,IAmBAC,IAmBAC,IAmBAC,IAmBAC,IDnJR,CACVtI,KAAM,CACFwH,EECM,CACVnE,MAAO,eACPqE,WAAY,eACZP,SAAUQ,IACVxI,YAAY,4HACZ8H,gBAAiB,EACjBC,kBAAmB,EACnB9F,QAAS,CACLmH,KFDJ/K,QGfY,CACZ,CACIgL,QAAS,EACTC,KAAM,OACNC,gBAAiB,gLAErB,CACIF,QAAS,EACTC,KAAM,OACNC,gBAAiB,0FAErB,CACIF,QAAS,EACTC,KAAM,OACNC,gBAAiB,0FAErB,CACIF,QAAS,EACTC,KAAM,OACNC,gBAAiB,0FAErB,CACIF,QAAS,EACTC,KAAM,OACNC,gBAAiB,0FAErB,CACIF,QAAS,EACTC,KAAM,OACNC,gBAAiB,0FAErB,CACIF,QAAS,EACTC,KAAM,OACNC,gBAAiB,0FAErB,CACIF,QAAS,EACTC,KAAM,OACNC,gBAAiB,0FAErB,CACIF,QAAS,EACTC,KAAM,OACNC,gBAAiB,kPHzBrBjL,UAAW,IAGAsK,I,OIXfY,IAAOlG,KAAK,gBAEZkG,IACKlG,KAAK,4BACLnC,MAAK,SAAAC,GACCA,EAAKqI,WAAaC,IAASC,IAC1BH,IAAOlG,KAAK,0BAA2B,CAAC,iBAAoB,UAEvDlC,EAAKqI,WAAaC,IAASE,SAChCJ,IAAOlG,KAAK,0BAA2B,CAAC,iBAAoB,QAAS,iBAAoB,OAAO,qBAAuB,eAG9HuG,OAAM,SAAAC,GACHzI,QAAQC,IAAIwI,MA4BpBC,IAASC,OACL,kBAAC5L,EAAA,EAAD,iBAASwK,EAAT,CAAgBrK,gBJrBW,SAACW,EAAU+K,EAAWnC,GACjDc,EAAM/H,KAAO+H,EAAM/H,KAAKqJ,KAAI,SAACC,EAAKhI,GAC9B,OAAIA,IAAMjD,EACCiL,QAGoCC,IAA3CD,EAAIlI,QAAQgI,GAAWnC,gBACvBqC,EAAIlI,QAAQgI,GAAWnC,gBAAkBA,EAEzCqC,EAAIlI,QAAQgI,GAAWnC,gBAAkBuC,KAAKC,IAAIxC,EAAiBqC,EAAIlI,QAAQgI,GAAWnC,iBAG9FqC,EAAIrC,gBApBgB,SAACqC,GACzB,IAAMI,EAAuBJ,EAAIlI,QAAQuI,QAAO,SAACC,EAAKC,GAClD,YAAgCN,IAAzBM,EAAK5C,gBAA+B2C,EAAM,EAAGA,IACrD,GAEH,OAAOJ,KAAKM,MAAMJ,EAAuBJ,EAAI/H,OAAS,KAe5BwI,CAAoBT,GAEnC,eAAIA,WIQf3I,SAASC,eAAe,SAQ5B,oDAAkBN,MAAK,YAAwB,EAArB0J,Y,mPCpDXpB,c,2DCVf,sDAWMqB,GAXN,OAW6BC,MAAgBrB,IAASC,IAAM,GAAK,IAY3DqB,EAAW,SAACtK,EAAM8G,EAAM3I,EAAUoM,EAAYtD,GAChDtG,QAAQC,IAAIkG,GAEZ,IAAM0D,EAAiBD,EAAa,GAAKH,EAErCK,EAda,SAACzK,GAClB,IACM0K,EADS5J,SAAS6J,cAAc,UACfC,WAAW,MAIlC,OAFAF,EAAQG,KAAO,YAERH,EAAQI,YAAY9K,GAAM6E,MAAQ,GAQzBkG,CAAa/K,GACzBgL,EAAa,EAIjB,IAAK7M,EAAWsM,GAAW,EAzBN,GA8BjB,OAHAO,EAAaT,EA3BI,GA2B6BC,EA3B7B,GA4BjBQ,GAAY,KAGR,yBAAK3H,QAAS4D,EAAOxB,MAAO,CAACZ,MAAM,OAAQqC,SAAS,OAAQ+D,YAAYD,IACpE,yBAAKhH,UAAU,iBACVhE,EACA8G,IAMbkE,EAAaT,EAAa,EAAIH,EAC9B,IAAIlD,EAAW/I,EAzCE,GAyC4BqM,EAAiB,EAG9D,OAAGC,EAAYvD,EAGP,yBAAK7D,QAAS4D,EAAOxB,MAAO,CAACZ,MAAM,OAAQoG,YAAYD,IACnD,yBAAKhH,UAAU,gBAAgByB,MAAO,CAACyB,SAASA,IAC5C,kBAAC,IAAD,CAASgE,YAAY,KAAKC,MAAM,OAAOC,UAAU,OAAOC,MAAM,OACzDrL,EACA8G,KAOb,yBAAKzD,QAAS4D,EAAOxB,MAAO,CAACyB,SAAS,OAAQ+D,YAAYD,IACtD,yBAAKhH,UAAU,gBAAgByB,MAAO,CAACyB,SAASA,EAAUoE,UAAU,UAC/DtL,EACA8G,KAqDVyE,IA5CA,SAAC,GAA6D,IAGrEC,EAHSrN,EAA2D,EAA3DA,SAAUuF,EAAiD,EAAjDA,OAAQsD,EAAyC,EAAzCA,QAASD,EAAgC,EAAhCA,QAAS/G,EAAuB,EAAvBA,KAAM8G,EAAiB,EAAjBA,KAAMG,EAAW,EAAXA,MAC7DtG,QAAQC,IAAIkG,GAGZ,IAEI2E,EAFAC,EAAS,UACTC,EAAQ,OAsBZ,OAnBI3E,GACAwE,EAAO,kBAAC,IAAD,CAAkBxH,UAAU,kBAC/B,kBAAC,IAAD,OAEJyH,EAAYzE,GAEPtD,IACL8H,EAAO,kBAAC,IAAD,CAAiBxH,UAAU,mBAClCyH,EAAY/H,GAGbuD,IACCyE,EAAO,WAGP3E,IACA4E,GAAQ,GAIR,kBAAC,IAAD,CACIjF,WAAW,EACXkF,OAAO,EACPD,MAAOA,GAGP,yBAAK3H,UAAU,iBAAiByB,MAAO,CAACiG,OAAOA,IAC1CF,GAAQ,yBAAKxH,UAAU,kBAAkBX,QAASoI,GAAYD,GAC9DlB,EAAStK,EAAK8G,EAAK3I,EAAUqN,EAAMvE,GACpC,yBAAKjD,UAAU,oBAAoBX,QAAS4D,Q,mBCnH5D9C,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,qC,gCCA3C,wCAyCeyH,IApCE,SAAC,GAAuF,IAApF5H,EAAmF,EAAnFA,KAAM9F,EAA6E,EAA7EA,SAA6E,IAAnE+F,iBAAmE,MAAvD,SAAC5C,GAAD,OAAW,MAA4C,MAAtCK,qBAAsC,MAAtB,SAACL,GAAD,OAAW,MAAW,EAcpG,OACQ,yBAAK0C,UAAU,WAAWyB,MAAO,CAACyB,UAZnC/I,EAAS,KACD,CAAC2N,UAAU,IAAK5E,SAAS,8BAE3B/I,EAAS,IACP,CAAC2N,UAAU,IAAK5E,SAAS,4BAGzB,CAAC4E,UAAU,IAAK5E,SAAS,6BAK0BA,WAElDjD,EAAKuF,KAAI,SAACuC,EAAOtK,GAAR,OACL,yBAAKuK,IAAKD,EAAO1M,aACb,kBAAC,IAAD,CACImE,MAAOuI,EAAO1M,YACd+H,gBAAiB2E,EAAO3E,gBACxBC,kBAAmB0E,EAAOrM,QAAQgC,OAClCwC,UAAWA,EAAUzC,GACrBE,cAAeA,EACfnC,UAAWuM,EAAOxM,MAAMC,UACxBF,YAAayM,EAAOzM,qB,8FCFrC2M,IAxBK,SAAC,GAA4G,IAA3GzI,EAA0G,EAA1GA,MAAM4D,EAAoG,EAApGA,gBAAgBC,EAAoF,EAApFA,kBAA4B/H,GAAwD,EAAlEE,UAAkE,EAAxDF,aAAwD,IAA5C4E,iBAA4C,MAAlC,aAAkC,EAG5H,GAH4H,EAA1BvC,cAGxE7D,mBAAS,yBAAKkG,UAAU,iBAAlD,6BAKA,OACA,kBAAC,IAAD,CACId,OACI,yBAAKc,UAAU,sBACX,6BAAMR,GACN,6BAAM4D,EAAN,IAAwBC,IAGhCzB,KAAM,OACNvC,QAASa,EACT3E,MAAO2M,IACPC,QAAS7M,EACT0E,UAAU,wB,mBCzBlBG,EAAOC,QAAU,IAA0B,mC,gCCA3C,mEAiCegI,IAtBK,SAAC,GAA0B,IAAzBhJ,EAAwB,EAAxBA,GAAwB,IAApBC,eAAoB,MAAZ,aAAY,EAI1C,OACI,kBAAC,IAAD,CAAMD,GAAIA,GACN,kBAAC,IAAD,CAAcsD,WAAW,EAAOP,cAAc,EAAMD,kBAAkB,GAClE,yBAAKlC,UAAU,eACX,yBAAKA,UAAU,0BACX,yBAAKa,MAAM,KAAKC,OAAO,KAAK/C,IAAKsK,IAAaC,IAAI,aAClD,wBAAItI,UAAU,sBAAd,mEACA,uBAAGA,UAAU,qBAAb,8cAGA,kBAAC,IAAD,CAAeA,UAAU,sBAAsBsB,cAAc,2BAA2BC,YAAY,EAAMlC,QAASA,EAASrD,KAAK,sD,mBCzBzJmE,EAAOC,QAAU,IAA0B,sC,gCCA3C,sDAEIjG,EAAW2C,SAASC,eAAe,QAAQC,YAExC,SAASuL,EAAgBC,GAC5B,MAAO,CACPC,KAAKtO,GAAY,IAAM,yBAAKsH,MAAO,CAACZ,MAAM,SAAU2H,EAA7B,KAA8CA,EACrExM,KAAK7B,GAAY,IAAM,SAAW,W,gCCPtC,qDA2BeuO,IApBO,SAAC,GAA0C,IAAzC1M,EAAwC,EAAxCA,KAAM7B,EAAkC,EAAlCA,SAAkC,IAAxB6I,eAAwB,MAAd,aAAc,EAExDsE,EAAYiB,YAAcpO,GAAU6B,KAElC2M,IADgBC,cAAdC,WACyBC,IAAUC,cAC3C,OACI,kBAAC,IAAD,CAIIC,MAAOL,GAAa,kBAAC,IAAD,CAAe3I,UAAU,8BAA8BX,QAAS2D,IACpFwE,KAAMmB,GAAa,kBAAC,IAAD,CAAkB3I,UAAU,+BAElD,yBAAKA,UAAU,wBAAwByB,MAAO,CAAC6F,cAC3CtL,M,sECrBQiN,EAMO,SAACC,GAAD,OAAkBA,G,OAA9C,IANqBD,E,0BCgCNE,G,OApBY,SAAC,GAAyF,IAAxFC,EAAuF,EAAvFA,cAAeC,EAAwE,EAAxEA,SAAUC,EAA8D,EAA9DA,iBAAkBC,EAA4C,EAA5CA,gBAA4C,IAA3BC,iBAA2B,MAAf,aAAe,EAIhH,OACI,yBAAKxJ,UAAU,sBACX,kBAACmB,EAAA,EAAD,CACI9B,QAAU,WAAOmK,EAAUJ,IAC3BpN,KAAMqN,EAAS3F,aACfpC,cAAc,kCACdE,WAAW,EACXH,OAAQiI,IAAqBC,EACvB,kBAAC,IAAD,CAA0BzI,OAV1B,GAU6CD,MAV7C,GAU+DY,MAAO,CAACgI,MAAM,6BAC7E,kBAAC,IAAD,CAA2B3I,OAX3B,GAW8CD,MAX9C,GAWgEY,MAAO,CAACgI,MAAM,gC,QCWrFC,IAxBU,SAAC,GAAsE,IAArEtK,EAAoE,EAApEA,GAAIzD,EAAgE,EAAhEA,UAAWgO,EAAqD,EAArDA,eAAqD,IAArCjK,cAAqC,MAA9B,aAA8B,MAAtB8J,iBAAsB,MAAZ,aAAY,EAE3F,OACI,kBAAC1H,EAAA,EAAD,CAAc1C,GAAIA,EAAIU,WAAW,6CAAUQ,aAAcZ,EAAQuC,aAAa,GAE1E,yBAAKR,MAAO,CAACmI,QAAQ,OAAO/G,eAAe,WACvC,yBAAK7C,UAAU,oBAEXrE,EAAU6J,KAAI,SAACqE,EAAGpM,GAAJ,OACV,kBAAC,EAAD,CACI2L,cAAe3L,EACf4L,SAAUQ,EACVP,iBAAkB3N,EAAU8B,GAAG3B,cAAcgO,WAAU,SAAA7M,GAAC,OAAgB,IAAZA,EAAEhB,SAC9DsN,gBAAiBI,EAAelM,GAChC+L,UAAWA,a","file":"static/js/main.b27fef1c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport vkBridge from '@vkontakte/vk-bridge'\r\n\r\nimport { AdaptivityProvider, ModalRoot, AppRoot, ConfigProvider, ModalPage, Header, Panel, PanelHeader, Platform, Root, Scheme, SimpleCell, SplitCol, SplitLayout, View, usePlatform } from '@vkontakte/vkui';\r\n\r\nimport \"./App.css\";\r\nimport StartWindow from './panels/StartWindow/StartWindow';\r\nimport ListAge from './panels/ListAge/ListAge';\r\nimport ListQuestions from './panels/ListQuestions/ListQuestions';\r\nimport Result from './panels/Result/Result';\r\nimport ListQuizes from './panels/ListQuizes/ListQuizes';\r\nimport AnswersQuestions from './panels/AnswersQuestions/AnswersQuestions';\r\nimport Modal from './panels/ListQuestions/IteamListQuestion/Modal/Modal';\r\nimport ModalPageHead from './components/ModalPageHead/ModalPageHead';\r\nimport SpinnerView from './panels/SpinnerView/SpinnerView';\r\nimport testClass from './panels/StartWindow/StartWindow';\r\nimport axios from 'axios';\r\n\r\nimport svgContacts from './panels/StartWindow/contacts.svg';\r\n\r\n// setActiveView(null)\r\nconst App = ({results, MAX_SCORE, \r\n\tsavePercentQuiz = (indexAge, indexQuiz, percentProgress) => {}}) => {\r\n\t\r\n\r\n\t// логика переключения между View\r\n\tconst VIEW_ID_START_WINDOW = \"VIEW_ID_START_WINDOW\";\r\n\tconst VIEW_ID_LIST_AGE_AND_QUIZES = \"VIEW_ID_LIST_AGE_AND_QUIZES\";\r\n\tconst VIEW_ID_LIST_QUESTIONES = \"VIEW_ID_LIST_QUESTIONES\";\r\n\tconst VIEW_ID_RESULT = \"VIEW_ID_RESULT\";\r\n\tconst VIEW_ID_ANSWERS_QUESTIONS = \"VIEW_ID_ANSWERS_QUESTIONS\";\r\n\r\n\tconst VIEW_ID_SPINNER = \"VIEW_ID_SPINNER\";\r\n\r\n\t// логика переключения между Панелями\r\n\tconst PANEL_ID_LIST_AGE = \"PANEL_ID_LIST_AGE\";\r\n\tconst PANEL_ID_LIST_QUIZES = \"PANEL_ID_LIST_QUIZES\";\r\n\r\n\r\n\tconst [activeView, setActiveView] = useState(VIEW_ID_SPINNER);\r\n\tconst [activePanel, setActivePanel] = useState(PANEL_ID_LIST_AGE);\r\n\tconst [curWidth, setCurWidth] = useState(0)\r\n\r\n\tconst goToViewStartWindow = () => setActiveView(VIEW_ID_START_WINDOW);\r\n\tconst goToViewListAgeAndQuizes = () =>setActiveView(VIEW_ID_LIST_AGE_AND_QUIZES)\r\n\tconst goToViewListQuestions = () => setActiveView(VIEW_ID_LIST_QUESTIONES);\r\n\tconst goToViewResult = () => setActiveView(VIEW_ID_RESULT);\r\n\tconst goToViewAnswersQuestions = () => setActiveView(VIEW_ID_ANSWERS_QUESTIONS);\r\n\tconst goToViewSpinner = () => setActiveView(VIEW_ID_SPINNER);\r\n\r\n\tconst goToPanelListAge = () => setActivePanel(PANEL_ID_LIST_AGE);\r\n\tconst goToPanelListQuizes = () => setActivePanel(PANEL_ID_LIST_QUIZES);\r\n\r\n\t// логика хранения индексов\r\n\tconst [indexAge, setIndexAge] = useState(0);\r\n\tconst [indexQuiz, setIndexQuiz] = useState(0);\r\n\tconst [indexResuslt, setIndexResult] = useState(0);\r\n\r\n\t// логика хранения ответов\r\n\tconst [indexesAnswers, setIndexesAnswers] = useState([-1,-1,-1,-1,-1,-1,-1,-1]);\r\n\r\n\t// первый раз открываем Result\r\n\tconst [isFirstOpenResult, setIsFirstOpenResult] = useState(true);\r\n\r\n\t//Для запросов на сервер\r\n\tconst http = axios.create({\r\n\t\theaders: {\r\n\t\t  // Прикрепляем заголовок, отвечающий за параметры запуска.\r\n\t\t  Authorization: `${window.location.search.slice(1)}`\r\n\t\t}\r\n\t  });\r\n\r\n\t//Тестим Api\r\n\r\n\t// const http = axios.create({\r\n\t// \theaders: {\r\n\t// \t  // Прикрепляем заголовок, отвечающий за параметры запуска.\r\n\t// \t  Authorization: `${window.location.search.slice(1)}`,\r\n\t// \t}\r\n\t//   });\r\n\t//Функции для StartWindow\r\n\t// const onClickStartWindow = () => {\r\n\t// \thttp.get(\"http://127.0.0.1:18301/\").then(res=>{console.log(res)})\r\n\t// const onClickStartWindow = () => {\r\n\t// \tgoToViewListAgeAndQuizes();\r\n\t// }\t\r\n\r\n\r\n\tconst [eras, setEras] = useState([\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\trussianName: \"Эра1\",\r\n\t\t\t\tdescription: \"Описание Эры1\",\r\n\t\t\t\timage: {\r\n\t\t\t\t\timageName: \"1.jpg\",\r\n\t\t\t\t\tsourceImageLink: \"Ссылка на картинку1\"\r\n\t\t\t\t},\r\n\t\t\t\tsurveys: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trussianName: \"Опрос2\",\r\n\t\t\t\t\t\tdescription: \"ОписаниеОпроса2\",\r\n\t\t\t\t\t\timage: {\r\n\t\t\t\t\t\t\timageName: \"2.jpg\",\r\n\t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку2\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tquestions: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tidQuestion: 2,\r\n\t\t\t\t\t\t\t\ttextQuestion: \"Вопрос2\",\r\n\t\t\t\t\t\t\t\timage: {\r\n\t\t\t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t\t\t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tanswerOptions: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tidAnswerOption: 8,\r\n\t\t\t\t\t\t\t\t\t\tidQuestion: 2,\r\n\t\t\t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t\t\t\t\t\t\t\t\t\tscore: \"0\"\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tidAnswerOption: 7,\r\n\t\t\t\t\t\t\t\t\t\tidQuestion: 2,\r\n\t\t\t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t\t\t\t\t\t\t\t\t\tscore: \"0\"\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tidAnswerOption: 6,\r\n\t\t\t\t\t\t\t\t\t\tidQuestion: 2,\r\n\t\t\t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t\t\t\t\t\t\t\t\t\tscore: \"1\"\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tidAnswerOption: 5,\r\n\t\t\t\t\t\t\t\t\t\tidQuestion: 2,\r\n\t\t\t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t\t\t\t\t\t\t\t\t\tscore: \"0\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\tuserAnswer: null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t]);\r\n\tconst [isNeedDateLoad,setIsNeedDateLoad] = useState(true)\r\n\r\n\tuseEffect(() => {\r\n\t\tif(isNeedDateLoad){\r\n\r\n\t\t\tfirstDownload().then(data=>{\r\n\t\t\t\tsetEras(data.eras)\r\n\t\t\t\tconsole.log(data.eras)\r\n\r\n\t\t\t\tif(data.isFirstOpen){\r\n\t\t\t\t\tgoToViewStartWindow();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tgoToViewListAgeAndQuizes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tsetIsNeedDateLoad(false);\r\n\t\t}\r\n\r\n\t\t//Обновляем текущую ширину\r\n\t\tsetCurWidth(document.getElementById('root').scrollWidth)\r\n\t}, []);\r\n\r\n\r\n\t//Загрузка перед входом в основное окно приложения\r\n\tconst firstDownload = async () => {\t\r\n\t\tconst data = await downloadEras();\r\n\t\tawait downloadImagesArr(data.eras);\r\n\t\treturn data\r\n\t}\r\n\r\n\tconst downloadEras = async() =>{\r\n\t\tconst data = await http.get(\"http://127.0.0.1:18301/\").then(data=>{return data.data})\r\n\t\treturn data;\r\n\t}\r\n\r\n\tconst downloadQuizeImage = async (index) => {\r\n\t\tawait downloadImagesArr(eras[indexAge].quizzes[index].questions)\r\n\t\tawait goToViewListQuestions()\r\n\t}\r\n\r\n\tconst downloadImagesArr = async(arr) => {\r\n\t\tfor(let i=0;i<arr.length;i++){\r\n\t\t\tawait downloadImage(arr[i].image.imageName).then(imageData=>{\r\n\t\t\t\tlet img = new Image();\r\n\t\t\t\timg.src = `data:image/jpeg;base64,${imageData}`;\r\n\t\t\t\timg.onload = () => {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst downloadImage = async(imageName) => {\r\n\t\tconst image = await http.get(\"http://127.0.0.1:18301/getImage?imageName=\" + imageName,{\r\n\t\t\tresponseType: 'arraybuffer'\r\n\t\t  }).then(response => Buffer.from(response.data, 'binary').toString('base64'))\r\n\t\treturn image;\r\n\t}\r\n\r\n\r\n\t//Функции для StartWindow\r\n\t\r\n\t\tconst onClickStartWindow = () => {\r\n\t\t\tgoToViewListAgeAndQuizes();\r\n\t\t}\t\r\n\r\n\r\n\t// Функции для ListAgeAndQuizes\r\n\r\n\t\t// Выбор эпохи\r\n\t\tconst createOnClickItemAge = (index) => () => {\r\n\t\t\tgoForwardInHistory(PANEL_ID_LIST_QUIZES);\r\n\t\t\tsetIndexAge(index);\r\n\t\t\tgoToPanelListQuizes();\r\n\t\t}\r\n\r\n\t\t// Выбор опроса\r\n\t\tconst createOnClickItemQuizes = (index) => () => {\r\n\t\t\tsetIndexQuiz(index);\r\n\t\t\tif(!eras[indexAge].quizzes[index].isImageDownloaded)\r\n\t\t\t{\r\n\t\t\t\tgoToViewSpinner();\r\n\t\t\t\tdownloadQuizeImage(index)\r\n\t\t\t\teras[indexAge].quizzes[index].isImageDownloaded = true;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\telse\r\n\t\t\t\tgoToViewListQuestions();\r\n\t\t}\r\n\r\n\t\t// Возврат от выбранной эпохи к выбору эпохи\r\n\t\tconst onBackListQuizes = () => {\r\n\t\t\tsetIsFirstOpenResult(true);\r\n\t\t\tgoBackInHistory(PANEL_ID_LIST_AGE)\r\n\t\t}\r\n\r\n\t\t//Возврат от результатов к выбору эпохи\r\n\t\tconst goToViewListAgeAndQuizesFromResult = () => {\r\n\t\t\tgoBackInHistory()\r\n\t\t\tgoToViewListAgeAndQuizes()\r\n\t\t}\r\n\r\n\t\t//Загружены ли в кеш картинки эпох и опросов (не картинки внутри опросов, их загружают отдельно)\r\n\t\tconst [isImageDownloaded, setIsImageDownloaded] = useState(false)\r\n\r\n\r\n\r\n\t// История для ListAgeAndQuizes\r\n\r\n\t\tconst [history, setHistory] = useState([PANEL_ID_LIST_AGE]);\r\n\t\tconst goBackInHistory = () => {\r\n\t\t\tlet his = history;\r\n\t\t\this.pop()\r\n\t\t\tif (activePanel === PANEL_ID_LIST_AGE) {\r\n\t\t\t\tvkBridge.send('VKWebAppEnableSwipeBack');\r\n\t\t\t}\r\n\t\t\tsetHistory(his)\r\n\t\t\tsetActivePanel(history[history.length - 1])\t\r\n\t\t}\r\n\r\n\t\tconst goForwardInHistory = (view) => { \r\n\t\t\tlet his = history;\r\n\t\t\this.push(view);\r\n\t\t\tif (activePanel === PANEL_ID_LIST_AGE) {\r\n\t\t\t\tvkBridge.send('VKWebAppDisableSwipeBack');\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t// функции для ListQuestions\r\n\t\tconst onBackListQuestions = () => {\r\n\t\t\tgoToViewListAgeAndQuizes();\r\n\t\t\tgoToPanelListQuizes();\r\n\t\t}\r\n\r\n\t\tconst onFinishListQuestions = (indexesAnswers) => {\r\n\t\t\tsetIndexesAnswers(indexesAnswers);\r\n\r\n\t\t\tlet sum = 0;\r\n\t\t\tfor(let i=0;i<indexesAnswers.length;i++){\r\n\t\t\t\tif(indexesAnswers[i] !== -1){\r\n\t\t\t\t\tsum+=eras[indexAge].quizzes[indexQuiz].questions[i].answerOptions[indexesAnswers[i]].score;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\teras[indexAge].quizzes[indexQuiz].percentProgress = sum;\r\n\t\t\tif(eras[indexAge].quizzes[indexQuiz].numberOfQuestions === sum){\r\n\t\t\t\teras[indexAge].percentProgress = eras[indexAge].percentProgress + 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetIndexResult(sum)\r\n\t\t\tgoToViewResult();\r\n\t\t}\r\n\r\n\t// функции для Result\r\n\t\tconst onBackResult = () => {\r\n\t\t\tgoToViewListAgeAndQuizes();\r\n\t\t}\r\n\r\n\t\tconst onAgainResult = () => {\r\n\t\t\tgoToViewListQuestions();\r\n\t\t}\r\n\t\t\r\n\t\tconst onGoToAnswersQuestionResult = () => {\r\n\t\t\tgoToViewAnswersQuestions()\r\n\t\t}\r\n\r\n\t// функции для AnswersQuestions\r\n\t\tconst onBackAnswersQuestions = () => {\r\n\t\t\tgoToViewResult();\r\n\t\t}\r\n\r\n\r\n\r\n\tconst onBackListAge = () => {\r\n\t\tgoBackInHistory(PANEL_ID_LIST_AGE)\r\n\t\tgoToViewListAgeAndQuizes()\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t<ConfigProvider isWebView={true} scheme=\"android\">\r\n\t\t<AdaptivityProvider>\r\n\t\t\t<AppRoot>\r\n\t\t\t\t<SplitLayout header={null}>\r\n\t\t\t\t\t<SplitCol animate={true}>\r\n\t\t\t\t\t\t<Root activeView={activeView}>\r\n\r\n\t\t\t\t\t\t\t<StartWindow \r\n\t\t\t\t\t\t\t\tid={VIEW_ID_START_WINDOW} \r\n\t\t\t\t\t\t\t\tonClick={onClickStartWindow}/>\r\n\r\n\t\t\t\t\t\t\t<View \r\n\t\t\t\t\t\t\t\tid={VIEW_ID_LIST_AGE_AND_QUIZES}\r\n\t\t\t\t\t\t\t\tactivePanel={activePanel}\r\n\t\t\t\t\t\t\t\tonSwipeBack={goBackInHistory}\r\n\t\t\t\t\t\t\t\thistory={history}>\r\n\r\n\t\t\t\t\t\t\t\t<ListAge \r\n\t\t\t\t\t\t\t\t\tid={PANEL_ID_LIST_AGE} \r\n\t\t\t\t\t\t\t\t\teras={eras} \r\n\t\t\t\t\t\t\t\t\tcurWidth={curWidth}\r\n\t\t\t\t\t\t\t\t\tcreateOnClickItemAge={createOnClickItemAge}\r\n\t\t\t\t\t\t\t\t\tdownloadImage={downloadImage}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<ListQuizes \r\n\t\t\t\t\t\t\t\t\tid={PANEL_ID_LIST_QUIZES} \r\n\t\t\t\t\t\t\t\t\tcurWidth={curWidth}\r\n\t\t\t\t\t\t\t\t\ttitle={eras[indexAge].russianName} \r\n\t\t\t\t\t\t\t\t\tquizes={eras[indexAge].surveys} \r\n\t\t\t\t\t\t\t\t\tonBack={onBackListQuizes} \r\n\t\t\t\t\t\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t{/* <ListQuestions \r\n\t\t\t\t\t\t\t\tid={VIEW_ID_LIST_QUESTIONES}\r\n\t\t\t\t\t\t\t\tcurWidth={curWidth}\r\n\t\t\t\t\t\t\t\tarrQuestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\tonBack={onBackListQuestions}\r\n\t\t\t\t\t\t\t\tonFinish={onFinishListQuestions}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\t\tid={VIEW_ID_RESULT}\r\n\t\t\t\t\t\t\t\tpercent={results[indexResuslt].percent}\r\n\t\t\t\t\t\t\t\tyear={results[indexResuslt].year}\r\n\t\t\t\t\t\t\t\thistoricalEvent={results[indexResuslt].historicalEvent}\r\n\t\t\t\t\t\t\t\tquizes={eras[indexAge].quizzes}\r\n\t\t\t\t\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\tindexAge={indexAge}\r\n\t\t\t\t\t\t\t\teras={eras}\r\n\t\t\t\t\t\t\t\tindexQuiz={indexQuiz}\r\n\t\t\t\t\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\tcreateOnClickItemAge={createOnClickItemAge}\r\n\t\t\t\t\t\t\t\tonBack={onBackResult}\r\n\t\t\t\t\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\r\n\t\t\t\t\t\t\t\tonAgain={onAgainResult}\r\n\t\t\t\t\t\t\t\tonGoToAnswersQuestion={onGoToAnswersQuestionResult}\r\n\t\t\t\t\t\t\t\tgoToViewListAndQuizes={goToViewListAgeAndQuizesFromResult}\r\n\r\n\t\t\t\t\t\t\t\tisFirstOpenResult={isFirstOpenResult}\r\n\t\t\t\t\t\t\t\tsetIsFirstOpenResult={setIsFirstOpenResult}\r\n\t\t\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t\t\t{/* <AnswersQuestions\r\n\t\t\t\t\t\t\t\tid={VIEW_ID_ANSWERS_QUESTIONS}\r\n\t\t\t\t\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\tonBack={onBackAnswersQuestions}\r\n\t\t\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t\t\t<SpinnerView\r\n\t\t\t\t\t\t\t\tid={\"VIEW_ID_SPINNER\"}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</SpinnerView>\r\n\r\n\t\t\t\t\t\t</Root>\r\n\t\t\t\t\t</SplitCol>\r\n\t\t\t\t</SplitLayout>\r\n\t\t\t</AppRoot>\r\n    \t</AdaptivityProvider>\r\n    </ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { PanelHeader, Panel, Div } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport './ListAge.css'\r\nimport { isTitleCentre } from '../../help';\r\nimport ListCard from '../../components/ListCard/ListCard'\r\nimport Header from '../../components/Header/Header'\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\n\r\n\r\nconst ListAge = ({id, eras,curWidth, createOnClickItemAge=index=>null, downloadImage=index=>null}) => {\r\n\r\n    // console.log(eras)\r\n    return (\r\n        <PanelWrapper id={id} headerText=\"Выбирете эпоху\" isHeaderFixed={true}>\r\n\r\n                <div className=\"ListAge__content\">\r\n                    <ListCard\r\n                        info={eras}\r\n                        curWidth={curWidth}\r\n                        cardClick={createOnClickItemAge}\r\n                        downloadImage={downloadImage}>\r\n                    </ListCard>\r\n                </div>\r\n\r\n        </PanelWrapper>\r\n    )\r\n}\r\n\r\nexport default ListAge;\r\n","module.exports = __webpack_public_path__ + \"static/media/defaultImage.8b972e07.svg\";","import { Panel } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ListCard from '../../components/ListCard/ListCard'\r\n\r\nimport './ListQuizes.css';\r\nimport Header from '../../components/Header/Header';\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\n\r\nconst ListQuizes = ({ id, title, quizes, onBack = () => { }, createOnClickItemQuizes = (index) => null }) => {\r\n\r\n    console.log(title[0])\r\n\r\n    return (\r\n        <PanelWrapper id={id} headerText={title} onHeaderBack={onBack} isHeaderFixed={true}>\r\n\r\n            <div className=\"ListQuizes\">\r\n                <ListCard\r\n                    info={quizes}\r\n                    cardClick={createOnClickItemQuizes}\r\n                />\r\n            </div>\r\n\r\n        </PanelWrapper>\r\n    );\r\n}\r\n\r\nexport default ListQuizes;\r\n","import { View, Panel, Spinner, ScreenSpinner } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport './SpinnerView.css'\r\nimport spinner from './test.svg'\r\nimport i from './i.svg'\r\n\r\nconst SpinnerView = ({id}) => {\r\n\r\n    // const [isOpen, setIsOpen] = useState(false)\r\n\r\n    // const open = () => {\r\n    //     setIsOpen(!isOpen)\r\n    // }\r\n\r\n    // const style = {\r\n    //     height: isOpen ? \"90px\" : \"0\"\r\n    // }\r\n\r\n    return(\r\n        <View id={id}>\r\n            <Panel>\r\n                <div className=\"SpinnerView\">\r\n                    <svg className=\"SpinnerView__spinnerBox_spinner\">\r\n                        <polyline className=\"stroke-still\" points=\"0,0 90,0 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                        <polyline className=\"stroke-still\" points=\"0,0 0,90 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                        {/* <svg className=\"stroke-text text-animation\" x=\"30\" y=\"68\"></svg> */}\r\n                            <svg x=\"28.5\" y=\"26.5\" width=\"33\" height=\"37\" viewBox=\"0 0 33 37\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path className=\"stroke-text text-animation\" stroke-width=\"1.5\" d=\"M5.02966 7.09C5.02966 5.254 4.77766 3.904 4.27366 3.04C3.76966 2.14 2.76166 1.69 1.24966 1.69H0.169664V0.609999H5.02966C6.36166 0.609999 7.35166 0.789998 7.99966 1.15C8.68366 1.474 9.16966 2.086 9.45766 2.986C9.74566 3.886 9.88966 5.254 9.88966 7.09V31.39L27.1697 0.609999H32.0297V36.25H27.1697V5.47L9.88966 36.25H5.02966V7.09Z\"/>\r\n                            </svg>\r\n                        {/* <text className=\"stroke-text text-animation\" x=\"30\" y=\"68\" font-size=\"50\" fontFamily=\"Pacifico, cursive\">И</text> */}\r\n                        <polyline class=\"line-cornered stroke-animation\" points=\"0,0 90,0 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                        <polyline class=\"line-cornered stroke-animation\" points=\"0,0 0,90 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                    </svg>\r\n                        {/* <div className=\"SpinnerView__spinnerBox\">\r\n                            <img src={spinner} className=\"SpinnerView__spinnerBox_spinner\"></img>\r\n                        </div>\r\n                        <ScreenSpinner></ScreenSpinner> */}\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default SpinnerView","module.exports = __webpack_public_path__ + \"static/media/The era of palace coups.42e7310b.png\";","module.exports = __webpack_public_path__ + \"static/media/ageRF.c735400b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zero.8be729eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img1.350153d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.054fb62f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.a4c2df90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.483d9695.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img5.a03adca7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img6.44981534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img7.df89f5eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img8.6927082b.jpg\";","import { CellButton } from \"@vkontakte/vkui\"\r\nimport React from \"react\"\r\n\r\nimport './ButtonWrapper.css'  \r\n\r\nconst ButtonWrapper = ({isActived, text, onClick, before, className, classNameText, isCentered, hasActive, style, isLinkForm}) => {\r\n\r\n\r\n    if(isLinkForm){\r\n        return(\r\n            <div className=\"ButtonWrapper__text_linkForm\" style={style} onClick={onClick}>{text}</div>\r\n        )\r\n    }\r\n    return(\r\n        <CellButton \r\n            activeEffectDelay={0}\r\n            onClick={onClick} \r\n            mode=\"secondary\"\r\n            centered={isCentered} \r\n            before={before}\r\n            hasActive={hasActive}\r\n            className={`ButtonWrapper ${isActived && \"ButtonWrapper_active\"} ${className}`}\r\n            style={style}\r\n\r\n        >\r\n            <div className={`ButtonWrapper__text ${classNameText}`}>\r\n                {text}\r\n            </div>\r\n        </CellButton>\r\n    )\r\n}\r\n\r\nexport default ButtonWrapper","import { Div, Panel } from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from \"../Header/Header\";\r\n\r\nimport './PanelWrapper.css'\r\n\r\nconst PanelWrapper = ({id, name, children, isOneColumn, isVerticalCentre,\r\n    isHeaderHide, isHeaderFixed, onHeaderClose, onHeaderBack, \r\n    headerIcon, headerText, headerClick}) => {\r\n\r\n    const [curWidth, setCurWidth] = useState(0)\r\n    const [curHeight, setCurHeight] = useState(0)\r\n\r\n    useEffect(() => {\r\n\t\t\r\n\t\t//Обновляем текущую ширину\r\n\t\tsetCurWidth(document.getElementById('root').scrollWidth)\r\n        setCurHeight(document.getElementById('root').scrollHeight)\r\n\t}, []);\r\n\r\n    // const getMaxWidth = () => {\r\n    //     if(curWidth>1280)\r\n    //         return \"1256px\"\r\n    //     else\r\n    //         return curWidth + \"px\"\r\n    // }\r\n    return(\r\n\r\n        <Panel id={id} separator={false} name={name}>\r\n\r\n            <div className=\"PanelWrapper\" style={{minHeight:curHeight,minWidth:curWidth, \r\n                justifyContent:isVerticalCentre?\"center\":\"start\"}}>\r\n                {\r\n                    !isHeaderHide &&\r\n                    <Header\r\n                    text={headerText}\r\n                    icon={headerIcon}\r\n                    curWidth={curWidth}\r\n                    isFixed={isHeaderFixed}\r\n                    onClose={onHeaderClose}\r\n                    onBack={onHeaderBack}\r\n                    click={headerClick}\r\n                ></Header>\r\n                }\r\n\r\n                <Div className=\"PanelWrapper__container\"style={{maxWidth:isOneColumn?\"var(--main-max-oneСolumnPanelWrapperMode-width)\":\"var(--main-max-panelWrapper-width)\"}}>\r\n                    {children}\r\n                </Div>\r\n\r\n            </div>\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default PanelWrapper","import React from 'react'\r\nimport { ModalPage, ModalRoot, ModalCard } from \"@vkontakte/vkui\"\r\n\r\nimport './Modal.css';\r\n\r\nconst Modal = ({id,stateAnswers, onFinish = () => { }, goToQuestionWithoutAnswer = (toIndexQuestion) => { } }) => {\r\n    const isOpen = true;\r\n    return(\r\n        <ModalRoot activeModal={id}>\r\n            <ModalCard idInside=\"MODAL_TEST\" settlingHeight={100}>\r\n\r\n            <div className={`Modal ${isOpen && \"Modal__open\"}`}>\r\n                {/* <div className=\"Modal__svg-wrap\" onClick={toggleIsOpen}>\r\n                    <img\r\n                        className={`Modal__candelabrum ${isOpen && \"Modal__candelabrum_open\"}`}\r\n                        src={svgCandelabrum}\r\n                        alt=\"candelabrum\"\r\n                    />\r\n\r\n                    <img\r\n                        className=\"Modal__rectangle\"\r\n                        src={svgRectangle}\r\n                        alt=\"rectangle\"\r\n                    />\r\n                </div> */}\r\n\r\n                <ul className=\"Modal__list\">\r\n                    {\r\n                        stateAnswers.map(({ questionText, indexAnswer }, i) => (\r\n                            <li key={i} className=\"Modal__list-item\">\r\n                                <div \r\n                                    className=\"Modal__selection-block Modal__selection-block_left\"\r\n                                    onClick={() => goToQuestionWithoutAnswer(i)}\r\n                                >\r\n                                    <span className=\"Modal__question-text\">{i + 1}) {questionText}...</span>\r\n                                </div>\r\n\r\n                                <div className=\"Modal__selection-block Modal__selection-block_right\">\r\n                                    {\r\n                                        indexAnswer !== -1\r\n                                            ? <div className=\"Modal__answer Modal__answer_has\">Вы ответили</div>\r\n                                            : <div className=\"Modal__answer Modal__answer_not-has\">Нет ответа</div>\r\n                                    }\r\n                                </div>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n\r\n                <button className=\"Modal__button\" onClick={onFinish}>Закончить тест</button>\r\n            </div>\r\n\r\n            </ModalCard>\r\n        </ModalRoot>\r\n    )\r\n}\r\n\r\nexport default Modal","module.exports = __webpack_public_path__ + \"static/media/test.b83e685d.svg\";","module.exports = __webpack_public_path__ + \"static/media/i.6a68b222.svg\";","module.exports = __webpack_public_path__ + \"static/media/img1.f17bd5e3.png\";","module.exports = __webpack_public_path__ + \"static/media/main.96699d6f.png\";","import imagePetr1 from \"../../img/ageRussianEmpire/Petr1/Petr1.png\";\r\n\r\nimport imgExample from \"../../img/ageRussianEmpire/Petr1/img1.png\";\r\n\r\nimport ababa from \"../../img/ageRussianEmpire/main.png\"\r\n\r\nconst quizPetr1 = {\r\n    title: \"Император Пётр I\",\r\n    description:\"Росси́йская импе́рия (рус. дореф. Россійская имперія; также Всеросси́йская импе́рия, ца́рская Росси́я) — государство, существовавшее в период с 22 октября (2 ноября) 1721 года до Февральской революции и провозглашения республики в сентябре 1917 года Временным правительством.\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 8,\r\n    isImageDownloaded: false,\r\n    imageSrc: imagePetr1,\r\n    questions: [\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: imgExample,\r\n            questionText: \"Основная причина дефолта 98-го года?3156156566644684684\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Лопнул пузырь ГКО (Государственные краткосрочные облигации)\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Отказ западных партнёров выдать кредит\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Решение о срочном запуске печатного станка в “ускоренном режиме\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 2\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 3\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 4\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 5\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 6\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 7\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 8\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default quizPetr1;\r\n","import mainImage from \"../../img/ageRussianEmpire/Petr1/Petr1.png\";\r\nimport quizPetr1 from \"./quizPetr1\";\r\nimport quizTheEraOfPalaceCoups from \"./quizTheEraOfPalaceCoups\";\r\n\r\nconst ageRussianEmpire = {\r\n    title: \"Государство московское\",\r\n    shortTitle: \"Империя\",\r\n    imageSrc: mainImage,\r\n    description:\"Росси́йская импе́рия (рус. дореф. Россійская имперія; также Всеросси́йская импе́рия, ца́рская Росси́я) — государство, существовавшее в период с 22 октября (2 ноября) 1721 года до Февральской революции и провозглашения республики в сентябре 1917 года Временным правительством.\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    // numberOfQuestions:8,\r\n    quizzes: [\r\n        quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizTheEraOfPalaceCoups\r\n    ]\r\n}\r\n\r\nexport default ageRussianEmpire;\r\n","import imageTheEraOfPalaceCoups from \"../../img/ageRussianEmpire/The era of palace coups/The era of palace coups.png\";\r\n\r\nconst quizTheEraOfPalaceCoups = {\r\n    title: \"Эпоха Дворцовых переворотов\",\r\n    imageSrc: imageTheEraOfPalaceCoups,\r\n    questions: []\r\n}\r\n\r\nexport default quizTheEraOfPalaceCoups;\r\n","import imgMain from \"../../img/ageRF/MMM/MMM.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/MMM/MMM.jpg\";\r\n\r\nconst quizMMM = {\r\n    title: \"МММ\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default quizMMM;\r\n","import imgMain from \"../../img/ageRF/Privatization/Privatization.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/Privatization/Privatization.jpg\";\r\n\r\nconst Privatization = {\r\n    title: \"Приватизация\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default Privatization;\r\n","import imgMain from \"../../img/ageRF/TheChechenWar/TheChechenWar.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/TheChechenWar/TheChechenWar.jpg\";\r\n\r\nconst TheChechenWar = {\r\n    title: \"Чеченская война\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default TheChechenWar;\r\n","import imgMain from \"../../img/ageRF/TheWhiteHouse/TheWhiteHouse.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/TheWhiteHouse/TheWhiteHouse.jpg\";\r\n\r\nconst TheWhiteHouse = {\r\n    title: \"Белый дом\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default TheWhiteHouse;\r\n","import imgMain from \"../../img/ageRF/Yeltsin/Yeltsin.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/Yeltsin/Yeltsin.jpg\";\r\n\r\nconst Yeltsin = {\r\n    title: \"Ельцин\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default Yeltsin;\r\n","import ageRussianEmpire from \"./ageRussianEmpire/ageRussianEmpire\";\r\nimport ageRF from \"./ageRF/ageRF\";\r\n\r\nimport results from \"./results/results\";\r\n\r\nconst store = {\r\n    eras: [\r\n        ageRussianEmpire,\r\n        ageRF,\r\n        // ageRF,\r\n        // ageRussianEmpire,\r\n        // ageRussianEmpire,\r\n        // ageRussianEmpire\r\n    ],\r\n\r\n    results,\r\n\r\n    // isAgeAndQuizesDownloaded:false,\r\n\r\n    MAX_SCORE: 8\r\n}\r\n\r\nexport default store;\r\n\r\nconst calculatePercentAge = (era) => {\r\n    const numberOfPassedQuizes = era.quizzes.reduce((sum, quiz) => {\r\n        return quiz.percentProgress !== undefined ?sum + 1 :sum\r\n    }, 0);\r\n\r\n    return Math.round(numberOfPassedQuizes / era.length * 100);\r\n}\r\n\r\nexport const savePercentQuiz = (indexAge, indexQuiz, percentProgress) => {\r\n    store.eras = store.eras.map((era, i) => {\r\n        if (i !== indexAge) {\r\n            return era;\r\n        }\r\n\r\n        if (era.quizzes[indexQuiz].percentProgress === undefined) {\r\n            era.quizzes[indexQuiz].percentProgress = percentProgress;\r\n        } else {\r\n            era.quizzes[indexQuiz].percentProgress = Math.max(percentProgress, era.quizzes[indexQuiz].percentProgress);\r\n        }\r\n\r\n        era.percentProgress = calculatePercentAge(era);\r\n\r\n        return {...era};\r\n    })\r\n}\r\n","import imgMain from \"../../img/ageRF/Zero/Zero.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/Zero/img1.jpg\";\r\nimport img2 from \"../../img/ageRF/Zero/img2.jpg\";\r\nimport img3 from \"../../img/ageRF/Zero/img3.jpg\";\r\nimport img4 from \"../../img/ageRF/Zero/img4.jpg\";\r\nimport img5 from \"../../img/ageRF/Zero/img5.jpg\";\r\nimport img6 from \"../../img/ageRF/Zero/img6.jpg\";\r\nimport img7 from \"../../img/ageRF/Zero/img7.jpg\";\r\nimport img8 from \"../../img/ageRF/Zero/img8.jpg\";\r\n\r\nconst Zero = {\r\n    title: \"Нулевые\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 8,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/kristoffer-trolle/40588411473/in/photolist-24QEdDP-8rou28-6YCCCD-7qqiVa-Myr8m3-NgsQHD-7CvC46-CKME9U-29DVmgL-XwC2eb-pCHa79-aebVAb-P3CF5L-rUE8tQ-HHkMwh-JeKXGC-TxLrF2-D8c4fL-21osJCo-bRGzWx-NAHSP-DNeEib-y5oQTb-eDDNiF-uEyuJi-e4WqDn-rDQWNB-215SXvJ-o7Ny3d-fxJyd-r9hjk7-EesQgh-25MtnPo-H5673U-rxHCGA-qj9wvw-r3BfHh-4wCRXA-CvASK4-tkHTtd-f9geAA-bnVBLy-dmpbvA-rafVkw-923mtQ-r2Wikr-dNaA5i-amkjYy-dTHUqH-K6Wp4P\",\r\n            questionText: \"Почему 25 мая 2005 года в Москве многим людям пришлось возвращаться домой пешком?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Из-за взрыва в метро\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Произошла авария в энергосистеме\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Противники монетизации льгот перекрыли дороги\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img2,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/brieuc/2991630124/in/photolist-5ymTpJ-5ZJcJE-4kASi1-NoSdv-5yi5Ec-pXrD2-7fPmpj-3AdyY-4CPjhT-gDc7J-srznLQ-d4MKmq-56SVMa-bpyXtS-4vcES-2fUXwQ-29p2FSm-qcPEhP-5DXQGC-5DTzcH-5noFUF-6raagH-6hZM5z-5ZyvB5-8Tyg7-6XiSgc-4RtyeS-5M8mj9-6z5WDK-oKqCP3-bLLfP4-xgqxs-AE6Fi-ju4wrN-pkCDA-sztQL-b71xan-5kkWtd-9BTx9a-9BWukL-5GMdDZ-4V56W1-5hVhCa-6n5fV9-768R64-DCrNF1-2jNRATr-2fq1HPd-Ld5ujp-qdcjg2\",\r\n            questionText: \"Почему 25 мая 2005 года в Москве многим людям пришлось возвращаться домой пешком?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"2001\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"2004\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2008\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img3,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/32322040@N06/50576826581/in/photolist-2k4istp-QoDBgD-xgDuU3-2jASiTV-QJUB67-2iuNpzh-2ehiLwT-dcDsdB-2iNsXkD-2iuQdMq-25aqNt6-2iWYGAu-nZdgyD-2iLADAh-2iDR6zt-2j7GkRF-QBsgF6-2iUTKSn-cRmUJ1-cRmULh-cRmUGd-i3eUEZ-2irfvgQ-urWciH-2k4isum-2jjTez5-2hhHymA-2i5LXcJ-8FnKmY-DG4X-2yYiA6-2z33Th-2z2nej-2z33Vu-2z2n2y-2z2n3w-2z343m-2gyhZ5E-2yYV9o-2z2n1o-3RzVuS-2z33Z9-2iMKS3w-2yYVbE-2yWydf-d4o3mb-22oZfLu-2yVUwC-2yVUsG-2yVUvN\",\r\n            questionText: \"Что происходило с 23 по 26 октября 2002 года в Москве?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Саммит «большой восьмёрки»\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Газовый конфликт между Россией и Украиной\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Захват заложников в Театральном центре на Дубровке\",\r\n                    score: 1\r\n                }\r\n            ]\r\n        },        \r\n        {\r\n            imageSrc: img4,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/sibekokke/1117587017/in/photolist-2GKVFF-4ArWj3-4ygBrh-AnVpq6-7HGaTv-GgzTog-Bkkgre-4YjV7o-4YfEBe-4YjUNs-4YjVid-4YfEje-AJvfft-8dMR6q-4ygBs7-5WQmfd-AnVrBR-Bi2yGf-ALPoRR-2j2GjKs-4wBMzC-91qfBY-dwKhcg-A9EDFy-8hazk-HNsZa4-26J5X2S-5PRtEX-2krvCEx-5PRtp4-osfhkr-AP18e-5PRtLK-B6wMW4-gLPvM-FxkA8-8Bf55K-4nFYWF-emPbDW-ruNTSk-aTbG8-gh5hni-5EbEEj-6TCsp-6z3eJ-5FaTYA-5F6ArR-5FaTyq-nskxq-MXNhw9\",\r\n            questionText: \"Что произошло в августе 2000 года, когда вещание большинства российских телеканалов на Москву и Московскую область было приостановлено, а три человека погибли?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Захват НТВ\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Погром на Манежной площади\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Пожар на Останкинской телебашне \",\r\n                    score: 1\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img5,\r\n            linkOriginPhoto: \"\",\r\n            questionText: \"С этим местом связана трагедия, произошедшая 17 августа 2009 года. Что это?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"АЭС Фукусима–1\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Саяно–Шушенская ГЭС \",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"АЭС Три–Майл–Айленд\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img6,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/zapthedingbat/5531724951/in/photolist-9qPx78-9qSnz3-o8hRRG-o8gKNx-9qPp7n-ir7oD-opuQqP-9qSnao-9qSwzG-orwxyZ-2iyguJu-JWvMub-K6GPFT-4g1yNz-2iBjUJe-9qPoo2-2iz1sjb-CEYF1-5kQnpy-orwGNv-orw8Ga-9qSnjC-o8igvK-opumr2-9qPoF2-5kQmFs-o8hTy9-opLMti-9qPovZ-9qPoGT-onKE5f-opuCFM-9qSndd-9qPpNX-opMna6-onK7Mq-o8hdnq-opMdSK-9qPobp-9qSp3q-9qSq3j-4UKAC3-opLKaF-9qSnuL-orwZXk-9qPpZH-9qSoP7-orwQPa-9qSwyo-onKs8j\",\r\n            questionText: \"Что произошло в апреле 2000 года?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Завершились активные боевые действия Второй чеченской войны\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Избрание В. Путина президентом РФ\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Арест Михаила Ходорковского\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img7,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/pedrosz/49669484811/in/photolist-2iF86nM-2jk9zix-2jpG2vB-2iyfWEn-2iH9LAh-2iDf1xj-2iFLyQe-2jkLbtb-2jCHgRr-2jA15Uq-2jr8eXe-2iEisj4-2iz1sjb-2izAGFg-2iD1St6-EdzN4R-2g9GhyY-2dJcKUK-24ssb7a-2i3eGHC-2cp7FMA-ffie9A-ff3Yhi-2iCfHbL-ECRTvP-2jFbsyv-CnrC6x-296vjMN-2extTv2-2hZdqf7-EjWwZq-2iCt4RR-ffiaou-A5RQhb-HKMLB2-ffiea9-2gN8Agy-ffiaps-ffiapf-ff3Q2X-ff3U6p-21qQHWo-2gsXy7H-nkxYsz-FnKro6-CT88Vh-2gY5VHz-KVUtkj-RnxoCJ-N27twc\",\r\n            questionText: \"Значимое событие в 2006 в Санкт-Петербурге\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Саммит глав стран «Большой восьмёрки»\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Саммит глав стран “СНГ”\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Международный форум стран экспортёров газа\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img8,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/pedrosz/49669484811/in/photolist-2iF86nM-2jk9zix-2jpG2vB-2iyfWEn-2iH9LAh-2iDf1xj-2iFLyQe-2jkLbtb-2jCHgRr-2jA15Uq-2jr8eXe-2iEisj4-2iz1sjb-2izAGFg-2iD1St6-EdzN4R-2g9GhyY-2dJcKUK-24ssb7a-2i3eGHC-2cp7FMA-ffie9A-ff3Yhi-2iCfHbL-ECRTvP-2jFbsyv-CnrC6x-296vjMN-2extTv2-2hZdqf7-EjWwZq-2iCt4RR-ffiaou-A5RQhb-HKMLB2-ffiea9-2gN8Agy-ffiaps-ffiapf-ff3Q2X-ff3U6p-21qQHWo-2gsXy7H-nkxYsz-FnKro6-CT88Vh-2gY5VHz-KVUtkj-RnxoCJ-N27twc\",\r\n            questionText: \"Что было в 2009 году в России впервые?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Евровидение\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Фестиваль нашествие\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Фестиваль хиппи\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        \r\n    ]\r\n}\r\n\r\nexport default Zero;\r\n","import mainImage from \"../../img/ageRF/ageRF.jpg\";\r\nimport MMM from \"./MMM\";\r\nimport Privatization from \"./Privatization\";\r\nimport TheChechenWar from \"./TheChechenWar\";\r\nimport TheWhiteHouse from \"./TheWhiteHouse\";\r\nimport Yeltsin from \"./Yeltsin\";\r\nimport Zero from \"./Zero\";\r\n\r\nconst ageRF = {\r\n    title: \"РФ\",\r\n    shortTitle: \"РФ\",\r\n    imageSrc: mainImage,\r\n    description:\"Росси́йская федерация\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    quizzes: [\r\n        MMM,\r\n        // Privatization,\r\n        // TheChechenWar,\r\n        // TheWhiteHouse,\r\n        // Yeltsin,\r\n        // Zero\r\n    ]\r\n}\r\n\r\nexport default ageRF;","const results = [\r\n    {\r\n        percent: 0,\r\n        year: \"1700\",\r\n        historicalEvent: \"Начало Северной войны со Швецией\"\r\n    },\r\n    {\r\n        percent: 1,\r\n        year: \"1011\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 2,\r\n        year: \"1022\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 3,\r\n        year: \"1033\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 4,\r\n        year: \"1054\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 5,\r\n        year: \"1065\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 6,\r\n        year: \"1076\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 7,\r\n        year: \"1087\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 8,\r\n        year: \"1108\",\r\n        historicalEvent: \"в Витичеве прошёл 2-й съезд князей Киевской Рус\"\r\n    }\r\n]\r\n\r\nexport default results;\r\n","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\nimport store, { savePercentQuiz } from \"./store/store.js\";\r\nimport { Platform } from \"@vkontakte/vkui\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nbridge\r\n    .send(\"VKWebAppGetClientVersion\")\r\n    .then(data => {\r\n        if(data.platform === Platform.IOS){\r\n            bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\"});\r\n        }\r\n        else if (data.platform === Platform.ANDROID){\r\n            bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#000\",\"navigation_bar_color\":\"#000000\"});\r\n        }\r\n    })\r\n    .catch(error =>{\r\n        console.log(error)\r\n    })\r\n\r\n// const [isDownloaded, setIsDownloaded] = \r\n\r\n// const downloadImagesArr = async(arr) => {\r\n//     for(let i=0;i<arr.length;i++){\r\n//         await new Promise((resolve, reject) => {\r\n//             const img = new Image();\r\n//             img.src = arr[i].imageSrc;\r\n//             img.onload = () => {\r\n//                 resolve()\r\n//             }\r\n//         });\r\n//     }\r\n// }\r\n// const firstDownload = async () => {\t\r\n//     await downloadImagesArr(store.eras);\r\n//     for(let i=0;i<store.eras.length;i++)\r\n//     {\r\n//         await downloadImagesArr(store.eras[i].quizzes)\r\n//     }\r\n// }\r\n// firstDownload().then(()=>{\r\n//     startRender()\r\n// })\r\n\r\n\r\nReactDOM.render(\r\n    <App {...store} savePercentQuiz={savePercentQuiz}/>, \r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// const startRender = () =>{\r\n\r\n// }\r\n\r\n\r\nimport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n\r\n","import { Icon28ChevronDownOutline } from '@vkontakte/icons';\r\nimport { Panel, platform, Text, Div, Platform, PanelHeaderButton}  from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ButtonWrapper from '../../../components/ButtonWrapper/ButtonWrapper';\r\nimport Header from '../../../components/Header/Header';\r\nimport PanelWrapper from '../../../components/PanelWrapper/PanelWrapper';\r\n\r\nimport \"./IteamListQuestion.css\";\r\n\r\nconst osName = platform();\r\n\r\nconst IteamListQuestion = ({ id, question,\r\n    numberCurrentQuestion, countQuestions, indexAnswer,name,\r\n    goToPrevQuestion, goToNextQuestion,isModalOpen,isClicked,\r\n    changeModal = () => {}, setNotActiveBackgoundToAnswerButton = () => {} }) => {\r\n\r\n    const [isImgInfoOpen, setisImgInfoOpen] = useState(false)\r\n\r\n    const onLinkClick = (e) => e.stopPropagation();\r\n\r\n    return (\r\n        <PanelWrapper id={id} name={name} isOneColumn={true}\r\n        \r\n            onHeaderClose={numberCurrentQuestion === 1 ? goToPrevQuestion:false}\r\n            onHeaderBack={goToPrevQuestion}\r\n            headerText={numberCurrentQuestion + \" из \" + countQuestions}\r\n            headerIcon={<Icon28ChevronDownOutline style={{ transform: `rotate(${isModalOpen ? '180deg' : '0'})`, transition:\"0.5s\" }} />}\r\n            headerClick={changeModal}\r\n        >\r\n            <div className=\"IteamListQuestion\">\r\n                \r\n                    <div className=\"IteamListQuestion__image-container\" onClick={() => {setisImgInfoOpen(!isImgInfoOpen)}}>\r\n\r\n                        <img\r\n                            className=\"IteamListQuestion__image\" \r\n                            src={question.imageSrc}\r\n                        />\r\n                        \r\n                        <CSSTransition \r\n                            in={isImgInfoOpen} \r\n                            timeout={200}   \r\n                            classNames=\"IteamListQuestion__image-info\"\r\n                            onEnter={() => {setisImgInfoOpen(true)}}\r\n                            onExited={() => {setisImgInfoOpen(false)}}>\r\n                            <div className=\"IteamListQuestion__image-info\">\r\n                                <Div className=\"IteamListQuestion__image-description\">\r\n                                    Источник: <br/>\r\n                                    {\r\n                                        isImgInfoOpen\r\n                                        ?<a \r\n                                            href={question.linkOriginPhoto} \r\n                                            className=\"IteamListQuestion__image-link\"\r\n                                            target=\"_blank\"\r\n                                            onClick={onLinkClick}\r\n                                        >\r\n                                            Клик\r\n                                        </a>\r\n                                        :<span className=\"IteamListQuestion__image-link\">\r\n                                            Клик \r\n                                        </span>\r\n                                    }\r\n                                    \r\n                                </Div>\r\n                            </div>\r\n                        </CSSTransition>\r\n\r\n                    </div>\r\n\r\n                    <Text weight=\"regular\" className=\"IteamListQuestion__question\">{question.questionText}</Text> \r\n\r\n                    <div className=\"IteamListQuestion__answer-options\">\r\n                        {\r\n                            question.answerOptions.map((answer, i) => (\r\n                                <ButtonWrapper\r\n                                    onClick={() => {\r\n                                        setNotActiveBackgoundToAnswerButton();\r\n                                        goToNextQuestion(i);\r\n                                    }}\r\n                                    isActived={indexAnswer === i}\r\n                                    text={answer.text}\r\n                                    className={`IteamListQuestion__answer ${isClicked?\"IteamListQuestion__answer-active\":\"\"}` }\r\n                                >\r\n                                </ButtonWrapper>\r\n                            ))\r\n                        }\r\n                    </div>\r\n            </div>\r\n        </PanelWrapper>\r\n    )\r\n};\r\n\r\nexport default IteamListQuestion;\r\n","import { Icon28CancelOutline } from '@vkontakte/icons';\r\nimport { Div, PanelHeader, PanelHeaderBack, PanelHeaderClose, PanelHeaderContent, platform, Platform, usePlatform  } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport Marquee from 'react-double-marquee';\r\n// import { isTitleCentre } from '../../help';\r\nimport './Header.css'\r\n\r\nconst WIDTH_HEAD_TEXT_CENTERED = 380;\r\nconst RIGHT_STUB_WIDTH = 95;\r\n// const ANDROID_MARGIN_LEFT = \"16px\";\r\n// const IOS_MARGIN_LEFT = \"12px\";\r\nconst PLATFORM_MARGIN_LEFT = usePlatform !== Platform.IOS ? 16 : 12\r\n\r\n\r\nconst getTextWidth = (text) => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n  \r\n    context.font = '20px Lato';\r\n  \r\n    return context.measureText(text).width + 25;\r\n  }\r\n  \r\nconst getTitle = (text, icon, curWidth, hasLeftBtn, click) => {\r\n    console.log(icon)\r\n\r\n    const LEFT_BTN_WIDTH = hasLeftBtn ? 42 : PLATFORM_MARGIN_LEFT;\r\n\r\n    let textWidth = getTextWidth(text);\r\n    let marginLeft = 0\r\n    // console.log(curWidth)\r\n\r\n    //Если можем зацентрить текст\r\n    if( (curWidth - textWidth)/2 > RIGHT_STUB_WIDTH )\r\n    {\r\n        marginLeft = hasLeftBtn ? (RIGHT_STUB_WIDTH - LEFT_BTN_WIDTH) : RIGHT_STUB_WIDTH;\r\n        marginLeft+=\"px\"\r\n\r\n        return(\r\n            <div onClick={click} style={{width:\"100%\", maxWidth:\"100%\", paddingLeft:marginLeft}}>\r\n                <div className=\"Header__title\">\r\n                    {text}\r\n                    {icon}\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    }else{\r\n        marginLeft = hasLeftBtn ? 0 : PLATFORM_MARGIN_LEFT;\r\n        let maxWidth = curWidth - RIGHT_STUB_WIDTH - LEFT_BTN_WIDTH - 8;\r\n\r\n        //Если текст не влезает\r\n        if(textWidth > maxWidth)\r\n        {\r\n            return(\r\n                <div onClick={click} style={{width:\"100%\", paddingLeft:marginLeft}}>\r\n                    <div className=\"Header__title\" style={{maxWidth:maxWidth}}>\r\n                        <Marquee childMargin=\"20\" speed=\"0.08\" direction=\"left\" delay=\"600\">\r\n                            {text}\r\n                            {icon}\r\n                        </Marquee>\r\n                    </div>\r\n                </div>\r\n            ) \r\n        }else{\r\n            return(\r\n                <div onClick={click} style={{maxWidth:\"100%\", paddingLeft:marginLeft}}>\r\n                    <div className=\"Header__title\" style={{maxWidth:maxWidth, textAlign:\"start\"}}>\r\n                        {text}\r\n                        {icon}\r\n                    </div>\r\n                </div>\r\n            ) \r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst Header = ({curWidth, onBack, onClose, isFixed, text, icon, click}) => {\r\n    console.log(icon)\r\n\r\n    let left;\r\n    let cursor = \"inherit\";\r\n    let fixed = \"true\";\r\n    let leftClick;\r\n\r\n    if (onClose) {\r\n        left = <PanelHeaderClose className=\"Header__button\" >\r\n            <Icon28CancelOutline></Icon28CancelOutline>\r\n        </PanelHeaderClose>\r\n        leftClick = onClose\r\n    }\r\n    else if (onBack){\r\n        left = <PanelHeaderBack className=\"Header__button\" ></PanelHeaderBack>\r\n        leftClick = onBack\r\n    }\r\n\r\n    if(click){\r\n        cursor=\"pointer\"\r\n    }\r\n\r\n    if(!isFixed){\r\n        fixed = false;\r\n    }\r\n\r\n    return(\r\n        <PanelHeader                     \r\n            separator={false}\r\n            visor={true}\r\n            fixed={fixed}\r\n            >\r\n\r\n            <div className=\"Header__inside\" style={{cursor:cursor}}>\r\n                {left && <div className=\"Header__leftBtn\" onClick={leftClick}>{left}</div>}\r\n                {getTitle(text,icon,curWidth, left, click)}\r\n                <div className=\"Header__rightStub\" onClick={click}></div>\r\n            </div>\r\n\r\n        </PanelHeader>\r\n    )\r\n}\r\n\r\nexport default Header","module.exports = __webpack_public_path__ + \"static/media/MMM.5b367f29.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Privatization.151bf0e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TheChechenWar.6ad161bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TheWhiteHouse.034671a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Yeltsin.c735400b.jpg\";","import { ContentCard, Div } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport CardWrapper from '../CardWrapper/CardWrapper';\r\nimport './ListCard.css';\r\n\r\nconst ListCard = ( { info, curWidth, cardClick = (index) => null, downloadImage = (index) => null }) => {\r\n\r\n    const getWidthInfo = () => {\r\n        if(curWidth>1280){\r\n            return {colNumber:\"s\", maxWidth:\"--main-three-col-max-width\"}\r\n        }\r\n        else if (curWidth>560){\r\n            return {colNumber:\"m\", maxWidth:\"--main-two-col-max-width\"}\r\n        }\r\n        else {\r\n            return {colNumber:\"l\", maxWidth:\"--main-one-col-max-width\"}\r\n        } \r\n    }\r\n\r\n    return (\r\n            <div className=\"ListCard\" style={{maxWidth:getWidthInfo().maxWidth}}>\r\n                {\r\n                    info.map((record,i) => (\r\n                        <div key={record.russianName}>\r\n                            <CardWrapper\r\n                                title={record.russianName}\r\n                                percentProgress={record.percentProgress}\r\n                                numberOfQuestions={record.surveys.length}\r\n                                cardClick={cardClick(i)}\r\n                                downloadImage={downloadImage}\r\n                                imageName={record.image.imageName}\r\n                                description={record.description}\r\n                            >\r\n                            </CardWrapper>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ListCard","import { ContentCard } from \"@vkontakte/vkui\"\r\nimport React, { useState } from 'react';\r\nimport './CardWrapper.css';\r\nimport defaultImage from '../../img/defaultImage.svg'\r\n\r\nconst CardWrapper = ({title,percentProgress,numberOfQuestions,imageName,description,cardClick=()=>{}, downloadImage=()=>{}}) => {\r\n\r\n    //Устанавливаем дефолтую картинку на карточки\r\n    const [image, setImage] = useState(<div className=\"defaultCSS\"></div>)\r\n\r\n    //Загружаем основную картинку\r\n    // downloadImage(imageName).then(imageData=>{setImage(`data:image/jpeg;base64,${imageData}`)})\r\n\r\n    return(\r\n    <ContentCard\r\n        header={\r\n            <div className=\"CardWrapper__title\">\r\n                <div>{title}</div>\r\n                <div>{percentProgress}/{numberOfQuestions}</div>\r\n            </div>\r\n        }\r\n        mode={\"tint\"}\r\n        onClick={cardClick}\r\n        image={defaultImage}\r\n        caption={description}\r\n        className=\"CardWrapper__Card\"\r\n    />\r\n)}\r\n\r\nexport default CardWrapper","module.exports = __webpack_public_path__ + \"static/media/Petr1.58cb079c.png\";","import { Card, CardScroll, Panel, PanelHeader, View, CardGrid, ContentCard, Button, ScreenSpinner, usePlatform, Platform} from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport ButtonWrapper from '../../components/ButtonWrapper/ButtonWrapper';\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\n\r\n\r\nimport svgContacts from './contacts.svg';\r\n\r\nimport './StartWindow.css';\r\n\r\n\r\nconst StartWindow = ({id, onClick=()=>{}}) => {\r\n\r\n    // const marginBottom = usePlatform() === Platform.VKCOM ? \"40px\" : \"0px\"\r\n    \r\n    return (\r\n        <View id={id}> \r\n            <PanelWrapper separator={false} isHeaderHide={true} isVerticalCentre={true}>\r\n                <div className=\"StartWindow\">\r\n                    <div className=\"StartWindow__container\">\r\n                        <img width=\"50\" height=\"50\" src={svgContacts} alt=\"contacts\"/>\r\n                        <h1 className=\"StartWindow__title\">Привет, друг!</h1>\r\n                        <p className=\"StartWindow__text\">\r\n                            Это приложение поможет тебе проверить свои знания в области истори родной страны. Удачи!\r\n                        </p>\r\n                        <ButtonWrapper className=\"StartWindow__button\" classNameText=\"StartWindow__button-text\" isCentered={true} onClick={onClick} text=\"Поехали!\"></ButtonWrapper>\r\n                    </div>\r\n                </div>\r\n            </PanelWrapper>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default StartWindow;","module.exports = __webpack_public_path__ + \"static/media/contacts.da748c82.svg\";","import React from 'react';\r\n\r\nlet curWidth = document.getElementById('root').scrollWidth;\r\n\r\nexport function isTitleCentre ( element) {\r\n    return({\r\n    stub:curWidth >= 370 ? <div style={{width:\"90px\"}}>{element} </div> :element,\r\n    text:curWidth >= 370 ? \"center\" : \"start\"\r\n    })\r\n}\r\n\r\nexport function getwidthInfo() {\r\n    if(curWidth>1280){\r\n        return {colNumber:\"s\", maxWidth:\"1500px\"}\r\n    }\r\n    else if (curWidth>560){\r\n        return {colNumber:\"m\", maxWidth:\"1280px\"}\r\n    }\r\n    else {\r\n        return {colNumber:\"l\", maxWidth:\"560px\"}\r\n    } \r\n}\r\n","import React from \"react\";\r\nimport { ANDROID, IOS, ModalPageHeader, useAdaptivity, usePlatform, PanelHeaderButton, PanelHeaderClose, ViewWidth } from \"@vkontakte/vkui\";\r\nimport './ModalPageHead.css'\r\nimport { isTitleCentre } from \"../../help\";\r\nimport { Icon24Dismiss } from \"@vkontakte/icons\";\r\n\r\n\r\nconst ModalPageHead = ({text, curWidth, onClose = () => {}}) => {\r\n\r\n    let textAlign = isTitleCentre(curWidth).text;\r\n    const { viewWidth } = useAdaptivity();\r\n    const isDesktop = !(viewWidth >= ViewWidth.SMALL_TABLET);    \r\n    return(\r\n        <ModalPageHeader\r\n            // separator={false}\r\n            // visor={true}\r\n            // transparent={true}\r\n            right={isDesktop && <Icon24Dismiss className=\"ModalPageHead__button-close\" onClick={onClose}/>}\r\n            left={isDesktop && <PanelHeaderClose className=\"ModalPageHead__button-pug\"/>}\r\n        >\r\n         <div className=\"ModalPageHead__inside\" style={{textAlign}}>\r\n            {text}\r\n        </div>\r\n        </ModalPageHeader>\r\n    )\r\n}\r\n\r\nexport default ModalPageHead","function makeEaseOut(timing) {\r\n  return function (timeFraction) {\r\n    return 1 - timing(1 - timeFraction);\r\n  }\r\n}\r\n\r\nconst easeOut = makeEaseOut((timeFraction) => timeFraction);\r\n\r\nexport default easeOut;\r\n","import { Div, FixedLayout } from '@vkontakte/vkui';\r\nimport React, { createRef, useEffect, useState } from 'react';\r\nimport animate from '../../../anime/animate';\r\nimport easeOut from '../../../anime/easeOut';\r\nimport BlackBackground from '../../../components/BlackBackground/BlackBackground';\r\nimport ButtonWrapper from '../../../components/ButtonWrapper/ButtonWrapper';\r\nimport Arrow, { colorsArrow, directionArrow } from './Arrow';\r\nimport { Icon16CheckCircleOutline } from '@vkontakte/icons';\r\nimport { Icon16CancelCircleOutline } from '@vkontakte/icons';\r\n\r\nimport \"./ItemAnswerQuestion.css\";\r\n\r\nconst ItemAnswerQuestion = ({indexQuestion, question, indexRightAnswer, indexUserAnswer, openAlert = () => {} }) => {\r\n\r\n    const ICON_SIZE = 24;\r\n\r\n    return (\r\n        <div className=\"ItemAnswerQuestion\">\r\n            <ButtonWrapper\r\n                onClick={ () => {openAlert(indexQuestion)}}\r\n                text={question.questionText}\r\n                classNameText=\"ItemAnswerQuestion__button-text\"\r\n                hasActive={false}\r\n                before={indexRightAnswer === indexUserAnswer \r\n                    ? <Icon16CheckCircleOutline height={ICON_SIZE} width={ICON_SIZE} style={{color:\"var(--main-green-color)\"}}/> \r\n                    : <Icon16CancelCircleOutline height={ICON_SIZE} width={ICON_SIZE} style={{color:\"var(--main-red-color)\"}}/> }\r\n            >\r\n            </ButtonWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemAnswerQuestion;\r\n","import { Icon24Back } from '@vkontakte/icons';\r\nimport { Alert, Div, Panel, PanelHeader, PanelHeaderButton, View } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport Arrow from './ItemAnswerQuestion/Arrow';\r\n// import './ItemAnswerQuestion/ItemAnswerQuestion.css';\r\n\r\nimport \"./AnswersQuestions.css\";\r\nimport ItemAnswerQuestion from './ItemAnswerQuestion/ItemAnswerQuestion';\r\nimport ButtonWrapper from '../../components/ButtonWrapper/ButtonWrapper';\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\n\r\nconst AnswersQuestions = ({id, questions, indexesAnswers, onBack=()=>{}, openAlert=()=>{}}) => {\r\n\r\n    return (\r\n        <PanelWrapper id={id} headerText=\"Вопросы\" onHeaderBack={onBack} isOneColumn={true}>\r\n\r\n            <div style={{display:\"flex\",justifyContent:\"center\"}}>\r\n                <div className=\"AnswersQuestions\">\r\n                {\r\n                    questions.map((q, i) => (\r\n                        <ItemAnswerQuestion\r\n                            indexQuestion={i}\r\n                            question={q}\r\n                            indexRightAnswer={questions[i].answerOptions.findIndex(a => a.score === 1)}\r\n                            indexUserAnswer={indexesAnswers[i]}\r\n                            openAlert={openAlert}\r\n                        />\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        </PanelWrapper>\r\n    )\r\n}\r\n\r\nexport default AnswersQuestions;\r\n"],"sourceRoot":""}