{"version":3,"sources":["img/ageRussianEmpire/The era of palace coups/The era of palace coups.png","img/ageRF/ageRF.jpg","img/ageRF/Zero/Zero.jpg","img/ageRF/Zero/img1.jpg","img/ageRF/Zero/img2.jpg","img/ageRF/Zero/img3.jpg","img/ageRF/Zero/img4.jpg","img/ageRF/Zero/img5.jpg","img/ageRF/Zero/img6.jpg","img/ageRF/Zero/img7.jpg","img/ageRF/Zero/img8.jpg","img/ageRussianEmpire/Petr1/img1.png","panels/SpinnerView/test.svg","panels/SpinnerView/i.svg","img/ageRussianEmpire/main.png","components/ButtonWrapper/ButtonWrapper.js","components/Header/Header.js","components/PanelWrapper/PanelWrapper.js","panels/StartWindow/StartWindow.js","help.js","components/CardWrapper/CardWrapper.js","components/ListCard/ListCard.js","panels/ListAge/ListAge.js","panels/ListQuestions/IteamListQuestion/IteamListQuestion.js","components/ModalPageHead/ModalPageHead.js","components/AlertWrapper/AlertWrapper.js","panels/ListQuestions/ListQuestions.js","components/AlertQuestionResult/AlertQuestionResult.js","anime/easeOut.js","panels/AnswersQuestions/ItemAnswerQuestion/ItemAnswerQuestion.js","panels/AnswersQuestions/AnswersQuestions.js","panels/Result/ResultButtons/ResultButtons.js","panels/Result/ResultCards/ResultCards.js","panels/Result/Result.js","panels/ListQuizes/ListQuizes.js","panels/SpinnerView/SpinnerView.js","App.js","store/ageRussianEmpire/quizPetr1.js","store/ageRussianEmpire/ageRussianEmpire.js","store/ageRussianEmpire/quizTheEraOfPalaceCoups.js","store/ageRF/MMM.js","store/ageRF/Privatization.js","store/ageRF/TheChechenWar.js","store/ageRF/TheWhiteHouse.js","store/ageRF/Yeltsin.js","store/store.js","store/ageRF/Zero.js","store/ageRF/ageRF.js","store/results/results.js","index.js","img/ageRF/MMM/MMM.jpg","img/ageRF/Privatization/Privatization.jpg","img/ageRF/TheChechenWar/TheChechenWar.jpg","img/ageRF/TheWhiteHouse/TheWhiteHouse.jpg","img/ageRF/Yeltsin/Yeltsin.jpg","panels/StartWindow/contacts.svg","img/ageRussianEmpire/Petr1/Petr1.png"],"names":["module","exports","ButtonWrapper","isActived","text","onClick","before","className","classNameText","isCentered","hasActive","style","isLinkForm","activeEffectDelay","mode","centered","PLATFORM_MARGIN_LEFT","usePlatform","Platform","IOS","getTitle","icon","curWidth","hasLeftBtn","click","console","log","LEFT_BTN_WIDTH","textWidth","context","document","createElement","getContext","font","measureText","width","getTextWidth","marginLeft","maxWidth","paddingLeft","childMargin","speed","direction","delay","textAlign","Header","left","onBack","onClose","isFixed","leftClick","cursor","fixed","separator","visor","PanelWrapper","id","name","children","isOneColumn","isVerticalCentre","isHeaderHide","isHeaderFixed","onHeaderClose","onHeaderBack","headerIcon","headerText","headerClick","useState","setCurWidth","curHeight","setCurHeight","useEffect","getElementById","scrollWidth","scrollHeight","minHeight","minWidth","justifyContent","StartWindow","height","src","svgContacts","alt","CardWrapper","title","percentProgress","numberOfQuestions","imageSrc","description","cardClick","header","image","caption","ListCard","info","index","colNumber","map","record","i","key","ListAge","eras","createOnClickItemAge","IteamListQuestion","platform","question","numberCurrentQuestion","countQuestions","indexAnswer","goToPrevQuestion","goToNextQuestion","isModalOpen","isClicked","changeModal","setNotActiveBackgoundToAnswerButton","isImgInfoOpen","setisImgInfoOpen","transform","transition","CSSTransition","in","timeout","classNames","onEnter","onExited","href","linkOriginPhoto","target","e","stopPropagation","weight","questionText","answerOptions","answer","ModalPageHead","element","stub","isDesktop","useAdaptivity","viewWidth","ViewWidth","SMALL_TABLET","right","AlertWrapper","leftText","leftFunc","rightText","rightFunc","actionsLayout","actions","autoclose","action","ListQuestions","arrQuestions","onFinish","totalScore","createIdActivePanel","history","setHistory","alert","setAlert","stateAnswers","setStateAnswers","indexQuestion","setIndexQuestion","setIndexQuestionAndHistory","newIndex","changeHistory","resetData","createGoToNextQuestion","maxLength","giveAnswer","onFinishWithAlert","createGoToPrevQuestion","openCloseListQuestionsAleret","lastIndexQuestion","setLastIndexQuestion","goToLastQuestion","setModalOpen","nextIndex","his","push","vkBridge","send","isAllAnswered","openFinishAlert","length","modal","activeModal","settlingHeight","arr","toIndexQuestion","buttons","getElementsByName","getElementsByClassName","backgroundColor","activePanel","onSwipeBack","popout","currentIndexQuestion","AlertQuestionResult","indexUserAnswer","indexRightAnswer","getAnswerText","timing","timeFraction","ItemAnswerQuestion","openAlert","color","AnswersQuestions","questions","indexesAnswers","display","q","findIndex","a","score","ResultButtons","onAgain","onGoToAnswersQuestion","goToViewListAndQuizes","size","makeCard","isFirstOpenResult","makeStepAnimDealyForCard","animationDelay","eraFilter","arrEras","indexAge","isCompletedQuiz","goToEras","retrunMessage","returnButtons","isHasNotFinishedEras","button","fontSize","ResultCards","indexQuiz","goToQuiz","quizFilterResult","arrQuizes","quizFilter","quizzes","eraFilterResult","Result","percent","quizes","setIsFirstOpenResult","createOnClickItemQuizes","setActivePanel","goBackInHistory","pop","bridge","goForwardInHistory","panelId","modifyIsFirstOpenResult","f","isAdVisible","setAdVisible","domain","trackingLink","ctaText","advertisingLabel","iconLink","ageRestrictions","statistics","url","type","adDate","isVisibleAlert","setIsVisibleAlert","curAnimDealyForCard","calcIndexUserAnswer","calcIndexRightAnswer","indexInAnswer","getClassNameForPercent","bannerData","ListQuizes","SpinnerView","points","stroke-width","fill","x","y","viewBox","xmlns","d","class","App","results","MAX_SCORE","savePercentQuiz","activeView","setActiveView","goToViewListAgeAndQuizes","goToViewListQuestions","goToViewResult","goToPanelListQuizes","setIndexAge","setIndexQuiz","indexResuslt","setIndexResult","setIndexesAnswers","http","axios","create","headers","Authorization","window","location","search","slice","isImageDownloaded","downloadQuizeImage","downloadImagesArr","view","Promise","resolve","reject","img","Image","onload","isWebView","scheme","animate","arrForPreDownload","get","then","res","sum","year","historicalEvent","quizPetr1","imagePetr1","imgExample","overSideImg","ageRussianEmpire","imageTheEraOfPalaceCoups","shortTitle","mainImage","quizMMM","imgMain","img1","store","img2","img3","img4","img5","img6","img7","img8","MMM","data","ANDROID","catch","error","ReactDOM","render","era","undefined","Math","max","numberOfPassedQuizes","reduce","quiz","round","calculatePercentAge","default"],"mappings":"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CjBC,kBAAmB,EACnBmO,mBAAmB,EACnBlO,SAAUuP,KACV3H,UAAW,CACP,CACI5H,SAAUwP,KACVC,YAAaD,KACb3M,aAAc,sMACdC,cAAe,CACX,CACIlI,KAAM,kUACNsN,MAAO,GAEX,CACItN,KAAM,mNACNsN,MAAO,GAEX,CACItN,KAAM,qVACNsN,MAAO,KAInB,CACIlI,SAAUwP,KACVC,YAAa,KACb5M,aAAc,yCACdC,cAAe,CACX,CACIlI,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,KAInB,CACIlI,SAAUwP,KACVC,YAAa,KACb5M,aAAc,yCACdC,cAAe,CACX,CACIlI,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,KAInB,CACIlI,SAAUwP,KACVC,YAAa,KACb5M,aAAc,yCACdC,cAAe,CACX,CACIlI,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,KAInB,CACIlI,SAAUwP,KACVC,YAAa,KACb5M,aAAc,yCACdC,cAAe,CACX,CACIlI,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,KAInB,CACIlI,SAAUwP,KACVC,YAAa,KACb5M,aAAc,yCACdC,cAAe,CACX,CACIlI,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,KAInB,CACIlI,SAAUwP,KACVC,YAAa,KACb5M,aAAc,yCACdC,cAAe,CACX,CACIlI,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,KAInB,CACIlI,SAAUwP,KACVC,YAAa,KACb5M,aAAc,yCACdC,cAAe,CACX,CACIlI,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,GAEX,CACItN,KAAM,IACNsN,MAAO,Q,UC3IZ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","file":"static/js/main.4c01b018.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/The era of palace coups.42e7310b.png\";","module.exports = __webpack_public_path__ + \"static/media/ageRF.c735400b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zero.8be729eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img1.350153d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.054fb62f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.a4c2df90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.483d9695.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img5.a03adca7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img6.44981534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img7.df89f5eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img8.6927082b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img1.f17bd5e3.png\";","module.exports = __webpack_public_path__ + \"static/media/test.b83e685d.svg\";","module.exports = __webpack_public_path__ + \"static/media/i.6a68b222.svg\";","module.exports = __webpack_public_path__ + \"static/media/main.96699d6f.png\";","import { CellButton } from \"@vkontakte/vkui\"\r\nimport React from \"react\"\r\n\r\nimport './ButtonWrapper.css'  \r\n\r\nconst ButtonWrapper = ({isActived, text, onClick, before, className, classNameText, isCentered, hasActive, style, isLinkForm}) => {\r\n\r\n\r\n    if(isLinkForm){\r\n        return(\r\n            <div className=\"ButtonWrapper__text_linkForm\" style={style} onClick={onClick}>{text}</div>\r\n        )\r\n    }\r\n    return(\r\n        <CellButton \r\n            activeEffectDelay={0}\r\n            onClick={onClick} \r\n            mode=\"secondary\"\r\n            centered={isCentered} \r\n            before={before}\r\n            hasActive={hasActive}\r\n            className={`ButtonWrapper ${isActived && \"ButtonWrapper_active\"} ${className}`}\r\n            style={style}\r\n\r\n        >\r\n            <div className={`ButtonWrapper__text ${classNameText}`}>\r\n                {text}\r\n            </div>\r\n        </CellButton>\r\n    )\r\n}\r\n\r\nexport default ButtonWrapper","import { Icon28CancelOutline } from '@vkontakte/icons';\r\nimport { Div, PanelHeader, PanelHeaderBack, PanelHeaderClose, PanelHeaderContent, platform, Platform, usePlatform  } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport Marquee from 'react-double-marquee';\r\n// import { isTitleCentre } from '../../help';\r\nimport './Header.css'\r\n\r\nconst WIDTH_HEAD_TEXT_CENTERED = 380;\r\nconst RIGHT_STUB_WIDTH = 95;\r\n// const ANDROID_MARGIN_LEFT = \"16px\";\r\n// const IOS_MARGIN_LEFT = \"12px\";\r\nconst PLATFORM_MARGIN_LEFT = usePlatform !== Platform.IOS ? 16 : 12\r\n\r\n\r\nconst getTextWidth = (text) => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n  \r\n    context.font = '20px Lato';\r\n  \r\n    return context.measureText(text).width + 25;\r\n  }\r\n  \r\nconst getTitle = (text, icon, curWidth, hasLeftBtn, click) => {\r\n    console.log(icon)\r\n\r\n    const LEFT_BTN_WIDTH = hasLeftBtn ? 42 : PLATFORM_MARGIN_LEFT;\r\n\r\n    let textWidth = getTextWidth(text);\r\n    let marginLeft = 0\r\n    // console.log(curWidth)\r\n\r\n    //Если можем зацентрить текст\r\n    if( (curWidth - textWidth)/2 > RIGHT_STUB_WIDTH )\r\n    {\r\n        marginLeft = hasLeftBtn ? (RIGHT_STUB_WIDTH - LEFT_BTN_WIDTH) : RIGHT_STUB_WIDTH;\r\n        marginLeft+=\"px\"\r\n\r\n        return(\r\n            <div onClick={click} style={{width:\"100%\", maxWidth:\"100%\", paddingLeft:marginLeft}}>\r\n                <div className=\"Header__title\">\r\n                    {text}\r\n                    {icon}\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    }else{\r\n        marginLeft = hasLeftBtn ? 0 : PLATFORM_MARGIN_LEFT;\r\n        let maxWidth = curWidth - RIGHT_STUB_WIDTH - LEFT_BTN_WIDTH - 8;\r\n\r\n        //Если текст не влезает\r\n        if(textWidth > maxWidth)\r\n        {\r\n            return(\r\n                <div onClick={click} style={{width:\"100%\", paddingLeft:marginLeft}}>\r\n                    <div className=\"Header__title\" style={{maxWidth:maxWidth}}>\r\n                        <Marquee childMargin=\"20\" speed=\"0.08\" direction=\"left\" delay=\"600\">\r\n                            {text}\r\n                            {icon}\r\n                        </Marquee>\r\n                    </div>\r\n                </div>\r\n            ) \r\n        }else{\r\n            return(\r\n                <div onClick={click} style={{maxWidth:\"100%\", paddingLeft:marginLeft}}>\r\n                    <div className=\"Header__title\" style={{maxWidth:maxWidth, textAlign:\"start\"}}>\r\n                        {text}\r\n                        {icon}\r\n                    </div>\r\n                </div>\r\n            ) \r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst Header = ({curWidth, onBack, onClose, isFixed, text, icon, click}) => {\r\n    console.log(icon)\r\n\r\n    let left;\r\n    let cursor = \"inherit\";\r\n    let fixed = \"true\";\r\n    let leftClick;\r\n\r\n    if (onClose) {\r\n        left = <PanelHeaderClose className=\"Header__button\" >\r\n            <Icon28CancelOutline></Icon28CancelOutline>\r\n        </PanelHeaderClose>\r\n        leftClick = onClose\r\n    }\r\n    else if (onBack){\r\n        left = <PanelHeaderBack className=\"Header__button\" ></PanelHeaderBack>\r\n        leftClick = onBack\r\n    }\r\n\r\n    if(click){\r\n        cursor=\"pointer\"\r\n    }\r\n\r\n    if(!isFixed){\r\n        fixed = false;\r\n    }\r\n\r\n    return(\r\n        <PanelHeader                     \r\n            separator={false}\r\n            visor={true}\r\n            fixed={fixed}\r\n            >\r\n\r\n            <div className=\"Header__inside\" style={{cursor:cursor}}>\r\n                {left && <div className=\"Header__leftBtn\" onClick={leftClick}>{left}</div>}\r\n                {getTitle(text,icon,curWidth, left, click)}\r\n                <div className=\"Header__rightStub\" onClick={click}></div>\r\n            </div>\r\n\r\n        </PanelHeader>\r\n    )\r\n}\r\n\r\nexport default Header","import { Div, Panel } from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from \"../Header/Header\";\r\n\r\nimport './PanelWrapper.css'\r\n\r\nconst PanelWrapper = ({id, name, children, isOneColumn, isVerticalCentre,\r\n    isHeaderHide, isHeaderFixed, onHeaderClose, onHeaderBack, \r\n    headerIcon, headerText, headerClick}) => {\r\n\r\n    const [curWidth, setCurWidth] = useState(0)\r\n    const [curHeight, setCurHeight] = useState(0)\r\n\r\n    useEffect(() => {\r\n\t\t\r\n\t\t//Обновляем текущую ширину\r\n\t\tsetCurWidth(document.getElementById('root').scrollWidth)\r\n        setCurHeight(document.getElementById('root').scrollHeight)\r\n\t}, []);\r\n\r\n    // const getMaxWidth = () => {\r\n    //     if(curWidth>1280)\r\n    //         return \"1256px\"\r\n    //     else\r\n    //         return curWidth + \"px\"\r\n    // }\r\n    return(\r\n\r\n        <Panel id={id} separator={false} name={name}>\r\n\r\n            <div className=\"PanelWrapper\" style={{minHeight:curHeight,minWidth:curWidth, \r\n                justifyContent:isVerticalCentre?\"center\":\"start\"}}>\r\n                {\r\n                    !isHeaderHide &&\r\n                    <Header\r\n                    text={headerText}\r\n                    icon={headerIcon}\r\n                    curWidth={curWidth}\r\n                    isFixed={isHeaderFixed}\r\n                    onClose={onHeaderClose}\r\n                    onBack={onHeaderBack}\r\n                    click={headerClick}\r\n                ></Header>\r\n                }\r\n\r\n                <Div className=\"PanelWrapper__container\"style={{maxWidth:isOneColumn?\"var(--main-max-oneСolumnPanelWrapperMode-width)\":\"var(--main-max-panelWrapper-width)\"}}>\r\n                    {children}\r\n                </Div>\r\n\r\n            </div>\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default PanelWrapper","import { Card, CardScroll, Panel, PanelHeader, View, CardGrid, ContentCard, Button, ScreenSpinner, usePlatform, Platform} from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport ButtonWrapper from '../../components/ButtonWrapper/ButtonWrapper';\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\n\r\n\r\nimport svgContacts from './contacts.svg';\r\n\r\nimport './StartWindow.css';\r\n\r\n\r\nconst StartWindow = ({id, onClick=()=>{}}) => {\r\n\r\n    // const marginBottom = usePlatform() === Platform.VKCOM ? \"40px\" : \"0px\"\r\n    \r\n    return (\r\n        <View id={id}> \r\n            <PanelWrapper separator={false} isHeaderHide={true} isVerticalCentre={true}>\r\n                <div className=\"StartWindow\">\r\n                    <div className=\"StartWindow__container\">\r\n                        <img width=\"50\" height=\"50\" src={svgContacts} alt=\"contacts\"/>\r\n                        <h1 className=\"StartWindow__title\">Привет, друг!</h1>\r\n                        <p className=\"StartWindow__text\">\r\n                            Это приложение поможет тебе проверить свои знания в области истори родной страны. Удачи!\r\n                        </p>\r\n                        <ButtonWrapper className=\"StartWindow__button\" classNameText=\"StartWindow__button-text\" isCentered={true} onClick={onClick} text=\"Поехали!\"></ButtonWrapper>\r\n                    </div>\r\n                </div>\r\n            </PanelWrapper>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default StartWindow;","import React from 'react';\r\n\r\nlet curWidth = document.getElementById('root').scrollWidth;\r\n\r\nexport function isTitleCentre ( element) {\r\n    return({\r\n    stub:curWidth >= 370 ? <div style={{width:\"90px\"}}>{element} </div> :element,\r\n    text:curWidth >= 370 ? \"center\" : \"start\"\r\n    })\r\n}\r\n\r\nexport function getwidthInfo() {\r\n    if(curWidth>1280){\r\n        return {colNumber:\"s\", maxWidth:\"1500px\"}\r\n    }\r\n    else if (curWidth>560){\r\n        return {colNumber:\"m\", maxWidth:\"1280px\"}\r\n    }\r\n    else {\r\n        return {colNumber:\"l\", maxWidth:\"560px\"}\r\n    } \r\n}\r\n","import { ContentCard } from \"@vkontakte/vkui\"\r\nimport React from 'react';\r\nimport './CardWrapper.css'\r\n\r\nconst CardWrapper = ({title,percentProgress,numberOfQuestions,imageSrc,description,cardClick=()=>{}}) => {\r\n    return(\r\n        <ContentCard\r\n            header={\r\n                <div className=\"CardWrapper__title\">\r\n                    <div>{title}</div>\r\n                    <div>{percentProgress}/{numberOfQuestions}</div>\r\n                </div>\r\n            }\r\n            mode={\"tint\"}\r\n            onClick={cardClick}\r\n            image={imageSrc}\r\n            caption={description}\r\n            className=\"CardWrapper__Card\"\r\n    />\r\n)}\r\n\r\nexport default CardWrapper","import { ContentCard, Div } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport CardWrapper from '../CardWrapper/CardWrapper';\r\nimport './ListCard.css';\r\n\r\nconst ListCard = ( { info, curWidth, cardClick = (index) => null } ) => {\r\n\r\n    const getWidthInfo = () => {\r\n        if(curWidth>1280){\r\n            return {colNumber:\"s\", maxWidth:\"--main-three-col-max-width\"}\r\n        }\r\n        else if (curWidth>560){\r\n            return {colNumber:\"m\", maxWidth:\"--main-two-col-max-width\"}\r\n        }\r\n        else {\r\n            return {colNumber:\"l\", maxWidth:\"--main-one-col-max-width\"}\r\n        } \r\n    }\r\n\r\n    return (\r\n            <div className=\"ListCard\" style={{maxWidth:getWidthInfo().maxWidth}}>\r\n                {\r\n                    info.map((record,i) => (\r\n                        <div key={record.title}>\r\n                            <CardWrapper\r\n                                title={record.title}\r\n                                percentProgress={record.percentProgress}\r\n                                numberOfQuestions={record.numberOfQuestions}\r\n                                cardClick={cardClick(i)}\r\n                                imageSrc={record.imageSrc}\r\n                                description={record.description}\r\n                            >\r\n                            </CardWrapper>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ListCard","import { PanelHeader, Panel, Div } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport './ListAge.css'\r\nimport { isTitleCentre } from '../../help';\r\nimport ListCard from '../../components/ListCard/ListCard'\r\nimport Header from '../../components/Header/Header'\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\n\r\n\r\nconst ListAge = ({id, eras,curWidth, createOnClickItemAge=index=>null}) => {\r\n\r\n    return (\r\n        <PanelWrapper id={id} headerText=\"Выбирете эпоху\" isHeaderFixed={true}>\r\n\r\n                <div className=\"ListAge__content\">\r\n                    <ListCard\r\n                        info={eras}\r\n                        curWidth={curWidth}\r\n                        cardClick={createOnClickItemAge}>\r\n                    </ListCard>\r\n                </div>\r\n\r\n        </PanelWrapper>\r\n    )\r\n}\r\n\r\nexport default ListAge;\r\n","import { Icon28ChevronDownOutline } from '@vkontakte/icons';\r\nimport { Panel, platform, Text, Div, Platform, PanelHeaderButton}  from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ButtonWrapper from '../../../components/ButtonWrapper/ButtonWrapper';\r\nimport Header from '../../../components/Header/Header';\r\nimport PanelWrapper from '../../../components/PanelWrapper/PanelWrapper';\r\n\r\nimport \"./IteamListQuestion.css\";\r\n\r\nconst osName = platform();\r\n\r\nconst IteamListQuestion = ({ id, question,\r\n    numberCurrentQuestion, countQuestions, indexAnswer,name,\r\n    goToPrevQuestion, goToNextQuestion,isModalOpen,isClicked,\r\n    changeModal = () => {}, setNotActiveBackgoundToAnswerButton = () => {} }) => {\r\n\r\n    const [isImgInfoOpen, setisImgInfoOpen] = useState(false)\r\n\r\n    const onLinkClick = (e) => e.stopPropagation();\r\n\r\n    return (\r\n        <PanelWrapper id={id} name={name} isOneColumn={true}\r\n        \r\n            onHeaderClose={numberCurrentQuestion === 1 ? goToPrevQuestion:false}\r\n            onHeaderBack={goToPrevQuestion}\r\n            headerText={numberCurrentQuestion + \" из \" + countQuestions}\r\n            headerIcon={<Icon28ChevronDownOutline style={{ transform: `rotate(${isModalOpen ? '180deg' : '0'})`, transition:\"0.5s\" }} />}\r\n            headerClick={changeModal}\r\n        >\r\n            <div className=\"IteamListQuestion\">\r\n                \r\n                    <div className=\"IteamListQuestion__image-container\" onClick={() => {setisImgInfoOpen(!isImgInfoOpen)}}>\r\n\r\n                        <img\r\n                            className=\"IteamListQuestion__image\" \r\n                            src={question.imageSrc}\r\n                        />\r\n                        \r\n                        <CSSTransition \r\n                            in={isImgInfoOpen} \r\n                            timeout={200}   \r\n                            classNames=\"IteamListQuestion__image-info\"\r\n                            onEnter={() => {setisImgInfoOpen(true)}}\r\n                            onExited={() => {setisImgInfoOpen(false)}}>\r\n                            <div className=\"IteamListQuestion__image-info\">\r\n                                <Div className=\"IteamListQuestion__image-description\">\r\n                                    Источник: <br/>\r\n                                    {\r\n                                        isImgInfoOpen\r\n                                        ?<a \r\n                                            href={question.linkOriginPhoto} \r\n                                            className=\"IteamListQuestion__image-link\"\r\n                                            target=\"_blank\"\r\n                                            onClick={onLinkClick}\r\n                                        >\r\n                                            Клик\r\n                                        </a>\r\n                                        :<span className=\"IteamListQuestion__image-link\">\r\n                                            Клик \r\n                                        </span>\r\n                                    }\r\n                                    \r\n                                </Div>\r\n                            </div>\r\n                        </CSSTransition>\r\n\r\n                    </div>\r\n\r\n                    <Text weight=\"regular\" className=\"IteamListQuestion__question\">{question.questionText}</Text> \r\n\r\n                    <div className=\"IteamListQuestion__answer-options\">\r\n                        {\r\n                            question.answerOptions.map((answer, i) => (\r\n                                <ButtonWrapper\r\n                                    onClick={() => {\r\n                                        setNotActiveBackgoundToAnswerButton();\r\n                                        goToNextQuestion(i);\r\n                                    }}\r\n                                    isActived={indexAnswer === i}\r\n                                    text={answer.text}\r\n                                    className={`IteamListQuestion__answer ${isClicked?\"IteamListQuestion__answer-active\":\"\"}` }\r\n                                >\r\n                                </ButtonWrapper>\r\n                            ))\r\n                        }\r\n                    </div>\r\n            </div>\r\n        </PanelWrapper>\r\n    )\r\n};\r\n\r\nexport default IteamListQuestion;\r\n","import React from \"react\";\r\nimport { ANDROID, IOS, ModalPageHeader, useAdaptivity, usePlatform, PanelHeaderButton, PanelHeaderClose, ViewWidth } from \"@vkontakte/vkui\";\r\nimport './ModalPageHead.css'\r\nimport { isTitleCentre } from \"../../help\";\r\nimport { Icon24Dismiss } from \"@vkontakte/icons\";\r\n\r\n\r\nconst ModalPageHead = ({text, curWidth, onClose = () => {}}) => {\r\n\r\n    let textAlign = isTitleCentre(curWidth).text;\r\n    const { viewWidth } = useAdaptivity();\r\n    const isDesktop = !(viewWidth >= ViewWidth.SMALL_TABLET);    \r\n    return(\r\n        <ModalPageHeader\r\n            // separator={false}\r\n            // visor={true}\r\n            // transparent={true}\r\n            right={isDesktop && <Icon24Dismiss className=\"ModalPageHead__button-close\" onClick={onClose}/>}\r\n            left={isDesktop && <PanelHeaderClose className=\"ModalPageHead__button-pug\"/>}\r\n        >\r\n         <div className=\"ModalPageHead__inside\" style={{textAlign}}>\r\n            {text}\r\n        </div>\r\n        </ModalPageHeader>\r\n    )\r\n}\r\n\r\nexport default ModalPageHead","import { Alert } from \"@vkontakte/vkui\"\r\nimport React from 'react';\r\nimport './AlertWrapper.css'\r\n\r\nconst AlertWrapper = ({header, description, leftText, children, leftFunc = () => { }, rightText, rightFunc = () => { }, onClose = () => { }}) => {\r\n  // console.log(leftText)\r\n  return(\r\n    <Alert    \r\n      header={header}\r\n      description={description}\r\n      actionsLayout=\"horizontal\"\r\n      onClose={onClose}\r\n      actions={[{\r\n          title: `${leftText}`,\r\n          autoclose: true,\r\n          mode: 'cancel',\r\n          action: () => leftFunc()\r\n        }, {\r\n          title: `${rightText}`,\r\n          autoclose: true,\r\n          mode: 'destructive',\r\n          action: () => rightFunc(),\r\n        }]}\r\n      >\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default AlertWrapper","import { View,ModalRoot,ModalPage,List, SimpleCell, Div, usePlatform, ViewWidth, Group } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport IteamListQuestion from './IteamListQuestion/IteamListQuestion';\r\nimport ModalPageHead from '../../components/ModalPageHead/ModalPageHead';\r\nimport vkBridge from '@vkontakte/vk-bridge'\r\nimport AlertWrapper from '../../components/AlertWrapper/AlertWrapper';\r\nimport './ListQuestions.css'\r\n\r\nconst MODAL_ID = \"MODAL_ID\"\r\nconst PANEL_FIRST_ID=\"IteamListQuestion-0\"\r\n\r\n\r\n\r\nconst ListQuestions = ({id, curWidth, arrQuestions, onBack=()=>{}, onFinish=totalScore=>{}}) => {\r\n    const createIdActivePanel = index => `IteamListQuestion-${index}`;\r\n    const [history, setHistory] = useState([PANEL_FIRST_ID]);\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    // логика хранения ответов\r\n    const getInitStateAnswers = () => [\r\n        -1,-1,-1,-1,-1,-1,-1,-1\r\n    ];\r\n\r\n    const [stateAnswers, setStateAnswers] = useState( getInitStateAnswers());\r\n\r\n    const giveAnswer = (indexQuestion, indexAnswer) => {\r\n        stateAnswers[indexQuestion] = indexAnswer;\r\n        setStateAnswers([...stateAnswers]);\r\n    }\r\n\r\n    const resetStateAnswers = () => setStateAnswers(getInitStateAnswers());\r\n\r\n    // логика переключения вопросов\r\n    const [indexQuestion, setIndexQuestion] = useState(0);\r\n    const setIndexQuestionAndHistory = (newIndex) => {\r\n        setIndexQuestion(newIndex)\r\n        changeHistory(newIndex)\r\n    }\r\n\r\n    const resetData = () => {\r\n        resetStateAnswers();\r\n        setIndexQuestionAndHistory(0);\r\n    }\r\n\r\n    const createGoToNextQuestion = (indexQuestion, maxLength) => (indexAnswer) => {\r\n        giveAnswer(indexQuestion, indexAnswer);\r\n\r\n        if (indexQuestion < maxLength - 1) {\r\n            setIndexQuestionAndHistory(indexQuestion + 1);\r\n        } else {\r\n            onFinishWithAlert();\r\n        }\r\n    }\r\n\r\n    const createGoToPrevQuestion = (indexQuestion) => () => {\r\n        if (indexQuestion > 0) {\r\n            setIndexQuestionAndHistory(indexQuestion - 1);\r\n        } else {\r\n            openCloseListQuestionsAleret();\r\n        }\r\n    }\r\n\r\n    // логика перехода к любому вопросу\r\n    const [lastIndexQuestion, setLastIndexQuestion] = useState(-1);\r\n\r\n    const createGoToQuestionWithoutAnswer = (toIndexQuestion) => {\r\n        setNotActiveBackgoundToAnswerButton()\r\n        if (indexQuestion != toIndexQuestion)\r\n        {\r\n            setIndexQuestionAndHistory(toIndexQuestion);\r\n        }   \r\n    }\r\n\r\n    const goToLastQuestion = () => {\r\n        setIndexQuestionAndHistory(lastIndexQuestion);\r\n        setLastIndexQuestion(-1);\r\n    }\r\n\r\n    // Работа с модальным окном\r\n    const [isModalOpen, setModalOpen] = useState(null)\r\n    const changeModal = () => {\r\n        if(isModalOpen === MODAL_ID){\r\n            setModalOpen(null)\r\n        }\r\n        else{\r\n            setModalOpen(MODAL_ID)\r\n        }\r\n    }\r\n\r\n    // История\r\n    const changeHistory = (nextIndex) => { \r\n        setHistory()\r\n\t\tlet his = [];\r\n        for(let i=0;i<nextIndex+1;i++){\r\n            his.push(createIdActivePanel(i))\r\n        }\r\n        setHistory(his)\r\n\r\n\t\tif (createIdActivePanel(nextIndex) === PANEL_FIRST_ID) {\r\n\t\t\tvkBridge.send('VKWebAppDisableSwipeBack');\r\n\t\t  }\r\n        else{\r\n            vkBridge.send('VKWebAppEnableSwipeBack');\r\n        }\r\n\t}\r\n\r\n    //Alert\r\n    const onFinishWithAlert = () => {\r\n        isAllAnswered() ? onFinish(stateAnswers) : openFinishAlert()\r\n    }\r\n    const isAllAnswered = () => {\r\n        for (let i=0;i<stateAnswers.length;i++){\r\n            if(stateAnswers[i] === -1) return false;\r\n        }\r\n        return true\r\n    }\r\n    const openCloseListQuestionsAleret = () => {\r\n\r\n        setAlert(\r\n            <AlertWrapper\r\n                header=\"Уверены, что хотите выйти?\"\r\n                leftText={\"Отмена\"}\r\n                rightText={\"Выйти\"}\r\n                rightFunc={ () =>  {onBack(); resetData()}}\r\n                onClose={()=>{setAlert(null)}}\r\n            >\r\n            </AlertWrapper>\r\n    )}\r\n    const openFinishAlert = () => {       \r\n        setAlert(\r\n\r\n            <AlertWrapper\r\n                header=\"Вы ответили не на все вопросы\"\r\n                leftText={\"Отмена\"}\r\n                rightText={\"Завершить\"}\r\n                rightFunc={ () => {onFinish(stateAnswers)}}\r\n                onClose={()=>{setAlert(null)}}\r\n            >\r\n            </AlertWrapper>\r\n\r\n    )}\r\n\r\n    //Модальное окно\r\n    const modal = (\r\n        <ModalRoot activeModal={isModalOpen} onClose={changeModal}>\r\n            <ModalPage \r\n                id={MODAL_ID}\r\n                settlingHeight={100}\r\n                header={\r\n                    <ModalPageHead text=\"Вопросы\" curWidth={curWidth} onClose={changeModal}></ModalPageHead>\r\n                }>\r\n                <Div>\r\n                {\r\n                    arrQuestions.map(({questionText, indexAnswer}, i, arr) => (\r\n                        <SimpleCell \r\n                            key={i}\r\n                            onClick={() => {createGoToQuestionWithoutAnswer(i); changeModal()}}\r\n                            className={`ListQuestions__modal-el ${stateAnswers[i] !== -1 ? 'ListQuestions__modal-el_answered':''}`}>\r\n                            <div className=\"ListQuestions__modal-el__text\">\r\n                                {i+1}) {questionText}\r\n                            </div>\r\n                        </SimpleCell>\r\n                    ))\r\n                    \r\n                }\r\n                <SimpleCell\r\n                    hasActive={false}\r\n                    onClick={ () => {onFinishWithAlert()}}\r\n                    className=\"ListQuestions__modal-el\">\r\n                    <div className=\"ListQuestions__modal-el__finish-btn\">\r\n                       Завершить\r\n                    </div>\r\n                </SimpleCell>\r\n                </Div>\r\n            </ModalPage>\r\n\r\n        </ModalRoot>\r\n    )\r\n\r\n    const setNotActiveBackgoundToAnswerButton = () =>{\r\n        let panel = document.getElementsByName(createIdActivePanel(indexQuestion));\r\n        const buttons = panel[0].getElementsByClassName(\"IteamListQuestion__answer\");\r\n\r\n        for(let i=0;i<buttons.length;i++){\r\n            console.log(buttons[i])\r\n            buttons[i].style.backgroundColor = \"var(--main-second-bg-color)\"\r\n        }\r\n    }\r\n    return (\r\n        <View id={id} \r\n            activePanel={createIdActivePanel(indexQuestion)} \r\n            modal={modal} \r\n            history={history} \r\n            onSwipeBack={createGoToPrevQuestion(indexQuestion)}\r\n            popout={alert}>\r\n            {\r\n                arrQuestions.map((question, i, arr) =>(\r\n                    <IteamListQuestion\r\n                        key={i}\r\n                        id={createIdActivePanel(i)}\r\n                        name={createIdActivePanel(i)}\r\n                        curWidth={curWidth}\r\n\r\n                        question={question}\r\n                        numberCurrentQuestion={i+1}\r\n                        countQuestions={arr.length}\r\n\r\n                        indexAnswer={stateAnswers[i]}\r\n\r\n                        lastIndexQuestion={lastIndexQuestion}\r\n                        currentIndexQuestion={i}\r\n                        goToLastQuestion={goToLastQuestion}\r\n\r\n                        goToNextQuestion={createGoToNextQuestion(i, arr.length)}\r\n                        goToPrevQuestion={createGoToPrevQuestion(i)}\r\n\r\n                        onFinish={() => onFinishWithAlert()}\r\n                        \r\n                        changeModal={changeModal}\r\n                        changeHistory={changeHistory}\r\n                        isModalOpen={isModalOpen}\r\n\r\n                        setNotActiveBackgoundToAnswerButton={setNotActiveBackgoundToAnswerButton}\r\n                    />\r\n                ))\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ListQuestions;\r\n","import { Alert } from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\nimport \"./AlertQuestionResult.css\";\r\n\r\nconst AlertQuestionResult = ({\r\n    onClose, indexUserAnswer, indexRightAnswer, \r\n    getAnswerText, indexQuestion, answerOptions,\r\n    questionText\r\n}) => {\r\n    return (\r\n        <div className=\"AnswersQuestions__alert_big\">\r\n            <Alert\r\n                actionsLayout={\"horizontal\"}\r\n                onClose={onClose}\r\n                actions={[{\r\n                    title: \"Закрыть\",\r\n                    autoclose: true,\r\n                    mode: \"cancel\"\r\n                }]}\r\n            >\r\n                <div className=\"AnswersQuestions__alert\">\r\n\r\n                    <h3 className={\"AlertQuestionResult__text-question\"}>{questionText}</h3>\r\n\r\n                        {\r\n                            indexUserAnswer !== indexRightAnswer &&\r\n                            <div>\r\n                                <div className=\"AnswersQuestions__alert__title-answer-wrap AnswersQuestions__alert__title-answer-wrap_bad\">\r\n                                    <div\r\n                                        className=\"AnswersQuestions__alert__title-answer AnswersQuestions__alert__title-answer_bad\"\r\n                                    >Ваш ответ\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div\r\n                                    className=\"AnswersQuestions__alert__text-answer\"\r\n                                >\r\n                                    {getAnswerText(indexQuestion, indexUserAnswer)}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        <div>\r\n                            <div className=\"AnswersQuestions__alert__title-answer-wrap AnswersQuestions__alert__title-answer-wrap_good\">\r\n                                <div\r\n                                    className=\"AnswersQuestions__alert__title-answer AnswersQuestions__alert__title-answer_good\"\r\n                                >\r\n                                    {\r\n                                        indexUserAnswer === indexRightAnswer\r\n                                            ? \"Ваш ответ верен\"\r\n                                            : \"Правильный ответ\"\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className=\"AnswersQuestions__alert__text-answer\"\r\n                            >\r\n                                {getAnswerText(indexQuestion, indexRightAnswer)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"AnswersQuestions__alert__title-answer-wrap AnswersQuestions__alert__title-answer-wrap_normal\">\r\n                                <div\r\n                                    className=\"AnswersQuestions__alert__title-answer AnswersQuestions__alert__title-answer_normal\"\r\n                                >Остальные варианты</div>\r\n                            </div>\r\n\r\n                            {\r\n                                answerOptions.map((answer, i) => {\r\n                                    if (i === indexRightAnswer || i === indexUserAnswer) {\r\n                                        return null;\r\n                                    }\r\n\r\n                                    return (\r\n                                        <div\r\n                                            className=\"AnswersQuestions__alert__text-answer\"\r\n                                            key={answer.text}\r\n                                        >\r\n                                            {answer.text}\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                </div>\r\n            </Alert>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlertQuestionResult;\r\n","function makeEaseOut(timing) {\r\n  return function (timeFraction) {\r\n    return 1 - timing(1 - timeFraction);\r\n  }\r\n}\r\n\r\nconst easeOut = makeEaseOut((timeFraction) => timeFraction);\r\n\r\nexport default easeOut;\r\n","import { Div, FixedLayout } from '@vkontakte/vkui';\r\nimport React, { createRef, useEffect, useState } from 'react';\r\nimport animate from '../../../anime/animate';\r\nimport easeOut from '../../../anime/easeOut';\r\nimport BlackBackground from '../../../components/BlackBackground/BlackBackground';\r\nimport ButtonWrapper from '../../../components/ButtonWrapper/ButtonWrapper';\r\nimport Arrow, { colorsArrow, directionArrow } from './Arrow';\r\nimport { Icon16CheckCircleOutline } from '@vkontakte/icons';\r\nimport { Icon16CancelCircleOutline } from '@vkontakte/icons';\r\n\r\nimport \"./ItemAnswerQuestion.css\";\r\n\r\nconst ItemAnswerQuestion = ({indexQuestion, question, indexRightAnswer, indexUserAnswer, openAlert = () => {} }) => {\r\n\r\n    const ICON_SIZE = 24;\r\n\r\n    return (\r\n        <div className=\"ItemAnswerQuestion\">\r\n            <ButtonWrapper\r\n                onClick={ () => {openAlert(indexQuestion)}}\r\n                text={question.questionText}\r\n                classNameText=\"ItemAnswerQuestion__button-text\"\r\n                hasActive={false}\r\n                before={indexRightAnswer === indexUserAnswer \r\n                    ? <Icon16CheckCircleOutline height={ICON_SIZE} width={ICON_SIZE} style={{color:\"var(--main-green-color)\"}}/> \r\n                    : <Icon16CancelCircleOutline height={ICON_SIZE} width={ICON_SIZE} style={{color:\"var(--main-red-color)\"}}/> }\r\n            >\r\n            </ButtonWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemAnswerQuestion;\r\n","import { Icon24Back } from '@vkontakte/icons';\r\nimport { Alert, Div, Panel, PanelHeader, PanelHeaderButton, View } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport Arrow from './ItemAnswerQuestion/Arrow';\r\n// import './ItemAnswerQuestion/ItemAnswerQuestion.css';\r\n\r\nimport \"./AnswersQuestions.css\";\r\nimport ItemAnswerQuestion from './ItemAnswerQuestion/ItemAnswerQuestion';\r\nimport ButtonWrapper from '../../components/ButtonWrapper/ButtonWrapper';\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\n\r\nconst AnswersQuestions = ({id, questions, indexesAnswers, onBack=()=>{}, openAlert=()=>{}}) => {\r\n\r\n    return (\r\n        <PanelWrapper id={id} headerText=\"Вопросы\" onHeaderBack={onBack} isOneColumn={true}>\r\n\r\n            <div style={{display:\"flex\",justifyContent:\"center\"}}>\r\n                <div className=\"AnswersQuestions\">\r\n                {\r\n                    questions.map((q, i) => (\r\n                        <ItemAnswerQuestion\r\n                            indexQuestion={i}\r\n                            question={q}\r\n                            indexRightAnswer={questions[i].answerOptions.findIndex(a => a.score === 1)}\r\n                            indexUserAnswer={indexesAnswers[i]}\r\n                            openAlert={openAlert}\r\n                        />\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        </PanelWrapper>\r\n    )\r\n}\r\n\r\nexport default AnswersQuestions;\r\n","import React from \"react\";\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport { Button, CellButton, Div } from \"@vkontakte/vkui\";\r\n\r\nimport './ResultButtons.css';\r\nimport { Icon28AddAwardOutline } from \"@vkontakte/icons\";\r\nimport { Icon56LikeOutline } from '@vkontakte/icons';\r\nimport { Icon28ArticleOutline } from '@vkontakte/icons';\r\nimport { Icon24List } from '@vkontakte/icons';\r\nimport { Icon28RefreshOutline } from '@vkontakte/icons';\r\nimport { Icon56ArticleOutline } from '@vkontakte/icons';\r\nimport { Icon24Globe } from '@vkontakte/icons';\r\nimport { Icon28ShareExternalOutline } from '@vkontakte/icons';\r\nimport ButtonWrapper from \"../../../components/ButtonWrapper/ButtonWrapper\";\r\n\r\nconst ResultButtons = ({onAgain=()=>{}, onGoToAnswersQuestion=()=>{}, goToViewListAndQuizes=()=>{},onBack = () => { }}) => {\r\n    const sendToHistory = (image) => {\r\n        console.log(image);\r\n\r\n        bridge.send(\"VKWebAppShowStoryBox\", {\r\n            \"background_type\": \"image\",\r\n            \"url\": \"https://nikita-jpg.github.io\" + image\r\n        });\r\n    }\r\n\r\n    const sendToWall = (image) => {\r\n        window.open(\"https://vk.com/share.php?url=https://nikita-jpg.github.io\" + image);\r\n    }\r\n\r\n    const iconSize = 28;\r\n\r\n    return (\r\n        <div className=\"Result-buttons__container\">\r\n            {/* <Div> */}\r\n\r\n                <ButtonWrapper\r\n                    text=\"К вопросам\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon24List width={iconSize} height={iconSize} style={{color:\"var(--main-yellow-color)\"}}/>}\r\n                    onClick={onGoToAnswersQuestion}\r\n                >\r\n                </ButtonWrapper>\r\n\r\n                <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"К эпохам\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon24Globe width={iconSize} height={iconSize} style={{color:\"var(--main-purple-color)\"}}/>}\r\n                    onClick={goToViewListAndQuizes}\r\n                >\r\n                </ButtonWrapper>\r\n\r\n                <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"Ещё раз\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon28RefreshOutline width={iconSize} height={iconSize} style={{color:\"var(--main-green-color)\"}}/>}\r\n                    onClick={onAgain}\r\n                >\r\n                </ButtonWrapper>\r\n\r\n                {/* <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"К вопросам\"\r\n                    className=\"Result-buttons\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon24List width={iconSize} height={iconSize} style={{color:\"var(--main-yellow-color)\"}}/>}\r\n                >\r\n                </ButtonWrapper> */}\r\n\r\n                {/* <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"Поделиться\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon28ShareExternalOutline width={iconSize} height={iconSize} style={{color:\"var(--main-blue-color)\"}}/>}\r\n                >\r\n                </ButtonWrapper> */}\r\n\r\n\r\n                {/* <button className=\"Result-buttons Result-buttons_favorite\">Поддержать</button>\r\n                <button \r\n                    onClick={onAgain} \r\n                    className=\"Result-buttons Result-buttons_refresh\">\r\n                    Ещё раз\r\n                </button>\r\n                <button className=\"Result-buttons Result-buttons_share\">Поделиться</button>\r\n                <button \r\n                    onClick={onGoToAnswersQuestion} \r\n                    className=\"Result-buttons Result-buttons_format-list-bulleted\">\r\n                    К вопросам\r\n                </button> */}\r\n            {/* </Div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultButtons;\r\n\r\n{/* \r\n            <Button\r\n                size=\"l\"\r\n                className=\"Result-buttons\"\r\n                before={<Icon56ArticleOutline width={28} height={28} style={{color:\"var(--main-yellow-color)\"}} />}\r\n            >\r\n                <div className=\"Result-buttons__text\">\r\n                    К вопросам\r\n                </div>\r\n            </Button> */}","import React from 'react';\r\nimport ButtonWrapper from '../../../components/ButtonWrapper/ButtonWrapper';\r\nimport CardWrapper from '../../../components/CardWrapper/CardWrapper';\r\nimport './ResultCards.css'\r\n\r\nconst makeCard = (info, isFirstOpenResult,cardClick=()=>{}, makeStepAnimDealyForCard=()=>{}) => {\r\n    return(\r\n        <div className={`ResultCards__card ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard() }}>\r\n            <CardWrapper\r\n                title={info.title}\r\n                percentProgress={info.percentProgress}\r\n                numberOfQuestions={info.numberOfQuestions}\r\n                cardClick={cardClick}\r\n                imageSrc={info.imageSrc}\r\n                description={info.description}\r\n            >    \r\n            </CardWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst quizFilter = (arrQuizes, indexQuiz, isFirstOpenResult, cardClick=()=>{}, makeStepAnimDealyForCard=()=>{}) => {\r\n\r\n    let arr = [];\r\n    for(let i=0;i<arrQuizes.length;i++){\r\n        if((arrQuizes[i].percentProgress !== arrQuizes[i].questions.length) && (i!==indexQuiz)){\r\n            arr.push(makeCard(arrQuizes[i], isFirstOpenResult, cardClick(i), makeStepAnimDealyForCard))\r\n        }\r\n    }\r\n\r\n    if(arr.length === 0)\r\n        return null\r\n    else\r\n        return(arr)\r\n}\r\n\r\nconst eraFilter = (arrEras, indexAge, isFirstOpenResult, isCompletedQuiz, \r\n    onAgain=()=>{}, goToEras=()=>{}, makeStepAnimDealyForCard=()=>{}) => {\r\n\r\n    let retrunMessage= \"\";\r\n    let returnButtons = [];\r\n    let isHasNotFinishedEras = false;\r\n\r\n    for(let i=0;i<arrEras.length;i++){\r\n        if( (arrEras[i].percentProgress !== arrEras[i].numberOfQuestions) && (i!==indexAge)) {\r\n            isHasNotFinishedEras = true;\r\n        }\r\n    }\r\n\r\n    if( (isHasNotFinishedEras === true) && (isCompletedQuiz === true)  ){\r\n        retrunMessage = \"Поздравляем, вы завершили целую эпоху! Предлагаем перейти к выбору новой эпохи\";\r\n        returnButtons = [{text:\"К эпохам\", click:goToEras}]\r\n    }\r\n\r\n    if( (isHasNotFinishedEras === false) && (isCompletedQuiz === true)  ){\r\n        retrunMessage = \"Поздравляем, вы завершили все эпохи!\";\r\n        returnButtons = []\r\n    }\r\n\r\n    if( (isHasNotFinishedEras === true) && (isCompletedQuiz === false)  ){\r\n        retrunMessage = \"Поздравляем, вы почти полностью прошли эпоху на 100%. Но, к сожалению, данный орпос не на 100%. Хотите его перепройти или перейти к выбору новой эпохи?\";\r\n        returnButtons = [{text:\"Ещё раз\", click:onAgain}, {text:\"К эпохам\", click:goToEras}]\r\n    }\r\n\r\n    if( (isHasNotFinishedEras === false) && (isCompletedQuiz === false)  ){\r\n        retrunMessage = \"Поздравляем, вы почти прошли все опросы на 100%! Но, к сожалению, данный опрос не на 100%. Предлагаем вам его перепройти. Ещё чуть-чуть :)\"\r\n        returnButtons = [{text:\"Ещё раз\", click:onAgain}]\r\n    }\r\n\r\n    return(\r\n        <div className=\"ResultCards__container\">\r\n            \r\n            <div className={`ResultCards__container__text ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard() }}>\r\n                <div className=\"ResultCards__text\">{retrunMessage}</div>\r\n            </div>\r\n\r\n            {returnButtons.length !== 0 &&\r\n                returnButtons.map((button)=>{\r\n                    return(\r\n                    <div className={`ResultCards__container__buttons ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard() }}>\r\n                        <div className=\"ResultCards__button\">\r\n                            <ButtonWrapper\r\n                                isLinkForm={true}\r\n                                style={{color:\"var(--main-gray-color)\", fontSize:\"18px\"}}\r\n                                text={button.text}\r\n                                onClick={button.click}\r\n                            ></ButtonWrapper>\r\n                        </div>\r\n                    </div>\r\n                )}) \r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ResultCards = ({indexAge,indexQuiz,eras,isFirstOpenResult, isCompletedQuiz,\r\n    goToQuiz=()=>{}, goToEras=()=>{},onAgain=()=>{},\r\n    makeStepAnimDealyForCard=()=>{}}) =>{\r\n\r\n    let quizFilterResult = quizFilter(eras[indexAge].quizzes, indexQuiz, isFirstOpenResult, goToQuiz, makeStepAnimDealyForCard)\r\n    console.log(quizFilterResult)\r\n    if(quizFilterResult !== null)\r\n        return(quizFilterResult)\r\n    \r\n    let eraFilterResult = eraFilter(eras, indexAge, isFirstOpenResult, isCompletedQuiz, onAgain, goToEras, makeStepAnimDealyForCard)\r\n    if(eraFilter !== null)\r\n        return(eraFilterResult)\r\n\r\n}\r\nexport default ResultCards","import bridge from '@vkontakte/vk-bridge';\r\nimport { ContentCard, Div, Panel, PromoBanner, View } from \"@vkontakte/vkui\";\r\nimport React, { useState } from \"react\";\r\nimport AlertQuestionResult from \"../../components/AlertQuestionResult/AlertQuestionResult\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport \"../../components/ListCard/ListCard.css\";\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\nimport AnswersQuestions from \"../AnswersQuestions/AnswersQuestions\";\r\nimport \"./Result.css\";\r\nimport ResultButtons from \"./ResultButtons/ResultButtons\";\r\nimport ResultCards from './ResultCards/ResultCards';\r\n\r\n\r\nconst Result = ({ id, indexAge, percent, eras, quizes, indexesAnswers, questions, isFirstOpenResult, setIsFirstOpenResult, indexQuiz,\r\n    onBack = () => {}, createOnClickItemQuizes = (index) => null,\r\n    createOnClickItemAge = () => {},\r\n    onAgain=()=>{}, onGoToAnswersQuestion=()=>{}, goToViewListAndQuizes=()=>{} }) => {\r\n\r\n    //Работа с панелями\r\n        const PANEL_RESULT = \"PANEL_RESULT\";\r\n        const PANEL_ANSWERS_QUESTIONS = \"VIEW_ID_ANSWERS_QUESTIONS\";\r\n        const [activePanel, setActivePanel] = useState(PANEL_RESULT)\r\n\r\n        const goToPanelAnswers = () => {\r\n            goForwardInHistory(PANEL_ANSWERS_QUESTIONS)\r\n            setActivePanel(PANEL_ANSWERS_QUESTIONS)\r\n        }\r\n\r\n\r\n    //История\r\n        const [history, setHistory] = useState([PANEL_RESULT]);\r\n\r\n        const goBackInHistory = () => {\r\n\t\t\tlet his = history;\r\n\t\t\this.pop()\r\n\t\t\tif (activePanel === PANEL_RESULT) {\r\n\t\t\t\tbridge.send('VKWebAppEnableSwipeBack');\r\n\t\t\t}\r\n\t\t\tsetHistory(his)\r\n            setActivePanel(history[history.length - 1])\t\r\n\t\t}\r\n\r\n\t\tconst goForwardInHistory = (panelId) => { \r\n\t\t\tlet his = history;\r\n\t\t\this.push(panelId);\r\n\t\t\tif (activePanel === PANEL_RESULT) {\r\n\t\t\t\tbridge.send('VKWebAppDisableSwipeBack');\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n    //Кнопки\r\n        // Переход к эпохам\r\n        const goToViewListAndQuizesWrapper = () => {\r\n            setIsFirstOpenResult(true)\r\n            goToViewListAndQuizes()\r\n        }\r\n        // Ещё раз\r\n        const modifyIsFirstOpenResult = (f) => (...args) => {\r\n            setIsFirstOpenResult(true);\r\n            return f(...args);\r\n        }\r\n\r\n    //Анимация \r\n        const getClassNameForPercent = (percent) => {\r\n            if (percent <= 4) {\r\n                return \"Result__points-postfix_bad\";\r\n            }\r\n\r\n            if (percent <= 6) {\r\n                return \"Result__points-postfix_normal\";\r\n            }\r\n\r\n            return \"Result__points-postfix_good\";\r\n        }\r\n\r\n    //Реклама\r\n        const [isAdVisible, setAdVisible] = useState(true)\r\n        const [adDate, setAdDate] = useState({\r\n            title: 'Заголовок',\r\n            domain: 'vk.com',\r\n            trackingLink: 'https://vk.com',\r\n            ctaText: 'Перейти',\r\n            advertisingLabel: 'Реклама',\r\n            iconLink: 'https://sun9-7.userapi.com/c846420/v846420985/1526c3/ISX7VF8NjZk.jpg',\r\n            description: 'Описание рекламы',\r\n            ageRestrictions: \"14+\",\r\n            statistics: [\r\n              { url: '', type: 'playbackStarted' },\r\n              { url: '', type: 'click' }\r\n            ]\r\n          })    \r\n\r\n    //Alert\r\n        const getAnswerText = (indexQuestion, indexInAnswer) => {\r\n            if (indexesAnswers[indexQuestion] === -1) return \"Вы не ответили\"\r\n            return `${questions[indexQuestion].answerOptions[indexInAnswer].text}`;\r\n        }\r\n\r\n        const [isVisibleAlert, setIsVisibleAlert] = useState(false);\r\n        const [indexQuestion, setIndexQuestion] = useState();\r\n        const calcIndexRightAnswer = (indexQuestion) => {\r\n            return questions[indexQuestion].answerOptions.findIndex(a => a.score === 1);\r\n        }\r\n        const calcIndexUserAnswer = (indexQuestion) => {\r\n            return indexesAnswers[indexQuestion];\r\n        }\r\n        const openAlert = (indexQuestion) => {\r\n            setIndexQuestion(indexQuestion);\r\n            setIsVisibleAlert(true);\r\n        }\r\n\r\n        let startAnimDealyForCard = 0.2;\r\n        let stepAnimDealyForCard = 0.1;\r\n        let curAnimDealyForCard = -stepAnimDealyForCard;\r\n\r\n        const makeStepAnimDealyForCard = () => {\r\n            curAnimDealyForCard = curAnimDealyForCard + stepAnimDealyForCard;\r\n            return startAnimDealyForCard + curAnimDealyForCard + \"s\";\r\n        }\r\n\r\n    return (\r\n        <View \r\n            id={id} \r\n            activePanel={activePanel} \r\n            popout={\r\n                isVisibleAlert\r\n                ?<AlertQuestionResult\r\n                    onClose={() => { console.log(document.getElementsByClassName(\"vkuiAlert--ios\")); setIsVisibleAlert(false) }}\r\n                    indexQuestion={indexQuestion}\r\n                    indexUserAnswer={calcIndexUserAnswer(indexQuestion)}\r\n                    indexRightAnswer={calcIndexRightAnswer(indexQuestion)}\r\n                    getAnswerText={getAnswerText}\r\n                    answerOptions={questions[indexQuestion].answerOptions}\r\n                    questionText={questions[indexQuestion].questionText}\r\n                />\r\n                :null\r\n            } \r\n            onSwipeBack={goBackInHistory}\r\n            history={history}>\r\n\r\n            <PanelWrapper id={PANEL_RESULT} onClose={()=>{setIsFirstOpenResult(false)}} isOneColumn={true}>\r\n\r\n                        {/* Цифра в виде результата */}\r\n                        <div className={`Result__title ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard()}}>\r\n                            <span className={`Result__points ${getClassNameForPercent(percent)}`}>\r\n                                    {percent}\r\n                                <span>/{questions.length}</span>\r\n                            </span>\r\n                        </div>\r\n\r\n                        {/* Панелька с кнопками */}\r\n                        <div className={`Result__buttons ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard()}}>\r\n                            <ResultButtons \r\n                                onAgain={modifyIsFirstOpenResult(onAgain)}\r\n                                onGoToAnswersQuestion={ () => { setIsFirstOpenResult(false); goToPanelAnswers()}}\r\n                                goToViewListAndQuizes={goToViewListAndQuizesWrapper}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* Реклама */}\r\n                        {\r\n                            isAdVisible &&\r\n                            <div className={`Result__adds ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard()}}>\r\n                                <PromoBanner bannerData={adDate} onClose={() => {setAdVisible(false)}}></PromoBanner>\r\n                            </div>\r\n                        }\r\n\r\n                        {/* Карточки опросов */}\r\n                        <ResultCards \r\n                            indexAge={indexAge}\r\n                            indexQuiz={indexQuiz}\r\n                            eras={eras}\r\n                            isFirstOpenResult={isFirstOpenResult}\r\n                            isCompletedQuiz={percent === questions.length ? true : false}\r\n\r\n                            makeStepAnimDealyForCard={makeStepAnimDealyForCard}\r\n                            onAgain={modifyIsFirstOpenResult(onAgain)}\r\n                            goToQuiz={createOnClickItemQuizes}\r\n                            goToEras={goToViewListAndQuizes}\r\n                        >\r\n                        </ResultCards>\r\n\r\n            </PanelWrapper>\r\n\r\n            <AnswersQuestions\r\n                id={PANEL_ANSWERS_QUESTIONS}\r\n                questions={questions}\r\n                indexesAnswers={indexesAnswers}\r\n                onBack={goBackInHistory}\r\n                openAlert={openAlert}\r\n            >\r\n            </AnswersQuestions>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Result;\r\n","import { Panel } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ListCard from '../../components/ListCard/ListCard'\r\n\r\nimport './ListQuizes.css';\r\nimport Header from '../../components/Header/Header';\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\n\r\nconst ListQuizes = ({ id, title, quizes, onBack = () => { }, createOnClickItemQuizes = (index) => null }) => {\r\n\r\n    return (\r\n        <PanelWrapper id={id} headerText={title} onHeaderBack={onBack} isHeaderFixed={true}>\r\n\r\n            <div className=\"ListQuizes\">\r\n                <ListCard\r\n                    info={quizes}\r\n                    cardClick={createOnClickItemQuizes}\r\n                />\r\n            </div>\r\n\r\n        </PanelWrapper>\r\n    );\r\n}\r\n\r\nexport default ListQuizes;\r\n","import { View, Panel, Spinner, ScreenSpinner } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport './SpinnerView.css'\r\nimport spinner from './test.svg'\r\nimport i from './i.svg'\r\n\r\nconst SpinnerView = ({id}) => {\r\n\r\n    // const [isOpen, setIsOpen] = useState(false)\r\n\r\n    // const open = () => {\r\n    //     setIsOpen(!isOpen)\r\n    // }\r\n\r\n    // const style = {\r\n    //     height: isOpen ? \"90px\" : \"0\"\r\n    // }\r\n\r\n    return(\r\n        <View id={id}>\r\n            <Panel>\r\n                <div className=\"SpinnerView\">\r\n                    <svg className=\"SpinnerView__spinnerBox_spinner\">\r\n                        <polyline className=\"stroke-still\" points=\"0,0 90,0 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                        <polyline className=\"stroke-still\" points=\"0,0 0,90 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                        {/* <svg className=\"stroke-text text-animation\" x=\"30\" y=\"68\"></svg> */}\r\n                            <svg x=\"28.5\" y=\"26.5\" width=\"33\" height=\"37\" viewBox=\"0 0 33 37\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path className=\"stroke-text text-animation\" stroke-width=\"1.5\" d=\"M5.02966 7.09C5.02966 5.254 4.77766 3.904 4.27366 3.04C3.76966 2.14 2.76166 1.69 1.24966 1.69H0.169664V0.609999H5.02966C6.36166 0.609999 7.35166 0.789998 7.99966 1.15C8.68366 1.474 9.16966 2.086 9.45766 2.986C9.74566 3.886 9.88966 5.254 9.88966 7.09V31.39L27.1697 0.609999H32.0297V36.25H27.1697V5.47L9.88966 36.25H5.02966V7.09Z\"/>\r\n                            </svg>\r\n                        {/* <text className=\"stroke-text text-animation\" x=\"30\" y=\"68\" font-size=\"50\" fontFamily=\"Pacifico, cursive\">И</text> */}\r\n                        <polyline class=\"line-cornered stroke-animation\" points=\"0,0 90,0 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                        <polyline class=\"line-cornered stroke-animation\" points=\"0,0 0,90 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                    </svg>\r\n                        {/* <div className=\"SpinnerView__spinnerBox\">\r\n                            <img src={spinner} className=\"SpinnerView__spinnerBox_spinner\"></img>\r\n                        </div>\r\n                        <ScreenSpinner></ScreenSpinner> */}\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default SpinnerView","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport vkBridge from '@vkontakte/vk-bridge'\r\n\r\nimport { AdaptivityProvider, ModalRoot, AppRoot, ConfigProvider, ModalPage, Header, Panel, PanelHeader, Platform, Root, Scheme, SimpleCell, SplitCol, SplitLayout, View, usePlatform } from '@vkontakte/vkui';\r\n\r\nimport \"./App.css\";\r\nimport StartWindow from './panels/StartWindow/StartWindow';\r\nimport ListAge from './panels/ListAge/ListAge';\r\nimport ListQuestions from './panels/ListQuestions/ListQuestions';\r\nimport Result from './panels/Result/Result';\r\nimport ListQuizes from './panels/ListQuizes/ListQuizes';\r\nimport AnswersQuestions from './panels/AnswersQuestions/AnswersQuestions';\r\nimport Modal from './panels/ListQuestions/IteamListQuestion/Modal/Modal';\r\nimport ModalPageHead from './components/ModalPageHead/ModalPageHead';\r\nimport SpinnerView from './panels/SpinnerView/SpinnerView';\r\nimport testClass from './panels/StartWindow/StartWindow';\r\nimport axios from 'axios';\r\n\r\nimport svgContacts from './panels/StartWindow/contacts.svg';\r\n\r\n// setActiveView(null)\r\nconst App = ({ eras, results, MAX_SCORE, \r\n\tsavePercentQuiz = (indexAge, indexQuiz, percentProgress) => {}}) => {\r\n\t\r\n\tconst [isNeedDateLoaded,setIsNeedDateLoaded] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\t// if(!isNeedDateLoaded)\r\n\t\t// \tfirstDownload()\r\n\t\t\r\n\t\t//Обновляем текущую ширину\r\n\t\tsetCurWidth(document.getElementById('root').scrollWidth)\r\n\t}, []);\r\n\t\r\n\r\n\t// логика переключения между View\r\n\tconst VIEW_ID_START_WINDOW = \"VIEW_ID_START_WINDOW\";\r\n\tconst VIEW_ID_LIST_AGE_AND_QUIZES = \"VIEW_ID_LIST_AGE_AND_QUIZES\";\r\n\tconst VIEW_ID_LIST_QUESTIONES = \"VIEW_ID_LIST_QUESTIONES\";\r\n\tconst VIEW_ID_RESULT = \"VIEW_ID_RESULT\";\r\n\tconst VIEW_ID_ANSWERS_QUESTIONS = \"VIEW_ID_ANSWERS_QUESTIONS\";\r\n\r\n\tconst VIEW_ID_SPINNER = \"VIEW_ID_SPINNER\";\r\n\r\n\t// логика переключения между Панелями\r\n\tconst PANEL_ID_LIST_AGE = \"PANEL_ID_LIST_AGE\";\r\n\tconst PANEL_ID_LIST_QUIZES = \"PANEL_ID_LIST_QUIZES\";\r\n\r\n\r\n\tconst [activeView, setActiveView] = useState(VIEW_ID_START_WINDOW);\r\n\tconst [activePanel, setActivePanel] = useState(PANEL_ID_LIST_AGE);\r\n\tconst [curWidth, setCurWidth] = useState(0)\r\n\r\n\tconst goToViewStartWindow = () => setActiveView(VIEW_ID_START_WINDOW);\r\n\tconst goToViewListAgeAndQuizes = () =>setActiveView(VIEW_ID_LIST_AGE_AND_QUIZES)\r\n\tconst goToViewListQuestions = () => setActiveView(VIEW_ID_LIST_QUESTIONES);\r\n\tconst goToViewResult = () => setActiveView(VIEW_ID_RESULT);\r\n\tconst goToViewAnswersQuestions = () => setActiveView(VIEW_ID_ANSWERS_QUESTIONS);\r\n\tconst goToViewSpinner = () => setActiveView(VIEW_ID_SPINNER);\r\n\r\n\tconst goToPanelListAge = () => setActivePanel(PANEL_ID_LIST_AGE);\r\n\tconst goToPanelListQuizes = () => setActivePanel(PANEL_ID_LIST_QUIZES);\r\n\r\n\t// логика хранения индексов\r\n\tconst [indexAge, setIndexAge] = useState(0);\r\n\tconst [indexQuiz, setIndexQuiz] = useState(0);\r\n\tconst [indexResuslt, setIndexResult] = useState(0);\r\n\r\n\t// логика хранения ответов\r\n\tconst [indexesAnswers, setIndexesAnswers] = useState([-1,-1,-1,-1,-1,-1,-1,-1]);\r\n\r\n\t// первый раз открываем Result\r\n\tconst [isFirstOpenResult, setIsFirstOpenResult] = useState(true);\r\n\r\n\r\n\r\n\t//Тестим Api\r\n\r\n\tconst http = axios.create({\r\n\t\theaders: {\r\n\t\t  // Прикрепляем заголовок, отвечающий за параметры запуска.\r\n\t\t  Authorization: `${window.location.search.slice(1)}`,\r\n\t\t}\r\n\t  });\r\n\t// функции для StartWindow\r\n\t\tconst onClickStartWindow = () => {\r\n\t\t\thttp.get(\"https://458f-212-16-10-199.ngrok.io/\").then(res=>{\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t})\r\n\t\t// const onClickStartWindow = () => {\r\n\t\t// \thttp.get(\"https://vkma123.ru\").then(res=>{\r\n\t\t// \t\tconsole.log(res)\r\n\t\t// \t})\r\n\t\t\t// goToViewListAgeAndQuizes();\r\n\t\t}\t\r\n\r\n\r\n\r\n\t// Функции для ListAgeAndQuizes\r\n\r\n\t\tconst firstDownload = async () => {\t\r\n\t\t\tawait downloadImagesArr([{imageSrc:svgContacts}]);\r\n\t\t\tawait downloadImagesArr(eras);\r\n\t\t\tfor(let i=0;i<eras.length;i++)\r\n\t\t\t{\r\n\t\t\t\tawait downloadImagesArr(eras[i].quizzes)\r\n\t\t\t}\r\n\t\t\tsetIsNeedDateLoaded(true);\r\n\t\t\tgoToViewStartWindow();\r\n\t\t}\r\n\r\n\r\n\t\t// Выбор эпохи\r\n\t\tconst createOnClickItemAge = (index) => () => {\r\n\t\t\tgoForwardInHistory(PANEL_ID_LIST_QUIZES);\r\n\t\t\tsetIndexAge(index);\r\n\t\t\tgoToPanelListQuizes();\r\n\t\t}\r\n\r\n\t\t// Выбор опроса\r\n\t\tconst createOnClickItemQuizes = (index) => () => {\r\n\t\t\tsetIndexQuiz(index);\r\n\t\t\tif(!eras[indexAge].quizzes[index].isImageDownloaded)\r\n\t\t\t{\r\n\t\t\t\tgoToViewSpinner();\r\n\t\t\t\tdownloadQuizeImage(index)\r\n\t\t\t\teras[indexAge].quizzes[index].isImageDownloaded = true;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\telse\r\n\t\t\t\tgoToViewListQuestions();\r\n\t\t}\r\n\r\n\t\tconst downloadQuizeImage = async (index) => {\r\n\t\t\tawait downloadImagesArr(eras[indexAge].quizzes[index].questions)\r\n\t\t\tawait goToViewListQuestions()\r\n\t\t}\r\n\r\n\t\t// Возврат от выбранной эпохи к выбору эпохи\r\n\t\tconst onBackListQuizes = () => {\r\n\t\t\tsetIsFirstOpenResult(true);\r\n\t\t\tgoBackInHistory(PANEL_ID_LIST_AGE)\r\n\t\t}\r\n\r\n\t\t//Возврат от результатов к выбору эпохи\r\n\t\tconst goToViewListAgeAndQuizesFromResult = () => {\r\n\t\t\tgoBackInHistory()\r\n\t\t\tgoToViewListAgeAndQuizes()\r\n\t\t}\r\n\r\n\t\t//Загружены ли в кеш картинки эпох и опросов (не картинки внутри опросов, их загружают отдельно)\r\n\t\tconst [isImageDownloaded, setIsImageDownloaded] = useState(false)\r\n\r\n\r\n\r\n\t// История для ListAgeAndQuizes\r\n\r\n\t\tconst [history, setHistory] = useState([PANEL_ID_LIST_AGE]);\r\n\t\tconst goBackInHistory = () => {\r\n\t\t\tlet his = history;\r\n\t\t\this.pop()\r\n\t\t\tif (activePanel === PANEL_ID_LIST_AGE) {\r\n\t\t\t\tvkBridge.send('VKWebAppEnableSwipeBack');\r\n\t\t\t}\r\n\t\t\tsetHistory(his)\r\n\t\t\tsetActivePanel(history[history.length - 1])\t\r\n\t\t}\r\n\r\n\t\tconst goForwardInHistory = (view) => { \r\n\t\t\tlet his = history;\r\n\t\t\this.push(view);\r\n\t\t\tif (activePanel === PANEL_ID_LIST_AGE) {\r\n\t\t\t\tvkBridge.send('VKWebAppDisableSwipeBack');\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t// функции для ListQuestions\r\n\t\tconst onBackListQuestions = () => {\r\n\t\t\tgoToViewListAgeAndQuizes();\r\n\t\t\tgoToPanelListQuizes();\r\n\t\t}\r\n\r\n\t\tconst onFinishListQuestions = (indexesAnswers) => {\r\n\t\t\tsetIndexesAnswers(indexesAnswers);\r\n\r\n\t\t\tlet sum = 0;\r\n\t\t\tfor(let i=0;i<indexesAnswers.length;i++){\r\n\t\t\t\tif(indexesAnswers[i] !== -1){\r\n\t\t\t\t\tsum+=eras[indexAge].quizzes[indexQuiz].questions[i].answerOptions[indexesAnswers[i]].score;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\teras[indexAge].quizzes[indexQuiz].percentProgress = sum;\r\n\t\t\tif(eras[indexAge].quizzes[indexQuiz].numberOfQuestions === sum){\r\n\t\t\t\teras[indexAge].percentProgress = eras[indexAge].percentProgress + 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetIndexResult(sum)\r\n\t\t\tgoToViewResult();\r\n\t\t}\r\n\r\n\t// функции для Result\r\n\t\tconst onBackResult = () => {\r\n\t\t\tgoToViewListAgeAndQuizes();\r\n\t\t}\r\n\r\n\t\tconst onAgainResult = () => {\r\n\t\t\tgoToViewListQuestions();\r\n\t\t}\r\n\t\t\r\n\t\tconst onGoToAnswersQuestionResult = () => {\r\n\t\t\tgoToViewAnswersQuestions()\r\n\t\t}\r\n\r\n\t// функции для AnswersQuestions\r\n\t\tconst onBackAnswersQuestions = () => {\r\n\t\t\tgoToViewResult();\r\n\t\t}\r\n\r\n\r\n\r\n\tconst onBackListAge = () => {\r\n\t\tgoBackInHistory(PANEL_ID_LIST_AGE)\r\n\t\tgoToViewListAgeAndQuizes()\r\n\t}\r\n\r\n\tconst downloadImagesArr = async(arr) => {\r\n\t\tfor(let i=0;i<arr.length;i++){\r\n\t\t\tawait new Promise((resolve, reject) => {\r\n\t\t\t\tconst img = new Image();\r\n\t\t\t\timg.src = arr[i].imageSrc;\r\n\t\t\t\t// console.log(img.src);\r\n\t\t\t\timg.onload = () => {\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t<ConfigProvider isWebView={true} scheme=\"android\">\r\n\t\t<AdaptivityProvider>\r\n\t\t\t<AppRoot>\r\n\t\t\t\t<SplitLayout header={null}>\r\n\t\t\t\t\t<SplitCol animate={true}>\r\n\t\t\t\t\t\t<Root activeView={activeView}>\r\n\r\n\t\t\t\t\t\t\t<StartWindow \r\n\t\t\t\t\t\t\t\tarrForPreDownload={eras}\r\n\t\t\t\t\t\t\t\tid={VIEW_ID_START_WINDOW} \r\n\t\t\t\t\t\t\t\tonClick={onClickStartWindow}/>\r\n\r\n\t\t\t\t\t\t\t<View \r\n\t\t\t\t\t\t\t\tid={VIEW_ID_LIST_AGE_AND_QUIZES}\r\n\t\t\t\t\t\t\t\tactivePanel={activePanel}\r\n\t\t\t\t\t\t\t\tonSwipeBack={goBackInHistory}\r\n\t\t\t\t\t\t\t\thistory={history}>\r\n\r\n\t\t\t\t\t\t\t\t<ListAge \r\n\t\t\t\t\t\t\t\t\tid={PANEL_ID_LIST_AGE} \r\n\t\t\t\t\t\t\t\t\teras={eras} \r\n\t\t\t\t\t\t\t\t\tcurWidth={curWidth}\r\n\t\t\t\t\t\t\t\t\tcreateOnClickItemAge={createOnClickItemAge}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<ListQuizes \r\n\t\t\t\t\t\t\t\t\tid={PANEL_ID_LIST_QUIZES} \r\n\t\t\t\t\t\t\t\t\tcurWidth={curWidth}\r\n\t\t\t\t\t\t\t\t\ttitle={eras[indexAge].title} \r\n\t\t\t\t\t\t\t\t\tquizes={eras[indexAge].quizzes} \r\n\t\t\t\t\t\t\t\t\tonBack={onBackListQuizes} \r\n\t\t\t\t\t\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t<ListQuestions \r\n\t\t\t\t\t\t\t\tid={VIEW_ID_LIST_QUESTIONES}\r\n\t\t\t\t\t\t\t\tcurWidth={curWidth}\r\n\t\t\t\t\t\t\t\tarrQuestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\tonBack={onBackListQuestions}\r\n\t\t\t\t\t\t\t\tonFinish={onFinishListQuestions}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\t\tid={VIEW_ID_RESULT}\r\n\t\t\t\t\t\t\t\tpercent={results[indexResuslt].percent}\r\n\t\t\t\t\t\t\t\tyear={results[indexResuslt].year}\r\n\t\t\t\t\t\t\t\thistoricalEvent={results[indexResuslt].historicalEvent}\r\n\t\t\t\t\t\t\t\tquizes={eras[indexAge].quizzes}\r\n\t\t\t\t\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\tindexAge={indexAge}\r\n\t\t\t\t\t\t\t\teras={eras}\r\n\t\t\t\t\t\t\t\tindexQuiz={indexQuiz}\r\n\t\t\t\t\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\tcreateOnClickItemAge={createOnClickItemAge}\r\n\t\t\t\t\t\t\t\tonBack={onBackResult}\r\n\t\t\t\t\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\r\n\t\t\t\t\t\t\t\tonAgain={onAgainResult}\r\n\t\t\t\t\t\t\t\tonGoToAnswersQuestion={onGoToAnswersQuestionResult}\r\n\t\t\t\t\t\t\t\tgoToViewListAndQuizes={goToViewListAgeAndQuizesFromResult}\r\n\r\n\t\t\t\t\t\t\t\tisFirstOpenResult={isFirstOpenResult}\r\n\t\t\t\t\t\t\t\tsetIsFirstOpenResult={setIsFirstOpenResult}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <AnswersQuestions\r\n\t\t\t\t\t\t\t\tid={VIEW_ID_ANSWERS_QUESTIONS}\r\n\t\t\t\t\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\tonBack={onBackAnswersQuestions}\r\n\t\t\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t\t\t<SpinnerView\r\n\t\t\t\t\t\t\t\tid={\"VIEW_ID_SPINNER\"}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</SpinnerView>\r\n\r\n\t\t\t\t\t\t</Root>\r\n\t\t\t\t\t</SplitCol>\r\n\t\t\t\t</SplitLayout>\r\n\t\t\t</AppRoot>\r\n    \t</AdaptivityProvider>\r\n    </ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import imagePetr1 from \"../../img/ageRussianEmpire/Petr1/Petr1.png\";\r\n\r\nimport imgExample from \"../../img/ageRussianEmpire/Petr1/img1.png\";\r\n\r\nimport ababa from \"../../img/ageRussianEmpire/main.png\"\r\n\r\nconst quizPetr1 = {\r\n    title: \"Император Пётр I\",\r\n    description:\"Росси́йская импе́рия (рус. дореф. Россійская имперія; также Всеросси́йская импе́рия, ца́рская Росси́я) — государство, существовавшее в период с 22 октября (2 ноября) 1721 года до Февральской революции и провозглашения республики в сентябре 1917 года Временным правительством.\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 8,\r\n    isImageDownloaded: false,\r\n    imageSrc: imagePetr1,\r\n    questions: [\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: imgExample,\r\n            questionText: \"Основная причина дефолта 98-го года?3156156566644684684\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Лопнул пузырь ГКО (Государственные краткосрочные облигации)\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Отказ западных партнёров выдать кредит\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Решение о срочном запуске печатного станка в “ускоренном режиме\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 2\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 3\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 4\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 5\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 6\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 7\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 8\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default quizPetr1;\r\n","import mainImage from \"../../img/ageRussianEmpire/Petr1/Petr1.png\";\r\nimport quizPetr1 from \"./quizPetr1\";\r\nimport quizTheEraOfPalaceCoups from \"./quizTheEraOfPalaceCoups\";\r\n\r\nconst ageRussianEmpire = {\r\n    title: \"Государство московское\",\r\n    shortTitle: \"Империя\",\r\n    imageSrc: mainImage,\r\n    description:\"Росси́йская импе́рия (рус. дореф. Россійская имперія; также Всеросси́йская импе́рия, ца́рская Росси́я) — государство, существовавшее в период с 22 октября (2 ноября) 1721 года до Февральской революции и провозглашения республики в сентябре 1917 года Временным правительством.\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    // numberOfQuestions:8,\r\n    quizzes: [\r\n        quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizTheEraOfPalaceCoups\r\n    ]\r\n}\r\n\r\nexport default ageRussianEmpire;\r\n","import imageTheEraOfPalaceCoups from \"../../img/ageRussianEmpire/The era of palace coups/The era of palace coups.png\";\r\n\r\nconst quizTheEraOfPalaceCoups = {\r\n    title: \"Эпоха Дворцовых переворотов\",\r\n    imageSrc: imageTheEraOfPalaceCoups,\r\n    questions: []\r\n}\r\n\r\nexport default quizTheEraOfPalaceCoups;\r\n","import imgMain from \"../../img/ageRF/MMM/MMM.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/MMM/MMM.jpg\";\r\n\r\nconst quizMMM = {\r\n    title: \"МММ\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default quizMMM;\r\n","import imgMain from \"../../img/ageRF/Privatization/Privatization.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/Privatization/Privatization.jpg\";\r\n\r\nconst Privatization = {\r\n    title: \"Приватизация\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default Privatization;\r\n","import imgMain from \"../../img/ageRF/TheChechenWar/TheChechenWar.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/TheChechenWar/TheChechenWar.jpg\";\r\n\r\nconst TheChechenWar = {\r\n    title: \"Чеченская война\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default TheChechenWar;\r\n","import imgMain from \"../../img/ageRF/TheWhiteHouse/TheWhiteHouse.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/TheWhiteHouse/TheWhiteHouse.jpg\";\r\n\r\nconst TheWhiteHouse = {\r\n    title: \"Белый дом\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default TheWhiteHouse;\r\n","import imgMain from \"../../img/ageRF/Yeltsin/Yeltsin.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/Yeltsin/Yeltsin.jpg\";\r\n\r\nconst Yeltsin = {\r\n    title: \"Ельцин\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default Yeltsin;\r\n","import ageRussianEmpire from \"./ageRussianEmpire/ageRussianEmpire\";\r\nimport ageRF from \"./ageRF/ageRF\";\r\n\r\nimport results from \"./results/results\";\r\n\r\nconst store = {\r\n    eras: [\r\n        ageRussianEmpire,\r\n        ageRF,\r\n        // ageRF,\r\n        // ageRussianEmpire,\r\n        // ageRussianEmpire,\r\n        // ageRussianEmpire\r\n    ],\r\n\r\n    results,\r\n\r\n    // isAgeAndQuizesDownloaded:false,\r\n\r\n    MAX_SCORE: 8\r\n}\r\n\r\nexport default store;\r\n\r\nconst calculatePercentAge = (era) => {\r\n    const numberOfPassedQuizes = era.quizzes.reduce((sum, quiz) => {\r\n        return quiz.percentProgress !== undefined ?sum + 1 :sum\r\n    }, 0);\r\n\r\n    return Math.round(numberOfPassedQuizes / era.length * 100);\r\n}\r\n\r\nexport const savePercentQuiz = (indexAge, indexQuiz, percentProgress) => {\r\n    store.eras = store.eras.map((era, i) => {\r\n        if (i !== indexAge) {\r\n            return era;\r\n        }\r\n\r\n        if (era.quizzes[indexQuiz].percentProgress === undefined) {\r\n            era.quizzes[indexQuiz].percentProgress = percentProgress;\r\n        } else {\r\n            era.quizzes[indexQuiz].percentProgress = Math.max(percentProgress, era.quizzes[indexQuiz].percentProgress);\r\n        }\r\n\r\n        era.percentProgress = calculatePercentAge(era);\r\n\r\n        return {...era};\r\n    })\r\n}\r\n","import imgMain from \"../../img/ageRF/Zero/Zero.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/Zero/img1.jpg\";\r\nimport img2 from \"../../img/ageRF/Zero/img2.jpg\";\r\nimport img3 from \"../../img/ageRF/Zero/img3.jpg\";\r\nimport img4 from \"../../img/ageRF/Zero/img4.jpg\";\r\nimport img5 from \"../../img/ageRF/Zero/img5.jpg\";\r\nimport img6 from \"../../img/ageRF/Zero/img6.jpg\";\r\nimport img7 from \"../../img/ageRF/Zero/img7.jpg\";\r\nimport img8 from \"../../img/ageRF/Zero/img8.jpg\";\r\n\r\nconst Zero = {\r\n    title: \"Нулевые\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 8,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/kristoffer-trolle/40588411473/in/photolist-24QEdDP-8rou28-6YCCCD-7qqiVa-Myr8m3-NgsQHD-7CvC46-CKME9U-29DVmgL-XwC2eb-pCHa79-aebVAb-P3CF5L-rUE8tQ-HHkMwh-JeKXGC-TxLrF2-D8c4fL-21osJCo-bRGzWx-NAHSP-DNeEib-y5oQTb-eDDNiF-uEyuJi-e4WqDn-rDQWNB-215SXvJ-o7Ny3d-fxJyd-r9hjk7-EesQgh-25MtnPo-H5673U-rxHCGA-qj9wvw-r3BfHh-4wCRXA-CvASK4-tkHTtd-f9geAA-bnVBLy-dmpbvA-rafVkw-923mtQ-r2Wikr-dNaA5i-amkjYy-dTHUqH-K6Wp4P\",\r\n            questionText: \"Почему 25 мая 2005 года в Москве многим людям пришлось возвращаться домой пешком?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Из-за взрыва в метро\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Произошла авария в энергосистеме\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Противники монетизации льгот перекрыли дороги\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img2,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/brieuc/2991630124/in/photolist-5ymTpJ-5ZJcJE-4kASi1-NoSdv-5yi5Ec-pXrD2-7fPmpj-3AdyY-4CPjhT-gDc7J-srznLQ-d4MKmq-56SVMa-bpyXtS-4vcES-2fUXwQ-29p2FSm-qcPEhP-5DXQGC-5DTzcH-5noFUF-6raagH-6hZM5z-5ZyvB5-8Tyg7-6XiSgc-4RtyeS-5M8mj9-6z5WDK-oKqCP3-bLLfP4-xgqxs-AE6Fi-ju4wrN-pkCDA-sztQL-b71xan-5kkWtd-9BTx9a-9BWukL-5GMdDZ-4V56W1-5hVhCa-6n5fV9-768R64-DCrNF1-2jNRATr-2fq1HPd-Ld5ujp-qdcjg2\",\r\n            questionText: \"Почему 25 мая 2005 года в Москве многим людям пришлось возвращаться домой пешком?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"2001\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"2004\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2008\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img3,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/32322040@N06/50576826581/in/photolist-2k4istp-QoDBgD-xgDuU3-2jASiTV-QJUB67-2iuNpzh-2ehiLwT-dcDsdB-2iNsXkD-2iuQdMq-25aqNt6-2iWYGAu-nZdgyD-2iLADAh-2iDR6zt-2j7GkRF-QBsgF6-2iUTKSn-cRmUJ1-cRmULh-cRmUGd-i3eUEZ-2irfvgQ-urWciH-2k4isum-2jjTez5-2hhHymA-2i5LXcJ-8FnKmY-DG4X-2yYiA6-2z33Th-2z2nej-2z33Vu-2z2n2y-2z2n3w-2z343m-2gyhZ5E-2yYV9o-2z2n1o-3RzVuS-2z33Z9-2iMKS3w-2yYVbE-2yWydf-d4o3mb-22oZfLu-2yVUwC-2yVUsG-2yVUvN\",\r\n            questionText: \"Что происходило с 23 по 26 октября 2002 года в Москве?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Саммит «большой восьмёрки»\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Газовый конфликт между Россией и Украиной\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Захват заложников в Театральном центре на Дубровке\",\r\n                    score: 1\r\n                }\r\n            ]\r\n        },        \r\n        {\r\n            imageSrc: img4,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/sibekokke/1117587017/in/photolist-2GKVFF-4ArWj3-4ygBrh-AnVpq6-7HGaTv-GgzTog-Bkkgre-4YjV7o-4YfEBe-4YjUNs-4YjVid-4YfEje-AJvfft-8dMR6q-4ygBs7-5WQmfd-AnVrBR-Bi2yGf-ALPoRR-2j2GjKs-4wBMzC-91qfBY-dwKhcg-A9EDFy-8hazk-HNsZa4-26J5X2S-5PRtEX-2krvCEx-5PRtp4-osfhkr-AP18e-5PRtLK-B6wMW4-gLPvM-FxkA8-8Bf55K-4nFYWF-emPbDW-ruNTSk-aTbG8-gh5hni-5EbEEj-6TCsp-6z3eJ-5FaTYA-5F6ArR-5FaTyq-nskxq-MXNhw9\",\r\n            questionText: \"Что произошло в августе 2000 года, когда вещание большинства российских телеканалов на Москву и Московскую область было приостановлено, а три человека погибли?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Захват НТВ\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Погром на Манежной площади\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Пожар на Останкинской телебашне \",\r\n                    score: 1\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img5,\r\n            linkOriginPhoto: \"\",\r\n            questionText: \"С этим местом связана трагедия, произошедшая 17 августа 2009 года. Что это?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"АЭС Фукусима–1\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Саяно–Шушенская ГЭС \",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"АЭС Три–Майл–Айленд\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img6,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/zapthedingbat/5531724951/in/photolist-9qPx78-9qSnz3-o8hRRG-o8gKNx-9qPp7n-ir7oD-opuQqP-9qSnao-9qSwzG-orwxyZ-2iyguJu-JWvMub-K6GPFT-4g1yNz-2iBjUJe-9qPoo2-2iz1sjb-CEYF1-5kQnpy-orwGNv-orw8Ga-9qSnjC-o8igvK-opumr2-9qPoF2-5kQmFs-o8hTy9-opLMti-9qPovZ-9qPoGT-onKE5f-opuCFM-9qSndd-9qPpNX-opMna6-onK7Mq-o8hdnq-opMdSK-9qPobp-9qSp3q-9qSq3j-4UKAC3-opLKaF-9qSnuL-orwZXk-9qPpZH-9qSoP7-orwQPa-9qSwyo-onKs8j\",\r\n            questionText: \"Что произошло в апреле 2000 года?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Завершились активные боевые действия Второй чеченской войны\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Избрание В. Путина президентом РФ\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Арест Михаила Ходорковского\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img7,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/pedrosz/49669484811/in/photolist-2iF86nM-2jk9zix-2jpG2vB-2iyfWEn-2iH9LAh-2iDf1xj-2iFLyQe-2jkLbtb-2jCHgRr-2jA15Uq-2jr8eXe-2iEisj4-2iz1sjb-2izAGFg-2iD1St6-EdzN4R-2g9GhyY-2dJcKUK-24ssb7a-2i3eGHC-2cp7FMA-ffie9A-ff3Yhi-2iCfHbL-ECRTvP-2jFbsyv-CnrC6x-296vjMN-2extTv2-2hZdqf7-EjWwZq-2iCt4RR-ffiaou-A5RQhb-HKMLB2-ffiea9-2gN8Agy-ffiaps-ffiapf-ff3Q2X-ff3U6p-21qQHWo-2gsXy7H-nkxYsz-FnKro6-CT88Vh-2gY5VHz-KVUtkj-RnxoCJ-N27twc\",\r\n            questionText: \"Значимое событие в 2006 в Санкт-Петербурге\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Саммит глав стран «Большой восьмёрки»\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Саммит глав стран “СНГ”\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Международный форум стран экспортёров газа\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img8,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/pedrosz/49669484811/in/photolist-2iF86nM-2jk9zix-2jpG2vB-2iyfWEn-2iH9LAh-2iDf1xj-2iFLyQe-2jkLbtb-2jCHgRr-2jA15Uq-2jr8eXe-2iEisj4-2iz1sjb-2izAGFg-2iD1St6-EdzN4R-2g9GhyY-2dJcKUK-24ssb7a-2i3eGHC-2cp7FMA-ffie9A-ff3Yhi-2iCfHbL-ECRTvP-2jFbsyv-CnrC6x-296vjMN-2extTv2-2hZdqf7-EjWwZq-2iCt4RR-ffiaou-A5RQhb-HKMLB2-ffiea9-2gN8Agy-ffiaps-ffiapf-ff3Q2X-ff3U6p-21qQHWo-2gsXy7H-nkxYsz-FnKro6-CT88Vh-2gY5VHz-KVUtkj-RnxoCJ-N27twc\",\r\n            questionText: \"Что было в 2009 году в России впервые?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Евровидение\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Фестиваль нашествие\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Фестиваль хиппи\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        \r\n    ]\r\n}\r\n\r\nexport default Zero;\r\n","import mainImage from \"../../img/ageRF/ageRF.jpg\";\r\nimport MMM from \"./MMM\";\r\nimport Privatization from \"./Privatization\";\r\nimport TheChechenWar from \"./TheChechenWar\";\r\nimport TheWhiteHouse from \"./TheWhiteHouse\";\r\nimport Yeltsin from \"./Yeltsin\";\r\nimport Zero from \"./Zero\";\r\n\r\nconst ageRF = {\r\n    title: \"РФ\",\r\n    shortTitle: \"РФ\",\r\n    imageSrc: mainImage,\r\n    description:\"Росси́йская федерация\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    quizzes: [\r\n        MMM,\r\n        // Privatization,\r\n        // TheChechenWar,\r\n        // TheWhiteHouse,\r\n        // Yeltsin,\r\n        // Zero\r\n    ]\r\n}\r\n\r\nexport default ageRF;","const results = [\r\n    {\r\n        percent: 0,\r\n        year: \"1700\",\r\n        historicalEvent: \"Начало Северной войны со Швецией\"\r\n    },\r\n    {\r\n        percent: 1,\r\n        year: \"1011\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 2,\r\n        year: \"1022\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 3,\r\n        year: \"1033\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 4,\r\n        year: \"1054\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 5,\r\n        year: \"1065\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 6,\r\n        year: \"1076\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 7,\r\n        year: \"1087\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 8,\r\n        year: \"1108\",\r\n        historicalEvent: \"в Витичеве прошёл 2-й съезд князей Киевской Рус\"\r\n    }\r\n]\r\n\r\nexport default results;\r\n","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\nimport store, { savePercentQuiz } from \"./store/store.js\";\r\nimport { Platform } from \"@vkontakte/vkui\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nbridge\r\n    .send(\"VKWebAppGetClientVersion\")\r\n    .then(data => {\r\n        if(data.platform === Platform.IOS){\r\n            bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\"});\r\n        }\r\n        else if (data.platform === Platform.ANDROID){\r\n            bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#000\",\"navigation_bar_color\":\"#000000\"});\r\n        }\r\n    })\r\n    .catch(error =>{\r\n        console.log(error)\r\n    })\r\n\r\n// const [isDownloaded, setIsDownloaded] = \r\n\r\n// const downloadImagesArr = async(arr) => {\r\n//     for(let i=0;i<arr.length;i++){\r\n//         await new Promise((resolve, reject) => {\r\n//             const img = new Image();\r\n//             img.src = arr[i].imageSrc;\r\n//             img.onload = () => {\r\n//                 resolve()\r\n//             }\r\n//         });\r\n//     }\r\n// }\r\n// const firstDownload = async () => {\t\r\n//     await downloadImagesArr(store.eras);\r\n//     for(let i=0;i<store.eras.length;i++)\r\n//     {\r\n//         await downloadImagesArr(store.eras[i].quizzes)\r\n//     }\r\n// }\r\n// firstDownload().then(()=>{\r\n//     startRender()\r\n// })\r\n\r\nReactDOM.render(\r\n    <App {...store} savePercentQuiz={savePercentQuiz}/>, \r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// const startRender = () =>{\r\n\r\n// }\r\n\r\n\r\nimport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/MMM.5b367f29.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Privatization.151bf0e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TheChechenWar.6ad161bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TheWhiteHouse.034671a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Yeltsin.c735400b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contacts.da748c82.svg\";","module.exports = __webpack_public_path__ + \"static/media/Petr1.58cb079c.png\";"],"sourceRoot":""}