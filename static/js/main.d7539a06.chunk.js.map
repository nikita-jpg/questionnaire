{"version":3,"sources":["panels/StartWindow/contacts.svg","panels/ListQuestions/IteamListQuestion/BottomSheet/rectangle.svg","panels/ListQuestions/IteamListQuestion/BottomSheet/candelabrum.svg","img/ageRussianEmpire/main.png","img/ageRussianEmpire/quizPetr1/petr.png","img/ageRussianEmpire/The era of palace coups/The era of palace coups.png","panels/StartWindow/StartWindow.js","panels/ListAge/ItemListAge/ItemListAge.js","panels/ListAge/ListAge.js","components/BlackBackground/BlackBackground.js","panels/ListQuestions/IteamListQuestion/BottomSheet/BottomSheet.js","panels/ListQuestions/IteamListQuestion/IteamListQuestion.js","panels/ListQuestions/ListQuestions.js","anime/animate.js","anime/easeOut.js","components/ListQuizes/ItemListQuizes/ItemListQuizes.js","components/ListQuizes/ListQuizes.js","panels/Result/ResultButtons/ResultButtons.js","panels/Result/Result.js","panels/ViewListQuizes/ViewListQuizes.js","panels/AnswersQuestions/ItemAnswerQuestion/ItemAnswerQuestion.js","panels/AnswersQuestions/AnswersQuestions.js","App.js","store/ageRussianEmpire/quizPetr1.js","store/ageRussianEmpire/quizTheEraOfPalaceCoups.js","store/store.js","store/ageRussianEmpire/ageRussianEmpire.js","store/results/results.js","index.js","img/ageRussianEmpire/quizPetr1/Картинка.png"],"names":["module","exports","StartWindow","id","onClick","activePanel","separator","visor","transparent","className","width","height","src","svgContacts","alt","ItemListAge","imageSrc","title","percentProgress","hasLeftButton","goLeft","hasRightButton","goRight","left","ListAge","eras","createOnClickItemAge","index","createIdPanel","useState","indexActivePanel","setIndexActivePanel","createGoRight","map","age","i","arrAge","key","length","BlackBackground","children","BottomSheet","stateAnswers","onFinish","goToQuestionWithoutAnswer","toIndexQuestion","isOpen","setIsOpen","handlerClickWithoutBottomSheet","e","target","closest","useEffect","window","addEventListener","removeEventListener","svgCandelabrum","svgRectangle","questionText","indexAnswer","IteamListQuestion","platform","question","numberCurrentQuestion","countQuestions","lastIndexQuestion","currentIndexQuestion","goToLastQuestion","goToPrevQuestion","goToNextQuestion","isRotated","setRotate","rotateImage","fill","undefined","overSideImg","questionImg","answerOptions","answer","text","ListQuestions","arrQuestions","onBack","totalScore","createIdActivePanel","getInitStateAnswers","substring","setStateAnswers","calculateScore","reduce","sum","dataAnswer","indexQuestion","score","setIndexQuestion","resetData","createGoToNextQuestion","maxLength","giveAnswer","createGoToPrevQuestion","setLastIndexQuestion","arr","fromIndexQuestion","animate","timing","draw","duration","start","performance","now","requestAnimationFrame","time","timeFraction","progress","easeOut","ItemListQuizes","classNamePersentProgress","ListQuizes","quizes","createOnClickItemQuizes","quiz","ResultButtons","onAgain","onGoToAnswersQuestion","Result","initialTransitionYearX","year","percent","historicalEvent","WIDTH_YEAR","WIDTH_POSTFIX","String","WIDTH_PRETFIX","stringPrefix","replace","widthContent","document","documentElement","clientWidth","PADDING_LEFT_AND_RIGHT","initialStyles","overflowResult","opacityPercent","opacityPrefixYear","transitionYearY","clientHeight","HEIGHT_YEAR","transitionYearX","opacityHistoricalEvent","transitionContentY","opacityContent","styles","setStyles","stylePercent","opacity","stylePrefixYear","styleYear","transform","styleHistoricalEvent","styleContent","styleResult","overflow","setTimeout","newStyles","getProgressStyle","min","max","shiftX","Math","WIDTH_PERCENT","progressStyles","newTransition","style","getClassNameForPercent","ViewListQuizes","ID_ACTIVE_PANEL","ItemAnswerQuestion","indexRightAnswer","indexUserAnswer","isFirstRender","setIsFirstRender","getAnswerText","heightWrapContent","setHeightWrapContent","refWrapContent","createRef","current","offsetHeight","styleWrapAnswers","position","visibility","padding","boxSizing","getStyleWrapAnswers","styleItemAnswerQuestion","zIndex","handlerClickWithouItemAnswerQuestion","getClassNameArrow","ref","AnswersQuestions","questions","indexesAnswers","q","findIndex","a","App","results","MAX_SCORE","savePercentQuiz","indexAge","indexQuiz","setUser","size","setPopout","disablePopout","bridge","send","user","subscribe","detail","type","data","schemeAttribute","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","activeView","setActiveView","goToViewListAge","goToViewListQuizes","goToViewListQuestions","goToViewResult","setIndexAge","setIndexQuiz","indexResuslt","setIndexResult","setIndexesAnswers","shortTitle","quizzes","round","res","filter","quizPetr1","imagePetr1","imgExample","quizTheEraOfPalaceCoups","imageTheEraOfPalaceCoups","store","mainImage","ReactDOM","render","era","numberOfPassedQuizes","calculatePercentAge","getElementById","then","default"],"mappings":"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","file":"static/js/main.d7539a06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/contacts.da748c82.svg\";","module.exports = __webpack_public_path__ + \"static/media/rectangle.1386c6fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/candelabrum.0d4d7bb2.svg\";","module.exports = __webpack_public_path__ + \"static/media/main.96699d6f.png\";","module.exports = __webpack_public_path__ + \"static/media/petr.58cb079c.png\";","module.exports = __webpack_public_path__ + \"static/media/The era of palace coups.42e7310b.png\";","import { Panel, PanelHeader, View } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nimport svgContacts from './contacts.svg';\r\n\r\nimport './StartWindow.css';\r\n\r\nconst StartWindow = ({id, onClick}) => {\r\n    const ID_ACTIVE_PANEL = \"ID_ACTIVE_PANEL\";\r\n\r\n    return (\r\n        <View activePanel={ID_ACTIVE_PANEL} id={id}>\r\n            <Panel id={ID_ACTIVE_PANEL} separator={false}>\r\n                <PanelHeader\r\n                    separator={false}\r\n                    visor={false}\r\n                    transparent={true}\r\n                ></PanelHeader>\r\n\r\n                <div className=\"StartWindow\">\r\n                    <div className=\"StartWindow__container\">\r\n                        <img width=\"50\" height=\"50\" src={svgContacts} alt=\"contacts\"/>\r\n                        <h1 className=\"StartWindow__title\">Привет, друг!</h1>\r\n                        <p className=\"StartWindow__text\">\r\n                            Это приложение поможет тебе проверить свои знания в области истори родной страны. Удачи!\r\n                        </p>\r\n                        <button className=\"StartWindow__button\" onClick={onClick}>Поехали!</button>\r\n                    </div>\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default StartWindow;","import { Panel, PanelHeader } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nimport \"./ItemListAge.css\";\r\n\r\nconst ItemListAge = ({id, imageSrc, title, percentProgress, onClick,\r\n    hasLeftButton, goLeft, hasRightButton, goRight}) => {\r\n\r\n    return (\r\n        <Panel id={id}>  \r\n            <PanelHeader\r\n                className=\"ItemListAge__PanelHeader\"\r\n                left={\r\n                    <h1 className=\"ItemListAge__header\">Выбор эпохи</h1>\r\n                }\r\n                visor={true}\r\n                transparent={true}\r\n                separator={false}\r\n            ></PanelHeader>\r\n            <div className=\"ItemListAge\">\r\n                <div className=\"ItemListAge__image-wrap\">\r\n                    <img className=\"ItemListAge__image\" src={imageSrc} alt={`ItemListAge-${id}`}/>\r\n\r\n                    {\r\n                        hasLeftButton && \r\n                        <button onClick={goLeft} className=\"ItemListAge__arrow-button ItemListAge__arrow-button_left\"></button>\r\n                    }\r\n\r\n                    {\r\n                        hasRightButton && \r\n                        <button onClick={goRight} className=\"ItemListAge__arrow-button ItemListAge__arrow-button_right\"></button>\r\n                    }\r\n\r\n                    <h2 className=\"ItemListAge__title\">{title}</h2>\r\n                </div>\r\n\r\n                <p className=\"ItemListAge__progress\">Пройдено {percentProgress}%</p>\r\n\r\n                <button onClick={onClick} className=\"ItemListAge__button\">Открыть</button>\r\n            </div>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default ItemListAge;","import { View } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport ItemListAge from './ItemListAge/ItemListAge';\r\n\r\nconst ListAge = ({id, eras, createOnClickItemAge=index=>null}) => {\r\n    const createIdPanel = index => `${id}_${index}`;\r\n\r\n    const [indexActivePanel, setIndexActivePanel] = useState(0);\r\n\r\n    const createGoRight = (index) => () => setIndexActivePanel(index + 1);\r\n\r\n    const createGoLeft = (index) => () => setIndexActivePanel(index - 1);\r\n\r\n    return (\r\n        <View id={id} activePanel={createIdPanel(indexActivePanel)}>\r\n            {\r\n                eras.map((age, i, arrAge) => (\r\n                    <ItemListAge\r\n                        key={createIdPanel(i)}\r\n                        id={createIdPanel(i)}\r\n                        title={age.title}\r\n                        imageSrc={age.imageSrc}\r\n                        percentProgress={age.percentProgress}\r\n                        onClick={createOnClickItemAge(i)}\r\n                        hasLeftButton={i > 0}\r\n                        hasRightButton={i < arrAge.length - 1}\r\n                        goLeft={createGoLeft(i)}\r\n                        goRight={createGoRight(i)}\r\n                    />\r\n                ))\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ListAge;\r\n","import React from 'react';\r\n\r\nimport './BlackBackground.css';\r\n\r\nconst BlackBackground = ({children}) => {\r\n    return <div className=\"BlackBackground\">{children}</div>\r\n}\r\n\r\nexport default BlackBackground;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport './BottomSheet.css';\r\n\r\nimport svgRectangle from \"./rectangle.svg\";\r\nimport svgCandelabrum from \"./candelabrum.svg\";\r\nimport BlackBackground from '../../../../components/BlackBackground/BlackBackground';\r\n\r\nconst BottomSheet = ({ stateAnswers, onFinish = () => { }, goToQuestionWithoutAnswer = (toIndexQuestion) => { } }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleIsOpen = () => setIsOpen(!isOpen);\r\n\r\n    // логика закрытия по щелчку вне BottomSheet\r\n    const handlerClickWithoutBottomSheet = (e) => {\r\n        if (!e.target.closest(\".BottomSheet\")) {\r\n            setIsOpen(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            window.addEventListener(\"click\", handlerClickWithoutBottomSheet);\r\n        } else {\r\n            window.removeEventListener(\"click\", handlerClickWithoutBottomSheet);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener(\"click\", handlerClickWithoutBottomSheet);\r\n        }\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <>\r\n            {isOpen && <BlackBackground />}\r\n            \r\n            <div className={`BottomSheet ${isOpen && \"BottomSheet__open\"}`}>\r\n                <div className=\"BottomSheet__svg-wrap\" onClick={toggleIsOpen}>\r\n                    <img\r\n                        className={`BottomSheet__candelabrum ${isOpen && \"BottomSheet__candelabrum_open\"}`}\r\n                        src={svgCandelabrum}\r\n                        alt=\"candelabrum\"\r\n                    />\r\n\r\n                    <img\r\n                        className=\"BottomSheet__rectangle\"\r\n                        src={svgRectangle}\r\n                        alt=\"rectangle\"\r\n                    />\r\n                </div>\r\n\r\n                <ul className=\"BottomSheet__list\">\r\n                    {\r\n                        stateAnswers.map(({ questionText, indexAnswer }, i) => (\r\n                            <li key={i} className=\"BottomSheet__list-item\" onClick={() => goToQuestionWithoutAnswer(i)}>\r\n                                <span className=\"BottomSheet__question-text\">{i + 1}) {questionText}...</span>\r\n\r\n                                {\r\n                                    indexAnswer !== -1\r\n                                        ? <span className=\"BottomSheet__has-answer\">Вы ответили</span>\r\n                                        : <span className=\"BottomSheet__has-not-answer\">Нет ответа</span>\r\n                                }\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n\r\n                <button className=\"BottomSheet__button\" onClick={onFinish}>Закончить тест</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BottomSheet;\r\n","import { Icon24Back, Icon28ChevronBack } from '@vkontakte/icons';\r\nimport { IOS, Panel, PanelHeader, PanelHeaderButton, platform } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport BottomSheet from './BottomSheet/BottomSheet';\r\n\r\nimport \"./IteamListQuestion.css\";\r\n\r\nconst osName = platform();\r\n\r\nconst IteamListQuestion = ({ id, question,\r\n    numberCurrentQuestion, countQuestions,\r\n    stateAnswers, indexAnswer,\r\n    lastIndexQuestion, currentIndexQuestion,\r\n    goToLastQuestion, goToQuestionWithoutAnswer,\r\n    goToPrevQuestion, goToNextQuestion,\r\n    onFinish = () => { } }) => {\r\n\r\n    const [isRotated, setRotate] = useState(false);\r\n\r\n    const rotateImage = () => setRotate(!isRotated);\r\n\r\n    return (\r\n        <Panel id={id} separator={false}>\r\n            <PanelHeader\r\n                left={\r\n                    <>\r\n                        <PanelHeaderButton onClick={goToPrevQuestion}>\r\n                            <Icon24Back fill=\"white\" />\r\n                        </PanelHeaderButton>\r\n                        <span className=\"IteamListQuestion__number-question\">{numberCurrentQuestion}/{countQuestions}</span>\r\n                    </>\r\n                }\r\n                className=\"IteamListQuestion__PanelHeader\"\r\n                separator={false}\r\n                visor={false}\r\n                transparent={false}\r\n            >\r\n            </PanelHeader>\r\n\r\n            <div className=\"IteamListQuestion\">\r\n                <div className=\"IteamListQuestion__content\">\r\n                    {\r\n                        question.overSideImg !== undefined && question.overSideImg !== null\r\n                            ?\r\n                            <div\r\n                                className={`IteamListQuestion__image-wrap ${isRotated && \"IteamListQuestion__image-wrap_rotated\"}`}\r\n                            >\r\n                                <img\r\n                                    className=\"IteamListQuestion__image IteamListQuestion__image_hidden\"\r\n                                    src={question.questionImg}\r\n                                    alt={`image_hidden_${id}`}\r\n                                />\r\n\r\n                                <div className=\"IteamListQuestion__image-side-wrap IteamListQuestion__image-side-wrap_front\">\r\n                                    <img className=\"IteamListQuestion__image\" src={question.questionImg} alt={`image_front_${id}`} />\r\n\r\n                                    <button\r\n                                        onClick={rotateImage}\r\n                                        className=\"IteamListQuestion__rotate-button IteamListQuestion__rotate-button_front\"\r\n                                    ></button>\r\n                                </div>\r\n\r\n                                <div className={`IteamListQuestion__image-side-wrap \r\n                                    IteamListQuestion__image-side-wrap_back \r\n                                    ${!isRotated ? \"IteamListQuestion__image-side-wrap_disable\" : \"\"}`}\r\n                                >\r\n                                    <img className=\"IteamListQuestion__image\" src={question.overSideImg} alt={`image_back_${id}`} />\r\n\r\n                                    <button\r\n                                        onClick={rotateImage}\r\n                                        className=\"IteamListQuestion__rotate-button IteamListQuestion__rotate-button_back\"\r\n                                    ></button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            : <div className=\"IteamListQuestion__image-wrap\">\r\n                                <img\r\n                                    className=\"IteamListQuestion__image\"\r\n                                    src={question.questionImg}\r\n                                    alt={`image_hidden_${id}`}\r\n                                />\r\n                            </div>\r\n                    }\r\n\r\n                    <p className=\"IteamListQuestion__question-text\">{question.questionText}</p>\r\n\r\n                    <div className=\"IteamListQuestion__answer-options\">\r\n                        {\r\n                            question.answerOptions.map((answer, i) => (\r\n                                <button\r\n                                    key={i}\r\n                                    className={\r\n                                        `IteamListQuestion__answer \r\n                                        ${indexAnswer === i && \"IteamListQuestion__answer_marked\"}`\r\n                                    }\r\n                                    onClick={() => goToNextQuestion(i)}\r\n                                >\r\n                                    {answer.text}\r\n                                </button>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    lastIndexQuestion !== -1 &&\r\n                    <div\r\n                        onClick={goToLastQuestion}\r\n                        className={\r\n                            `IteamListQuestion__go-to-last-question \r\n                                ${lastIndexQuestion > currentIndexQuestion\r\n                                ? \"IteamListQuestion__go-to-last-question_right\"\r\n                                : \"IteamListQuestion__go-to-last-question_left\"\r\n                            }`\r\n                        }\r\n                    >\r\n                        к вопросу {lastIndexQuestion + 1}\r\n                    </div>\r\n                }\r\n\r\n                <BottomSheet\r\n                    stateAnswers={stateAnswers}\r\n                    onFinish={onFinish}\r\n                    goToQuestionWithoutAnswer={goToQuestionWithoutAnswer}\r\n                />\r\n            </div>\r\n        </Panel>\r\n    )\r\n};\r\n\r\nexport default IteamListQuestion;\r\n","import { View } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport IteamListQuestion from './IteamListQuestion/IteamListQuestion';\r\n\r\nconst ListQuestions = ({id, arrQuestions, onBack=()=>{}, onFinish=totalScore=>{}}) => {\r\n    const createIdActivePanel = index => `IteamListQuestion-${index}`;\r\n\r\n    // логика хранения ответов\r\n    const getInitStateAnswers = () => [\r\n        ...arrQuestions.map(question => ({\r\n            questionText: question.questionText.substring(0, 20),\r\n            indexAnswer: -1\r\n        }))\r\n    ];\r\n\r\n    const [stateAnswers, setStateAnswers] = useState(getInitStateAnswers());\r\n\r\n    const giveAnswer = (indexQuestion, indexAnswer) => {\r\n        stateAnswers[indexQuestion].indexAnswer = indexAnswer;\r\n        setStateAnswers([...stateAnswers]);\r\n    }\r\n\r\n    const calculateScore = () => { \r\n        return stateAnswers.reduce((sum, dataAnswer, indexQuestion) => {\r\n            if (dataAnswer.indexAnswer === -1) {\r\n                return sum;\r\n            }\r\n\r\n            return sum + arrQuestions[indexQuestion].answerOptions[dataAnswer.indexAnswer].score;\r\n        }, 0);\r\n    }\r\n\r\n    const resetStateAnswers = () => setStateAnswers(getInitStateAnswers());\r\n\r\n    // логика переключения вопросов\r\n    const [indexQuestion, setIndexQuestion] = useState(0);\r\n\r\n    const resetData = () => {\r\n        resetStateAnswers();\r\n        setIndexQuestion(0);\r\n    }\r\n\r\n    const createGoToNextQuestion = (indexQuestion, maxLength) => (indexAnswer) => {\r\n        giveAnswer(indexQuestion, indexAnswer);\r\n\r\n        if (indexQuestion < maxLength - 1) {\r\n            setIndexQuestion(indexQuestion + 1);\r\n        } else {\r\n            onFinish(calculateScore(), stateAnswers.map(answer => answer.indexAnswer));\r\n            resetData();\r\n        }\r\n    }\r\n\r\n    const createGoToPrevQuestion = (indexQuestion) => () => {\r\n        if (indexQuestion > 0) {\r\n            setIndexQuestion(indexQuestion - 1);\r\n        } else {\r\n            onBack();\r\n            resetData();\r\n        }\r\n    }\r\n\r\n    // логика перехода к любому вопросу\r\n    const [lastIndexQuestion, setLastIndexQuestion] = useState(-1);\r\n\r\n    const createGoToQuestionWithoutAnswer = (fromIndexQuestion) => (toIndexQuestion) => {\r\n        setLastIndexQuestion(fromIndexQuestion);\r\n        setIndexQuestion(toIndexQuestion);\r\n    }\r\n\r\n    const goToLastQuestion = () => {\r\n        setIndexQuestion(lastIndexQuestion);\r\n        setLastIndexQuestion(-1);\r\n    }\r\n\r\n    return (\r\n        <View id={id} activePanel={createIdActivePanel(indexQuestion)}>\r\n            {\r\n                arrQuestions.map((question, i, arr) =>(\r\n                    <IteamListQuestion\r\n                        key={i}\r\n                        id={createIdActivePanel(i)}\r\n\r\n                        question={question}\r\n                        numberCurrentQuestion={i+1}\r\n                        countQuestions={arr.length}\r\n\r\n                        stateAnswers={stateAnswers}\r\n                        indexAnswer={stateAnswers[i].indexAnswer}\r\n\r\n                        lastIndexQuestion={lastIndexQuestion}\r\n                        currentIndexQuestion={i}\r\n                        goToLastQuestion={goToLastQuestion}\r\n                        goToQuestionWithoutAnswer={createGoToQuestionWithoutAnswer(i)}\r\n\r\n                        goToNextQuestion={createGoToNextQuestion(i, arr.length)}\r\n                        goToPrevQuestion={createGoToPrevQuestion(i)}\r\n\r\n                        onFinish={() => onFinish(calculateScore())}\r\n                    />\r\n                ))\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ListQuestions;\r\n","function animate({timing, draw, duration}) {\r\n\r\n    let start = performance.now();\r\n  \r\n    requestAnimationFrame(function animate(time) {\r\n      // timeFraction изменяется от 0 до 1\r\n      let timeFraction = (time - start) / duration;\r\n      if (timeFraction > 1) timeFraction = 1;\r\n  \r\n      // вычисление текущего состояния анимации\r\n      let progress = timing(timeFraction);\r\n  \r\n      draw(progress); // отрисовать её\r\n  \r\n      if (timeFraction < 1) {\r\n        requestAnimationFrame(animate);\r\n      }\r\n  \r\n    });\r\n}\r\n\r\nexport default animate;\r\n","function makeEaseOut(timing) {\r\n  return function (timeFraction) {\r\n    return 1 - timing(1 - timeFraction);\r\n  }\r\n}\r\n\r\nconst easeOut = makeEaseOut((timeFraction) => timeFraction);\r\n\r\nexport default easeOut;\r\n","import React from 'react';\r\n\r\nimport './ItemListQuizes.css';\r\n\r\nconst ItemListQuizes = ({ imageSrc, title, onClick, percentProgress }) => {\r\n    let classNamePersentProgress;\r\n\r\n    if (percentProgress === undefined) {\r\n        classNamePersentProgress = undefined;\r\n    }else if (percentProgress > 50) {\r\n        classNamePersentProgress = \"ItemListQuizes__percent_good\";\r\n    } else if (percentProgress > 25) {\r\n        classNamePersentProgress = \"ItemListQuizes__percent_normal\";\r\n    } else {\r\n        classNamePersentProgress = \"ItemListQuizes__percent_bad\";        \r\n    }\r\n\r\n    return (\r\n        <li className=\"ItemListQuizes\">\r\n            <div className=\"ItemListQuizes__image-wrap\">\r\n                <img className=\"ItemListQuizes__image\" src={imageSrc} alt={`ItemListQuizes-${title}`} />\r\n\r\n                <div className=\"ItemListQuizes__percent-wrap\">\r\n                    {\r\n                        classNamePersentProgress && \r\n                        <span className={`ItemListQuizes__percent ${classNamePersentProgress}`}>{percentProgress}%</span>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"ItemListQuizes__row-bottom\">\r\n                <h2 className=\"ItemListQuizes__title\">{title}</h2>\r\n\r\n                <button onClick={onClick} className=\"ItemListQuizes__button-play\">Играть</button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ItemListQuizes;\r\n","import React from 'react';\r\nimport ItemListQuizes from './ItemListQuizes/ItemListQuizes';\r\n\r\nimport \"./ListQuizes.css\";\r\n\r\nconst ListQuizes = ({quizes, createOnClickItemQuizes = (index) => null }) => {\r\n    return (\r\n        <ul className=\"ListQuizes\">\r\n            {\r\n                quizes.map((quiz, i) => (\r\n                    <ItemListQuizes\r\n                        key={i}\r\n                        imageSrc={quiz.imageSrc}\r\n                        title={quiz.title}\r\n                        onClick={createOnClickItemQuizes(i)}\r\n                        percentProgress={quiz.percentProgress}\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ListQuizes;\r\n","import React from \"react\";\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport '../Result.css';\r\n\r\nconst ResultButtons = ({onAgain=()=>{}, onGoToAnswersQuestion=()=>{}}) => {\r\n    const sendToHistory = (image) => {\r\n        console.log(image);\r\n\r\n        bridge.send(\"VKWebAppShowStoryBox\", {\r\n            \"background_type\": \"image\",\r\n            \"url\": \"https://nikita-jpg.github.io\" + image\r\n        });\r\n    }\r\n\r\n    const sendToWall = (image) => {\r\n        window.open(\"https://vk.com/share.php?url=https://nikita-jpg.github.io\" + image);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Result__buttons-container\">\r\n            <button className=\"Result__button Result__button_favorite\">Поддержать</button>\r\n            <button \r\n                onClick={onAgain} \r\n                className=\"Result__button Result__button_refresh\">\r\n                Ещё раз\r\n            </button>\r\n            <button className=\"Result__button Result__button_share\">Поделиться</button>\r\n            <button \r\n                onClick={onGoToAnswersQuestion} \r\n                className=\"Result__button Result__button_format-list-bulleted\">\r\n                К вопросам\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultButtons;\r\n","import { Icon24Back } from \"@vkontakte/icons\";\r\nimport { Panel, PanelHeader, PanelHeaderButton, View } from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./Result.css\";\r\nimport animate from \"../../anime/animate\";\r\nimport easeOut from \"../../anime/easeOut\";\r\nimport ListQuizes from \"../../components/ListQuizes/ListQuizes\";\r\nimport ResultButtons from \"./ResultButtons/ResultButtons\";\r\n\r\nconst Result = ({ id, year, percent, historicalEvent, quizes,\r\n    onBack = () => { }, createOnClickItemQuizes = (index) => null,\r\n    onAgain=()=>{}, onGoToAnswersQuestion=()=>{} }) => {\r\n\r\n    const getClassNameForPercent = (percent) => {\r\n        if (percent <= 39) {\r\n            return \"Result__year-postfix_bad\";\r\n        }\r\n\r\n        if (percent <= 69) {\r\n            return \"Result__year-postfix_normal\";\r\n        }\r\n\r\n        return \"Result__year-postfix_good\";\r\n    }\r\n\r\n    const HEIGHT_HEADER = 60;\r\n    const HEIGHT_YEAR = 76;\r\n    const WIDTH_CHAR_IN_YEAR = 58;\r\n    const WIDTH_PERCENT = 78;\r\n    const WIDTH_YEAR = WIDTH_CHAR_IN_YEAR * year.length;\r\n    const WIDTH_POSTFIX = WIDTH_CHAR_IN_YEAR * String(percent).length;\r\n    const WIDTH_PRETFIX = WIDTH_YEAR - WIDTH_POSTFIX;\r\n    const PADDING_LEFT_AND_RIGHT = 23;\r\n\r\n    const stringPrefix = String(year).replace(String(percent), \"\");\r\n    const widthContent = document.documentElement.clientWidth - PADDING_LEFT_AND_RIGHT * 2;\r\n\r\n    let initialTransitionYearX;\r\n\r\n    if (WIDTH_YEAR + WIDTH_PERCENT > widthContent) {\r\n        initialTransitionYearX = (widthContent - WIDTH_POSTFIX) / 2;\r\n    } else {\r\n        initialTransitionYearX = WIDTH_PRETFIX / 2;\r\n    }\r\n\r\n    const initialStyles = {\r\n        overflowResult: \"hidden\",\r\n        opacityPercent: 1,\r\n        opacityPrefixYear: 0,\r\n        transitionYearY: document.documentElement.clientHeight / 2 - HEIGHT_YEAR / 2 - HEIGHT_HEADER,\r\n        transitionYearX: -initialTransitionYearX,\r\n        opacityHistoricalEvent: 0,\r\n        transitionContentY: document.documentElement.clientHeight / 2 + HEIGHT_YEAR / 2,\r\n        opacityContent: 0\r\n    };\r\n\r\n    const [styles, setStyles] = useState(initialStyles);\r\n\r\n    const stylePercent = {\r\n        opacity: styles.opacityPercent\r\n    }\r\n\r\n    const stylePrefixYear = {\r\n        opacity: styles.opacityPrefixYear\r\n    }\r\n\r\n    const styleYear = {\r\n        transform: `translate(${styles.transitionYearX}px, ${styles.transitionYearY}px)`\r\n    }\r\n\r\n    const styleHistoricalEvent = {\r\n        opacity: styles.opacityHistoricalEvent,\r\n        transform: `translateY(${styles.transitionYearY}px)`\r\n    }\r\n\r\n    const styleContent = {\r\n        opacity: styles.opacityContent,\r\n        transform: `translateY(${styles.transitionContentY}px)`\r\n    }\r\n\r\n    const styleResult = {\r\n        overflow: styles.overflowResult\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => animate({\r\n            timing: easeOut,\r\n\r\n            duration: 3000,\r\n\r\n            draw(progress) {\r\n                const newStyles = { ...styles };\r\n\r\n                const getProgressStyle = (min, max) => (progress - min) / (max - min);\r\n\r\n                let shiftX = Math.min(\r\n                    WIDTH_PERCENT / 2,\r\n                    (document.documentElement.clientWidth - PADDING_LEFT_AND_RIGHT * 2 - WIDTH_YEAR) / 2\r\n                );\r\n\r\n                if (progress < 0.33) {\r\n                    const progressStyles = getProgressStyle(0, 0.33);\r\n\r\n                    let newTransition = (initialStyles.transitionYearX - shiftX) * (1 - progressStyles) + shiftX;\r\n\r\n                    newStyles.opacityPercent = 1 - progressStyles;\r\n                    newStyles.opacityPrefixYear = progressStyles;\r\n                    newStyles.transitionYearX = newTransition;\r\n                } else {\r\n                    newStyles.opacityPrefixYear = 1;\r\n                    newStyles.transitionYearX = shiftX;\r\n                    newStyles.opacityPercent = 0;\r\n                }\r\n\r\n                if (progress >= 0.33 && progress < 0.66) {\r\n                    const progressStyles = getProgressStyle(0.33, 0.66);\r\n\r\n                    newStyles.opacityHistoricalEvent = progressStyles;\r\n                } else if (progress >= 0.66) {\r\n                    newStyles.opacityHistoricalEvent = 1;\r\n                }\r\n\r\n                if (progress >= 0.66 && progress < 1) {\r\n                    const progressStyles = getProgressStyle(0.66, 1);\r\n\r\n                    newStyles.transitionContentY = initialStyles.transitionContentY * (1 - progressStyles);\r\n                    newStyles.transitionYearY = initialStyles.transitionYearY * (1 - progressStyles);\r\n                    newStyles.opacityContent = progressStyles;\r\n                } else if (progress >= 1) {\r\n                    newStyles.transitionContentY = 0;\r\n                    newStyles.transitionYearY = 0;\r\n                    newStyles.opacityContent = 1;\r\n                    newStyles.overflowResult = \"\";\r\n                }\r\n\r\n                setStyles(newStyles);\r\n            }\r\n        }), 1000);\r\n    }, []);\r\n\r\n    return (\r\n        <View id={id} activePanel=\"PANEL_RESULT\">\r\n            <Panel id=\"PANEL_RESULT\">\r\n                <PanelHeader\r\n                    className=\"Result__PanelHeader\"\r\n                    left={\r\n                        <>\r\n                            <PanelHeaderButton onClick={onBack}>\r\n                                <Icon24Back fill=\"white\" />\r\n                            </PanelHeaderButton>\r\n                            <h1 className=\"Result__title\">Результаты</h1>\r\n                        </>\r\n                    }\r\n                    separator={false}\r\n                    visor={false}\r\n                    transparent={false}\r\n                >\r\n                </PanelHeader>\r\n\r\n                <div className=\"Result\" style={styleResult}>\r\n                    <div style={styleYear} className=\"Result__year\">\r\n                        <span style={stylePrefixYear} className=\"Result__year-prefix\">{stringPrefix}</span>\r\n                        <span className={getClassNameForPercent(percent)}>\r\n                            {percent}\r\n                            <span style={stylePercent}>%</span>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div style={styleHistoricalEvent} className=\"Result__historical-event\">{historicalEvent}</div>\r\n\r\n                    <div style={styleContent} className=\"Result__content\">\r\n                        <ResultButtons \r\n                            onAgain={onAgain}\r\n                            onGoToAnswersQuestion={onGoToAnswersQuestion}\r\n                        />\r\n\r\n                        <ListQuizes\r\n                            quizes={quizes}\r\n                            createOnClickItemQuizes={createOnClickItemQuizes}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Result;\r\n","import { Icon24Back } from '@vkontakte/icons';\r\nimport { Panel, PanelHeader, View } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ListQuizes from '../../components/ListQuizes/ListQuizes';\r\n\r\nimport './ViewListQuizes.css';\r\n\r\nconst ViewListQuizes = ({ id, title, quizes, onBack = () => { }, createOnClickItemQuizes = (index) => null }) => {\r\n    const ID_ACTIVE_PANEL = `${id}-0`;\r\n\r\n    return (\r\n        <View id={id} activePanel={ID_ACTIVE_PANEL}>\r\n            <Panel id={ID_ACTIVE_PANEL}>\r\n                <PanelHeader\r\n                    left={\r\n                        <div className=\"ViewListQuizes__header-left\">\r\n                            <Icon24Back onClick={onBack} fill=\"white\" />\r\n                            <h1 className=\"ViewListQuizes__title\">{title}</h1>\r\n                        </div>\r\n                    }\r\n                    className=\"ViewListQuizes__header\"\r\n                    visor={true}\r\n                    transparent={true}\r\n                    separator={false}\r\n                >\r\n                </PanelHeader>\r\n\r\n                <div className=\"ViewListQuizes\">\r\n                    <ListQuizes\r\n                        quizes={quizes}\r\n                        createOnClickItemQuizes={createOnClickItemQuizes}\r\n                    />\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default ViewListQuizes;\r\n","import React, { createRef, useEffect, useState } from 'react';\r\nimport BlackBackground from '../../../components/BlackBackground/BlackBackground';\r\n\r\nimport \"./ItemAnswerQuestion.css\";\r\n\r\nconst ItemAnswerQuestion = ({ id, question, indexRightAnswer, indexUserAnswer }) => {\r\n    const [isFirstRender, setIsFirstRender] = useState(true);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleIsOpen = () => setIsOpen(!isOpen);\r\n\r\n    const getClassNameArrow = (isOpen, indexRightAnswer, indexUserAnswer) => {\r\n        if (isOpen) {\r\n            return \"ItemAnswerQuestion__arrow_open\";\r\n        }\r\n\r\n        if (indexUserAnswer === indexRightAnswer) {\r\n            return \"ItemAnswerQuestion__arrow_good\";\r\n        }\r\n\r\n        return \"ItemAnswerQuestion__arrow_bad\";\r\n    }\r\n\r\n    const getAnswerText = (index) => {\r\n        return `${question.answerOptions[index].text}`;\r\n    }\r\n\r\n\r\n    const [heightWrapContent, setHeightWrapContent] = useState(\"auto\");\r\n\r\n    const refWrapContent = createRef();\r\n\r\n    useEffect(() => {\r\n        setIsFirstRender(false);\r\n        setHeightWrapContent(refWrapContent.current.offsetHeight)\r\n    }, []);\r\n\r\n    const PADDING_ITEM_ANSWER_QUESTION = 16;\r\n\r\n    const getStyleWrapAnswers = (isFirstRender, isOpen) => {\r\n        if (isFirstRender) {\r\n            return {\r\n                position: \"absolute\",\r\n                visibility: \"hidden\",\r\n                width: \"100%\",\r\n                padding: `0 ${PADDING_ITEM_ANSWER_QUESTION}px`,\r\n                boxSizing: \"border-box\"\r\n            }\r\n        }\r\n\r\n        return {\r\n            height: isOpen ? heightWrapContent : 0\r\n        }\r\n    }\r\n\r\n    const styleWrapAnswers = getStyleWrapAnswers(isFirstRender, isOpen);\r\n\r\n    const styleItemAnswerQuestion = {\r\n        padding: `0 ${PADDING_ITEM_ANSWER_QUESTION}px`,\r\n        zIndex: isOpen ?6 :0\r\n    }\r\n\r\n    // логика закрытия по щелчку вне ItemAnswerQuestion\r\n    const handlerClickWithouItemAnswerQuestion = (e) => {\r\n        if (!e.target.closest(`.${id}`)) {\r\n            setIsOpen(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            window.addEventListener(\"click\", handlerClickWithouItemAnswerQuestion);\r\n        } else {\r\n            window.removeEventListener(\"click\", handlerClickWithouItemAnswerQuestion);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener(\"click\", handlerClickWithouItemAnswerQuestion);\r\n        }\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <>\r\n            {isOpen && <BlackBackground />}\r\n\r\n            <div style={styleItemAnswerQuestion} className=\"ItemAnswerQuestion\" id={id}>\r\n                <div\r\n                    onClick={toggleIsOpen}\r\n                    className=\"ItemAnswerQuestion__question-wrap\"\r\n                >\r\n                    <p className=\"ItemAnswerQuestion__question-text\">\r\n                        {isOpen ? question.questionText : question.questionText.substring(0, 20) + \"...\"}\r\n                    </p>\r\n\r\n                    <span\r\n                        className={`ItemAnswerQuestion__arrow ${getClassNameArrow(isOpen, indexRightAnswer, indexUserAnswer)}`}>\r\n                    </span>\r\n                </div>\r\n\r\n                <div ref={refWrapContent} style={styleWrapAnswers} className=\"ItemAnswerQuestion__wrap-answers\">\r\n                    {\r\n                        indexUserAnswer !== indexRightAnswer &&\r\n                        <div className=\"ItemAnswerQuestion__answer\">\r\n                            <div className=\"ItemAnswerQuestion__title-answer-wrap ItemAnswerQuestion__title-answer-wrap_bad\">\r\n                                <h2\r\n                                    className=\"ItemAnswerQuestion__title-answer ItemAnswerQuestion__title-answer_bad\"\r\n                                >Ваш ответ</h2>\r\n                            </div>\r\n\r\n                            <p className=\"ItemAnswerQuestion__text-answer\">\r\n                                {getAnswerText(indexUserAnswer)}\r\n                            </p>\r\n                        </div>\r\n                    }\r\n\r\n                    <div className=\"ItemAnswerQuestion__answer\">\r\n                        <div className=\"ItemAnswerQuestion__title-answer-wrap ItemAnswerQuestion__title-answer-wrap_good\">\r\n                            <h2\r\n                                className=\"ItemAnswerQuestion__title-answer ItemAnswerQuestion__title-answer_good\"\r\n                            >\r\n                                {\r\n                                    indexUserAnswer === indexRightAnswer\r\n                                        ? \"Ваш ответ верен\"\r\n                                        : \"Правильный ответ\"\r\n                                }\r\n                            </h2>\r\n                        </div>\r\n\r\n                        <p className=\"ItemAnswerQuestion__text-answer\">\r\n                            {getAnswerText(indexRightAnswer)}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"ItemAnswerQuestion__answer\">\r\n                        <div className=\"ItemAnswerQuestion__title-answer-wrap ItemAnswerQuestion__title-answer-wrap_normal\">\r\n                            <h2\r\n                                className=\"ItemAnswerQuestion__title-answer ItemAnswerQuestion__title-answer_normal\"\r\n                            >Остальные варианты</h2>\r\n                        </div>\r\n\r\n                        {\r\n                            question.answerOptions.map((answer, i) => {\r\n                                if (i === indexRightAnswer || i === indexUserAnswer) {\r\n                                    return null;\r\n                                }\r\n\r\n                                return (\r\n                                    <p key={i} className=\"ItemAnswerQuestion__text-answer\">\r\n                                        {answer.text}\r\n                                    </p>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemAnswerQuestion;\r\n","import { Icon24Back } from '@vkontakte/icons';\r\nimport { Panel, PanelHeader, PanelHeaderButton, View } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nimport \"./AnswersQuestions.css\";\r\nimport ItemAnswerQuestion from './ItemAnswerQuestion/ItemAnswerQuestion';\r\n\r\nconst AnswersQuestions = ({id, questions, indexesAnswers, onBack=()=>{}}) => {\r\n    return (\r\n        <View id={id} activePanel=\"PANEL_ANSWERS_QUESTIONS\">\r\n            <Panel id=\"PANEL_ANSWERS_QUESTIONS\">\r\n                <PanelHeader\r\n                    left={\r\n                        <>\r\n                            <PanelHeaderButton onClick={onBack}>\r\n                                <Icon24Back fill=\"white\" />\r\n                            </PanelHeaderButton>\r\n                            <h1 className=\"AnswersQuestions__title\">Вопросы</h1>\r\n                        </>\r\n                    }\r\n                    className=\"AnswersQuestions__PanelHeader\"\r\n                    separator={false}\r\n                    transparent={false}\r\n                    visor={false}\r\n                ></PanelHeader>\r\n\r\n                <div className=\"AnswersQuestions\">\r\n                    {\r\n                        questions.map((q, i) => (\r\n                            <ItemAnswerQuestion\r\n                                id={`ItemAnswerQuestion-${i}`}\r\n                                key={i}\r\n                                question={q}\r\n                                indexRightAnswer={questions[i].answerOptions.findIndex(a => a.score === 1)}\r\n                                indexUserAnswer={indexesAnswers[i]}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AnswersQuestions;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport { Root } from '@vkontakte/vkui';\r\n\r\nimport \"./App.css\";\r\nimport StartWindow from './panels/StartWindow/StartWindow';\r\nimport ListAge from './panels/ListAge/ListAge';\r\nimport ListQuestions from './panels/ListQuestions/ListQuestions';\r\nimport Result from './panels/Result/Result';\r\nimport ViewListQuizes from './panels/ViewListQuizes/ViewListQuizes';\r\nimport AnswersQuestions from './panels/AnswersQuestions/AnswersQuestions';\r\n\r\nconst App = ({ eras, results, MAX_SCORE, \r\n\tsavePercentQuiz = (indexAge, indexQuiz, percentProgress) => {}}) => {\r\n\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\tconst enablePopout = () => setPopout(<ScreenSpinner size='large' />);\r\n\tconst disablePopout = () => setPopout(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tdisablePopout();\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\t// логика переключения между View\r\n\tconst VIEW_ID_START_WINDOW = \"VIEW_ID_START_WINDOW\";\r\n\tconst VIEW_ID_LIST_AGE = \"VIEW_ID_LIST_AGE\";\r\n\tconst VIEW_ID_LIST_QUIZES = \"VIEW_ID_LIST_QUIZES\";\r\n\tconst VIEW_ID_LIST_QUESTIONES = \"VIEW_ID_LIST_QUESTIONES\";\r\n\tconst VIEW_ID_RESULT = \"VIEW_ID_RESULT\";\r\n\tconst VIEW_ID_ANSWERS_QUESTIONS = \"VIEW_ID_ANSWERS_QUESTIONS\";\r\n\r\n\tconst [activeView, setActiveView] = useState(VIEW_ID_LIST_QUESTIONES);\r\n\r\n\tconst goToViewStartWindow = () => setActiveView(VIEW_ID_START_WINDOW);\r\n\tconst goToViewListAge = () => setActiveView(VIEW_ID_LIST_AGE);\r\n\tconst goToViewListQuizes = () => setActiveView(VIEW_ID_LIST_QUIZES);\r\n\tconst goToViewListQuestions = () => setActiveView(VIEW_ID_LIST_QUESTIONES);\r\n\tconst goToViewResult = () => setActiveView(VIEW_ID_RESULT);\r\n\tconst goToViewAnswersQuestions = () => setActiveView(VIEW_ID_ANSWERS_QUESTIONS);\r\n\r\n\t// логика хранения индексов\r\n\tconst [indexAge, setIndexAge] = useState(0);\r\n\tconst [indexQuiz, setIndexQuiz] = useState(0);\r\n\tconst [indexResuslt, setIndexResult] = useState(0);\r\n\r\n\t// логика хранения ответов\r\n\tconst [indexesAnswers, setIndexesAnswers] = useState([]);\r\n\r\n\t// функции для StartWindow\r\n\tconst onClickStartWindow = () => {\r\n\t\tgoToViewListAge();\r\n\t}\r\n\r\n\t// функции для ListAge\r\n\tconst createOnClickItemAge = (index) => () => {\r\n\t\tsetIndexAge(index);\r\n\t\tgoToViewListQuizes();\r\n\t}\r\n\r\n\t// функции для ListQuizes\r\n\tconst onBackListQuizes = () => {\r\n\t\tgoToViewListAge();\r\n\t}\r\n\r\n\tconst createOnClickItemQuizes = (index) => () => {\r\n\t\tsetIndexQuiz(index);\r\n\t\tgoToViewListQuestions();\r\n\t}\r\n\r\n\t// функции для ListQuestions\r\n\tconst onBackListQuestions = () => {\r\n\t\tgoToViewListQuizes();\r\n\t}\r\n\r\n\tconst onFinishListQuestions = (totalScore, indexesAnswers) => {\r\n\t\tsetIndexesAnswers(indexesAnswers);\r\n\r\n\t\tconst percent = Math.round(totalScore / MAX_SCORE * 100);\r\n\t\tsavePercentQuiz(indexAge, indexQuiz, percent);\r\n\t\tsetIndexResult(results.findIndex(res => res.percent === percent));\r\n\t\tgoToViewResult();\r\n\t}\r\n\r\n\t// функции для Result\r\n\tconst onBackResult = () => {\r\n\t\tgoToViewListQuizes();\r\n\t}\r\n\r\n\tconst onAgainResult = () => {\r\n\t\tgoToViewListQuestions();\r\n\t}\r\n\t\r\n\tconst onGoToAnswersQuestionResult = () => {\r\n\t\tgoToViewAnswersQuestions()\r\n\t}\r\n\r\n\t// функции для AnswersQuestions\r\n\tconst onBackAnswersQuestions = () => {\r\n\t\tgoToViewResult();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Root activeView={activeView}>\r\n\t\t\t<StartWindow \r\n\t\t\t\tid={VIEW_ID_START_WINDOW} \r\n\t\t\t\tonClick={onClickStartWindow}\r\n\t\t\t/>\r\n\r\n\t\t\t<ListAge \r\n\t\t\t\tid={VIEW_ID_LIST_AGE} \r\n\t\t\t\teras={eras} \r\n\t\t\t\tcreateOnClickItemAge={createOnClickItemAge}\r\n\t\t\t/>\r\n\r\n\t\t\t<ViewListQuizes \r\n\t\t\t\tid={VIEW_ID_LIST_QUIZES} \r\n\t\t\t\ttitle={eras[indexAge].shortTitle} \r\n\t\t\t\tquizes={eras[indexAge].quizzes} \r\n\t\t\t\tonBack={onBackListQuizes} \r\n\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\t\t\t/>\r\n\r\n\t\t\t<ListQuestions \r\n\t\t\t\tid={VIEW_ID_LIST_QUESTIONES}\r\n\t\t\t\tarrQuestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\tonBack={onBackListQuestions}\r\n\t\t\t\tonFinish={onFinishListQuestions}\r\n\t\t\t/>\r\n\r\n\t\t\t<Result\r\n\t\t\t\tid={VIEW_ID_RESULT}\r\n\t\t\t\tpercent={results[indexResuslt].percent}\r\n\t\t\t\tyear={results[indexResuslt].year}\r\n\t\t\t\thistoricalEvent={results[indexResuslt].historicalEvent}\r\n\t\t\t\tquizes={eras[indexAge].quizzes.filter(quiz => quiz.percentProgress !== 100)}\r\n\t\t\t\tonBack={onBackResult}\r\n\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\t\t\t\tonAgain={onAgainResult}\r\n\t\t\t\tonGoToAnswersQuestion={onGoToAnswersQuestionResult}\r\n\t\t\t/>\r\n\r\n\t\t\t<AnswersQuestions\r\n\t\t\t\tid={VIEW_ID_ANSWERS_QUESTIONS}\r\n\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\tonBack={onBackAnswersQuestions}\r\n\t\t\t/>\r\n\t\t</Root>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import imagePetr1 from \"../../img/ageRussianEmpire/quizPetr1/petr.png\";\r\n\r\nimport imgExample from \"../../img/ageRussianEmpire/quizPetr1/Картинка.png\";\r\n\r\nconst quizPetr1 = {\r\n    title: \"Император Пётр I\",\r\n    imageSrc: imagePetr1,\r\n    questions: [\r\n        {\r\n            questionImg: imgExample,\r\n            overSideImg: imgExample,\r\n            questionText: \"Основная причина дефолта 98-го года?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Лопнул пузырь ГКО (Государственные краткосрочные облигации)\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Отказ западных партнёров выдать кредит\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Решение о срочном запуске печатного станка в “ускоренном режиме\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            questionImg: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 2\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            questionImg: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 3\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            questionImg: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 4\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default quizPetr1;\r\n","import imageTheEraOfPalaceCoups from \"../../img/ageRussianEmpire/The era of palace coups/The era of palace coups.png\";\r\n\r\nconst quizTheEraOfPalaceCoups = {\r\n    title: \"Эпоха Дворцовых переворотов\",\r\n    imageSrc: imageTheEraOfPalaceCoups,\r\n    questions: []\r\n}\r\n\r\nexport default quizTheEraOfPalaceCoups;\r\n","import ageRussianEmpire from \"./ageRussianEmpire/ageRussianEmpire\";\r\n\r\nimport results from \"./results/results\";\r\n\r\nconst store = {\r\n    eras: [\r\n        ageRussianEmpire\r\n    ],\r\n\r\n    results,\r\n\r\n    MAX_SCORE: 8\r\n}\r\n\r\nexport default store;\r\n\r\nconst calculatePercentAge = (era) => {\r\n    const numberOfPassedQuizes = era.quizzes.reduce((sum, quiz) => {\r\n        return quiz.percentProgress !== undefined ?sum + 1 :sum\r\n    }, 0);\r\n\r\n    return Math.round(numberOfPassedQuizes / era.length * 100);\r\n}\r\n\r\nexport const savePercentQuiz = (indexAge, indexQuiz, percentProgress) => {\r\n    store.eras = store.eras.map((era, i) => {\r\n        if (i !== indexAge) {\r\n            return era;\r\n        }\r\n\r\n        if (era.quizzes[indexQuiz].percentProgress === undefined) {\r\n            era.quizzes[indexQuiz].percentProgress = percentProgress;\r\n        } else {\r\n            era.quizzes[indexQuiz].percentProgress = Math.max(percentProgress, era.quizzes[indexQuiz].percentProgress);\r\n        }\r\n\r\n        era.percentProgress = calculatePercentAge(era);\r\n\r\n        return {...era};\r\n    })\r\n}\r\n","import mainImage from \"../../img/ageRussianEmpire/main.png\";\r\nimport quizPetr1 from \"./quizPetr1\";\r\nimport quizTheEraOfPalaceCoups from \"./quizTheEraOfPalaceCoups\";\r\n\r\nconst ageRussianEmpire = {\r\n    title: \"Российская империя\",\r\n    shortTitle: \"Рос. империя\",\r\n    imageSrc: mainImage,\r\n    percentProgress: 0,\r\n    quizzes: [\r\n        quizPetr1,\r\n        quizTheEraOfPalaceCoups\r\n    ]\r\n}\r\n\r\nexport default ageRussianEmpire;\r\n","const results = [\r\n    {\r\n        percent: 0,\r\n        year: \"1700\",\r\n        historicalEvent: \"Начало Северной войны со Швецией\"\r\n    },\r\n    {\r\n        percent: 13,\r\n        year: \"1013\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 25,\r\n        year: \"1025\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 38,\r\n        year: \"1038\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 50,\r\n        year: \"1050\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 63,\r\n        year: \"1063\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 75,\r\n        year: \"1075\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 88,\r\n        year: \"1088\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 100,\r\n        year: \"1100\",\r\n        historicalEvent: \"в Витичеве прошёл 2-й съезд князей Киевской Рус\"\r\n    }\r\n]\r\n\r\nexport default results;\r\n","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\nimport store, { savePercentQuiz } from \"./store/store.js\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(\r\n    <App {...store} savePercentQuiz={savePercentQuiz}/>, \r\n    document.getElementById(\"root\")\r\n);\r\n\r\nimport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/Картинка.f17bd5e3.png\";"],"sourceRoot":""}