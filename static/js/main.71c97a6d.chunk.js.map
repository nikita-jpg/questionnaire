{"version":3,"sources":["img/ageRussianEmpire/The era of palace coups/The era of palace coups.png","img/ageRF/ageRF.jpg","img/ageRF/Zero/Zero.jpg","img/ageRF/Zero/img1.jpg","img/ageRF/Zero/img2.jpg","img/ageRF/Zero/img3.jpg","img/ageRF/Zero/img4.jpg","img/ageRF/Zero/img5.jpg","img/ageRF/Zero/img6.jpg","img/ageRF/Zero/img7.jpg","img/ageRF/Zero/img8.jpg","NotUI/Server/server.js","svg sync /.svg$","svg/arrow.svg","img/ageRussianEmpire/main.png","components/ButtonWrapper/ButtonWrapper.js","Additional/selectors.js","components/Header/Header.js","components/PanelWrapper/PanelWrapper.js","views/StartWindow/StartWindow.js","components/CardWrapper/CardWrapperDescription/CardWrapperDescription.js","components/CardWrapper/CardWrapper.js","components/ListCard/ListCard.js","Selectors/data_selectors.js","views/ListAge/ListAge.js","components/AlertQuestionResult/AlertQuestionResult.js","components/CustomTooltip/CustomTooltip.js","anime/easeOut.js","views/Result/PanelAnswersQuestions/ItemAnswerQuestion/ItemAnswerQuestion.js","views/Result/PanelAnswersQuestions/PanelAnswersQuestions.js","views/Result/ResultButtons/ResultButtons.js","views/Result/ResultCards/ResultCards.js","views/Result/PanelResult/PanelResult.js","views/Result/Result.js","views/ListQuestions/IteamListQuestion/ImageCard/ImageCard.js","views/ListQuestions/IteamListQuestion/IteamListQuestion.js","components/ModalPageHead/ModalPageHead.js","help.js","components/AlertWrapper/AlertWrapper.js","views/ListQuestions/ModalPageForListQuestions/ModalPageForListQuestions.js","NotUI/Data/consts.js","components/LoadingPanel/LoadingPanel.js","views/ListQuestions/ListQuestions.js","views/ListQuizes/ListQuizes.js","views/SpinnerView/SpinnerView.js","App/Constants.js","App/Actions.js","NotUI/Data/actions.js","views/PoolView/actions.js","views/PoolView/consts.js","Selectors/app_selectors.js","Selectors/pollView_selectors.js","views/PoolView/PoolView.js","App/App.js","store/ageRussianEmpire/quizPetr1.js","store/ageRussianEmpire/ageRussianEmpire.js","store/ageRussianEmpire/quizTheEraOfPalaceCoups.js","store/ageRF/MMM.js","store/ageRF/Privatization.js","store/ageRF/TheChechenWar.js","store/ageRF/TheWhiteHouse.js","store/ageRF/Yeltsin.js","store/store.js","store/ageRF/Zero.js","store/ageRF/ageRF.js","store/results/results.js","App/initialState.js","NotUI/Data/initialState.js","Additional/initialState.js","views/ListQuestions/initialState.js","views/PoolView/initialState.js","comboReducer.js","App/Redusers.js","views/ListQuestions/reducer.js","views/ListQuestions/consts.js","views/PoolView/reducer.js","NotUI/Data/reducers.js","Additional/reducer.js","Additional/consts.js","index.js","img/ageRussianEmpire/Petr1/img1.png","svg/imgLoader.svg","img/ageRF/MMM/MMM.jpg","img/ageRF/Privatization/Privatization.jpg","img/ageRF/TheChechenWar/TheChechenWar.jpg","img/ageRF/TheWhiteHouse/TheWhiteHouse.jpg","img/ageRF/Yeltsin/Yeltsin.jpg","img/ageRussianEmpire/Petr1/Petr1.png","svg/book.svg"],"names":["module","exports","http","axios","create","headers","Authorization","window","location","search","slice","reqSvgs","require","downloadData","a","console","log","get","then","data","catch","err","downloadDefaultIMG","paths","keys","i","length","downloadImgFromFolder","path","img","Image","src","onerror","onload","downloadImagesArr","arr","downloadImageFromServer","imageData","imageName","responseType","response","Buffer","from","toString","image","sendUserAnswersToServer","userAnswers","post","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","Object","resolve","ButtonWrapper","isActived","text","onClick","before","className","classNameText","isCentered","hasActive","style","isLinkForm","activeEffectDelay","mode","centered","getCurWidth","state","Additional","curWidth","PLATFORM_MARGIN_LEFT","usePlatform","Platform","IOS","getTitle","icon","hasLeftBtn","click","LEFT_BTN_WIDTH","textWidth","context","document","createElement","getContext","font","measureText","width","getTextWidth","marginLeft","maxWidth","paddingLeft","childMargin","speed","direction","delay","textAlign","Header","left","leftClick","onBack","onClose","isFixed","cursor","fixed","separator","visor","PanelWrapper","name","children","isOneColumn","isVerticalCentre","isHeaderHide","isHeaderFixed","onHeaderClose","onHeaderBack","headerIcon","headerText","headerClick","useState","setCurWidth","curHeight","setCurHeight","useEffect","getElementById","scrollWidth","scrollHeight","minHeight","minWidth","justifyContent","StartWindow","goToPollView","dispath","useDispatch","height","book","CardWrapperDescription","textBtn","btnCardClickObj","isBtnNeed","stopPropagation","func","CardWrapper","title","percentProgress","numberOfQuestions","description","cardClick","defaultImage","setImage","downloadImage","caption","header","ListCard","info","index","btnCardClick","useSelector","colNumber","record","key","russianName","getCurEraId","Data","CurEraId","getCurSurveyId","CurSurveyId","getCurQuestionId","CurQuestionId","getAnswerOptionsById","idQuestion","AnswerOptions","filter","answerOption","getUserAnswer","userAnswer","UserAnswers","undefined","getCurEra","curEraId","getEras","era","idEra","getCurSurveys","Surveys","survey","getCurQuestion","curQuestionId","Questions","question","getCurQuestions","curSurveyId","idSurvey","getCurAnswerOptions","getCurUserAnswer","curUserAnswer","isAnswerOptionTrue","idAnswerOption","getAnswerOptionById","score","isQuestionTrue","getResultCurSurvey","curQuestions","total","getResultSurveyById","questions","getQuestionsById","getResultCurSurveys","curSurveys","ret","surveyResult","push","getResultsEras","eras","eraResult","surveys","getSurveysById","Eras","ListAge","createOnClickItemAge","eraResults","AlertQuestionResult","answerOptions","curQuestion","rightAnswer","isWin","userAnswerText","actionsLayout","actions","autoclose","textQuestion","useStyles","makeStyles","tooltip","backgroundColor","color","fontSize","border","arrow","CustomTooltip","defaultIsShown","classes","isVisible","setIsVisible","open","useCallback","close","ClickAwayListener","onClickAway","Tooltip","disableFocusListener","disableHoverListener","timing","timeFraction","ItemAnswerQuestion","questionTitle","rightAnswerText","arrOptioAnswersWithoutRight","openAlert","PanelAnswersQuestions","display","indexQuestion","ResultButtons","onAgain","goToPanelAnswers","size","makeUsedData","makeCard","isFirstOpenResult","makeStepAnimDealyForCard","animationDelay","imageSrc","ResultCards","isCompletedSurvey","curSurveysResult","curEraIndex","curSurveyIndex","erasResult","goToQuiz","setIndexSurvey","goToSurveyView","surveysFilterResultArr","surveysResult","curSurveyID","curSurvey","getCardsFromSurveysFilter","indexSurvey","eraFilterResult","curEraID","isCompletedQuiz","goToEras","retrunMessage","returnButtons","isHasNotFinishedEras","button","getCardsFromEraFilter","PanelResult","isNeedAnim","adDate","isAdVisible","setAdVisible","totalResult","setTotal","setEras","setErasResult","setSurveys","surveysCurResult","setSurveysCurResult","setCurEraIndex","setCurSurveyIndex","surveysModified","curEraIndexModified","curSurveyIndexModified","erasModified","erasResultModified","surveysCurResultModified","curAnimDealyForCard","getClassNameForPercent","onGoToAnswersQuestion","bannerData","Result","indexesAnswers","titleAge","percent","quizes","setIsFirstOpenResult","indexQuiz","createOnClickItemQuizes","goToViewListAndQuizes","goToSurveyViewAction","goToPollViewAction","setIndexEra","setCurSurveyIdAction","setCurQuestionIdAction","dispatch","setIsNeedAnim","activePanel","setActivePanel","history","setHistory","goBackInHistory","his","pop","bridge","send","goForwardInHistory","panelId","domain","trackingLink","ctaText","advertisingLabel","iconLink","ageRestrictions","statistics","url","type","isVisibleAlert","setIsVisibleAlert","popout","onSwipeBack","ImageCard","sourceImageLink","isImgInfoOpen","setisImgInfoOpen","CSSTransition","in","timeout","classNames","onEnter","onExited","href","target","IteamListQuestion","platform","countQuestions","isModalOpen","goToPrevQuestion","goToNextQuestion","giveAnswer","changeModal","transform","transition","weight","answer","ModalPageHead","isDesktop","useAdaptivity","viewWidth","ViewWidth","SMALL_TABLET","right","AlertWrapper","leftText","leftFunc","rightText","rightFunc","action","ModalPageForListQuestions","arrQuestions","goToCurrentQuestion","finishSurvey","settlingHeight","LoadingPanel","points","stroke-width","fill","x","y","viewBox","xmlns","d","class","ListQuestions","goToLoadingViewAction","goToViewListQuestionsAction","goToResultViewAction","goToListSurveyAction","saveUserAnswersAction","imageArr","res","setUserAnswers","userAnswersFinishValidator","setUserAnswersFinishValidator","isAnswerBe","newUserAnswers","assign","idAnswer","getPrepareDataToSend","userAnswersForState","openCloseListQuestionsAleret","checkIndex","changeHistory","openFinishAlert","finishSurveyWithOutCheck","nextIndex","vkBridge","setModalOpen","modal","activeModal","alert","setAlert","ListQuizes","createOnClickItemQuizesBtn","SpinnerView","VIEW_ID_START_WINDOW","VIEW_ID_LIST_AGE_AND_QUIZES","VIEW_ID_LIST_QUESTIONES","VIEW_ID_RESULT","VIEW_ID_ANSWERS_QUESTIONS","VIEW_ID_SPINNER","App_goToLoadingtView","viewsConsts","App_goToPollView","App_goToSurveyView","App_goToResultView","Data_setIndexEra","indexEra","Data_setIndexSurvey","Data_setIndexQuestion","Data_saveUserAnswers","PoolView_goToListAge","PoolView_goToListSurvey","selectCurrentView","App","currentView","getFirstPanel","PoolView","firstPanel","setIndexEraAction","setIndexSurveyAction","goToListAgeAction","mustCurrentPanel","erasResults","tottal","view","results","MAX_SCORE","savePercentQuiz","setActiveView","goToViewResult","indexAge","setIndexResult","setIndexesAnswers","subset","server","erasImages","surveysImages","UserData","isFirstOpen","appNavigate","activeView","isWebView","animate","viewsId","poolView","onFinish","sum","goToViewListQuestions","quizPetr1","isImageDownloaded","imagePetr1","imgExample","overSideImg","questionText","ageRussianEmpire","imageTheEraOfPalaceCoups","shortTitle","mainImage","quizzes","quizMMM","imgMain","img1","store","img2","img3","img4","img5","img6","img7","img8","MMM","year","historicalEvent","initialState","comboReducer","combineReducers","viewConst","ListSurvey","userAnswersState","ANDROID","error","createStore","ReactDOM","render","Math","max","numberOfPassedQuizes","reduce","quiz","round","calculatePercentAge","default"],"mappings":"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","file":"static/js/main.71c97a6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/The era of palace coups.42e7310b.png\";","module.exports = __webpack_public_path__ + \"static/media/ageRF.c735400b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zero.8be729eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img1.350153d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.054fb62f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.a4c2df90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.483d9695.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img5.a03adca7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img6.44981534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img7.df89f5eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img8.6927082b.jpg\";","\r\nimport axios from 'axios';\r\n\r\n//Для запросов на сервер\r\nconst http = axios.create({\r\n    headers: {\r\n        // Прикрепляем заголовок, отвечающий за параметры запуска.\r\n        Authorization: `${window.location.search.slice(1)}`\r\n    }\r\n});\r\n\r\nconst reqSvgs = require.context( '../../svg', true, /\\.svg$/ )\r\n\r\n\r\n// //Загрузка перед входом в основное окно приложения\r\n// export async function firstDownload(){\t\r\n//     // await downloadDefaultIMG();\r\n//     const data = await downloadData();\r\n//     // await downloadImagesArr(data.eras);\r\n//     return data\r\n// }\r\n\r\n//Загрузка isFirstOpen и eras\r\nexport async function  downloadData(){\r\n    console.log(\"data download started\")\r\n    let data = await http.get(\"http://127.0.0.1:18301/\")\r\n    .then(data=>{return data.data})\r\n    .catch(err => console.log(err + \" error\"))\r\n    console.log(data)\r\n\r\n    //Переименовываемым эти ключи, так как оба они указывают на подмножеста, и ListCard обращается к свойству subset\r\n    // let stringData = JSON.stringify(data)\r\n    // stringData = stringData.replaceAll('\"surveys\":', '\"subset\":')\r\n    // stringData = stringData.replaceAll('\"questions\":', '\"subset\":')\r\n    // data = JSON.parse(stringData)\r\n\r\n    return data;\r\n}\r\n\r\n// Загрузка изображений, которы должны быть в кэше до запуска\r\nexport async function downloadDefaultIMG(){\r\n    const paths = reqSvgs.keys();\r\n    for(let i=0;i<paths.length;i++){\r\n        await downloadImgFromFolder(paths[i])\r\n    }\r\n}\r\n\r\nexport async function downloadImgFromFolder(path){\r\n    let img = new Image();\r\n    img.src = reqSvgs(path);\r\n\r\n    img.onerror = () => {\r\n        console.log(img.src + \" error\")\r\n    }\r\n    img.onload = () => {\r\n        window[img.src] = img\r\n        return\r\n    }\r\n}\r\n\r\nexport async function downloadImagesArr(arr){\r\n    for(let i=0;i<arr.length;i++){\r\n        await downloadImageFromServer(arr[i]).then(imageData=>{\r\n            let img = new Image();\r\n            // img.src = imageData;\r\n            img.src = imageData\r\n\r\n            img.onerror = () => {\r\n                console.log(img.src + \" error\")\r\n            }\r\n            img.onload = () => {\r\n                window[img.src] = img\r\n                return\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Загрузка изображений с сервера\r\nexport async function downloadImageFromServer(imageName){\r\n    // const image = await http.get(\"http://127.0.0.1:18301/getImage?imageName=\" + imageName,{\r\n    const image = await http.get(\"http://127.0.0.1:18301/getImage?imageName=\" + imageName,{\r\n        responseType: 'arraybuffer'\r\n    }).then(response => Buffer.from(response.data, 'binary').toString('base64'))\r\n    \r\n    return `data:image/jpeg;base64,${image}`;\r\n}\r\n\r\n// Отправка ответа на сервер\r\nexport async function sendUserAnswersToServer(userAnswers){\r\n    const data = await http.post(\"http://127.0.0.1:18301/giveAnswers\",{\r\n        userAnswers:userAnswers\r\n    }).then(data=>{return data.data})\r\n\r\n    return data\r\n}","var map = {\n\t\"./arrow.svg\": 353,\n\t\"./book.svg\": 99,\n\t\"./imgLoader.svg\": 63\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 352;","module.exports = __webpack_public_path__ + \"static/media/arrow.0f81b459.svg\";","module.exports = __webpack_public_path__ + \"static/media/main.96699d6f.png\";","import { CellButton } from \"@vkontakte/vkui\"\r\nimport React from \"react\"\r\n\r\nimport './ButtonWrapper.css'  \r\n\r\nconst ButtonWrapper = ({isActived, text, onClick=()=>{}, before, className, classNameText, isCentered, hasActive, style, isLinkForm}) => {\r\n\r\n\r\n    if(isLinkForm){\r\n        return(\r\n            <div className=\"ButtonWrapper__text_linkForm\" style={style} onClick={onClick}>{text}</div>\r\n        )\r\n    }\r\n    return(\r\n        <CellButton \r\n            activeEffectDelay={0}\r\n            onClick={onClick} \r\n            mode=\"secondary\"\r\n            centered={isCentered} \r\n            before={before}\r\n            hasActive={hasActive}\r\n            className={`ButtonWrapper ${isActived && \"ButtonWrapper_active\"} ${className}`}\r\n            style={style}\r\n\r\n        >\r\n            <div className={`ButtonWrapper__text ${classNameText}`}>\r\n                {text}\r\n            </div>\r\n        </CellButton>\r\n    )\r\n}\r\n\r\nexport default ButtonWrapper","export const getCurWidth = (state) => state.Additional.curWidth\r\nexport const getCurHeight = (state) => state.Additional.curHeight","import { Icon28CancelOutline } from '@vkontakte/icons';\r\nimport { Div, PanelHeader, PanelHeaderBack, PanelHeaderClose, PanelHeaderContent, platform, Platform, usePlatform  } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport Marquee from 'react-double-marquee';\r\nimport { useSelector } from 'react-redux';\r\n// import { isTitleCentre } from '../../help';\r\nimport './Header.css'\r\n\r\nimport { getCurWidth } from \"../../Additional/selectors\";\r\n\r\nconst WIDTH_HEAD_TEXT_CENTERED = 380;\r\nconst RIGHT_STUB_WIDTH = 95;\r\n// const ANDROID_MARGIN_LEFT = \"16px\";\r\n// const IOS_MARGIN_LEFT = \"12px\";\r\nconst PLATFORM_MARGIN_LEFT = usePlatform !== Platform.IOS ? 16 : 12\r\n\r\n\r\nconst getTextWidth = (text) => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n  \r\n    context.font = '20px Lato';\r\n  \r\n    return context.measureText(text).width + 25;\r\n  }\r\n  \r\nconst getTitle = (text, icon, curWidth, hasLeftBtn, click) => {\r\n\r\n    const LEFT_BTN_WIDTH = hasLeftBtn ? 42 : PLATFORM_MARGIN_LEFT;\r\n\r\n    let textWidth = getTextWidth(text);\r\n    let marginLeft = 0\r\n    // console.log(curWidth)\r\n\r\n    //Если можем зацентрить текст\r\n    if( (curWidth - textWidth)/2 > RIGHT_STUB_WIDTH )\r\n    {\r\n        marginLeft = hasLeftBtn ? (RIGHT_STUB_WIDTH - LEFT_BTN_WIDTH) : RIGHT_STUB_WIDTH;\r\n        marginLeft+=\"px\"\r\n\r\n        return(\r\n            <div onClick={click} style={{width:\"100%\", maxWidth:\"100%\", paddingLeft:marginLeft}}>\r\n                <div className=\"Header__title\">\r\n                    {text}\r\n                    {icon}\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    }else{\r\n        marginLeft = hasLeftBtn ? 0 : PLATFORM_MARGIN_LEFT;\r\n        let maxWidth = curWidth - RIGHT_STUB_WIDTH - LEFT_BTN_WIDTH - 8;\r\n\r\n        //Если текст не влезает\r\n        if(textWidth > maxWidth)\r\n        {\r\n            return(\r\n                <div onClick={click} style={{width:\"100%\", paddingLeft:marginLeft}}>\r\n                    <div className=\"Header__title\" style={{maxWidth:maxWidth}}>\r\n                        <Marquee childMargin=\"20\" speed=\"0.08\" direction=\"left\" delay=\"600\">\r\n                            {text}\r\n                            {icon}\r\n                        </Marquee>\r\n                    </div>\r\n                </div>\r\n            ) \r\n        }else{\r\n            return(\r\n                <div onClick={click} style={{maxWidth:\"100%\", paddingLeft:marginLeft}}>\r\n                    <div className=\"Header__title\" style={{maxWidth:maxWidth, textAlign:\"start\"}}>\r\n                        {text}\r\n                        {icon}\r\n                    </div>\r\n                </div>\r\n            ) \r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst Header = ({onBack, curWidth, onClose, isFixed, text, icon, click}) => {\r\n    // const curWidth = useSelector(getCurWidth)\r\n\r\n    let left;\r\n    let cursor = \"inherit\";\r\n    let fixed = \"true\";\r\n    let leftClick;\r\n\r\n    if (onClose) {\r\n        left = <PanelHeaderClose className=\"Header__button\" >\r\n            <Icon28CancelOutline></Icon28CancelOutline>\r\n        </PanelHeaderClose>\r\n        leftClick = onClose\r\n    }\r\n    else if (onBack){\r\n        left = <PanelHeaderBack className=\"Header__button\" ></PanelHeaderBack>\r\n        leftClick = onBack\r\n    }\r\n\r\n    if(click){\r\n        cursor=\"pointer\"\r\n    }\r\n\r\n    if(!isFixed){\r\n        fixed = false;\r\n    }\r\n\r\n    return(\r\n        <PanelHeader                     \r\n            separator={false}\r\n            visor={true}\r\n            fixed={fixed}\r\n            >\r\n\r\n            <div className=\"Header__inside\" style={{cursor:cursor}}>\r\n                {left && <div className=\"Header__leftBtn\" onClick={leftClick}>{left}</div>}\r\n                {getTitle(text,icon,curWidth, left, click)}\r\n                <div className=\"Header__rightStub\" onClick={click}></div>\r\n            </div>\r\n\r\n        </PanelHeader>\r\n    )\r\n}\r\n\r\nexport default Header","import { Div, Panel } from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurHeight, getCurWidth } from \"../../Additional/selectors\";\r\nimport Header from \"../Header/Header\";\r\n\r\nimport './PanelWrapper.css'\r\n\r\nconst PanelWrapper = ({id, name, children, isOneColumn, isVerticalCentre,\r\n    isHeaderHide, isHeaderFixed, onHeaderClose, onHeaderBack, \r\n    headerIcon, headerText, headerClick}) => {\r\n\r\n    const [curWidth,setCurWidth] = useState(0);\r\n    const [curHeight, setCurHeight] = useState(0);\r\n    useEffect(()=>{\r\n        setCurWidth(document.getElementById('root').scrollWidth)\r\n        setCurHeight(document.getElementById('root').scrollHeight)\r\n    })\r\n\r\n    // const curWidth = useSelector(getCurWidth)\r\n    // const curHeight = useSelector(getCurHeight)\r\n\r\n    return(\r\n\r\n        <Panel id={id} separator={false} name={name}>\r\n\r\n            <div className=\"PanelWrapper\" style={{minHeight:curHeight,minWidth:curWidth, \r\n                justifyContent:isVerticalCentre?\"center\":\"start\"}}>\r\n                {\r\n                    !isHeaderHide &&\r\n                    <Header\r\n                    text={headerText}\r\n                    icon={headerIcon}\r\n                    isFixed={isHeaderFixed}\r\n                    onClose={onHeaderClose}\r\n                    onBack={onHeaderBack}\r\n                    click={headerClick}\r\n                    curWidth={curWidth}\r\n                ></Header>\r\n                }\r\n\r\n                <Div className=\"PanelWrapper__container\"style={{maxWidth:isOneColumn?\"var(--main-max-oneСolumnPanelWrapperMode-width)\":\"var(--main-max-panelWrapper-width)\"}}>\r\n                    {children}\r\n                </Div>\r\n\r\n            </div>\r\n\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default PanelWrapper","import { Card, CardScroll, Panel, PanelHeader, View, CardGrid, ContentCard, Button, ScreenSpinner, usePlatform, Platform} from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ButtonWrapper from '../../components/ButtonWrapper/ButtonWrapper';\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\n\r\n\r\nimport book from '../../svg/book.svg';\r\n\r\nimport './StartWindow.css';\r\n\r\n\r\nconst StartWindow = ({id, goToPollView=()=>{}}) => {\r\n\r\n    const dispath = useDispatch()\r\n    \r\n    return (\r\n        <View id={id}> \r\n            <PanelWrapper separator={false} isHeaderHide={true} isVerticalCentre={true}>\r\n                <div className=\"StartWindow\">\r\n                    <div className=\"StartWindow__container\">\r\n                        <img width=\"50\" height=\"50\" src={book}/>\r\n                        <h1 className=\"StartWindow__title\">Привет, друг!</h1>\r\n                        <p className=\"StartWindow__text\">\r\n                            Это приложение поможет тебе проверить свои знания в области истори родной страны. Удачи!\r\n                        </p>\r\n                        <ButtonWrapper className=\"StartWindow__button\" classNameText=\"StartWindow__button-text\" isCentered={true} onClick={()=>dispath(goToPollView())} text=\"Поехали!\"></ButtonWrapper>\r\n                    </div>\r\n                </div>\r\n            </PanelWrapper>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default StartWindow;","import { Button } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ButtonWrapper from '../../ButtonWrapper/ButtonWrapper';\r\nimport './CardWrapperDescription.css'\r\n\r\nconst CardWrapperDescription = ({text, textBtn, btnCardClickObj={}}) => {\r\n\r\n    const click = (e) => {\r\n        e.stopPropagation()\r\n        btnCardClickObj.func();\r\n    }\r\n    \r\n    return(\r\n        <div className=\"CardWrapperDescription\">\r\n\r\n            <div className=\"CardWrapperDescription__text\">{text}</div>\r\n\r\n            {\r\n            btnCardClickObj.isBtnNeed ?\r\n                <div className=\"CardWrapperDescription__button_Container\">\r\n                    <ButtonWrapper\r\n                        text={textBtn}\r\n                        className=\"CardWrapperDescription__button\"\r\n                        classNameText=\"CardWrapperDescription__button_text\"\r\n                        isCentered={true}\r\n                        onClick={click}\r\n                    ></ButtonWrapper>\r\n                </div>\r\n                :null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardWrapperDescription\r\n","import { Button, ContentCard } from \"@vkontakte/vkui\"\r\nimport React, { useState } from 'react';\r\nimport './CardWrapper.css';\r\nimport defaultImage from '../../svg/imgLoader.svg'\r\nimport {downloadImageFromServer as downloadImage} from '../../NotUI/Server/server'\r\nimport CardWrapperDescription from \"./CardWrapperDescription/CardWrapperDescription\";\r\n\r\nconst CardWrapper = ({title, textBtn, percentProgress,numberOfQuestions,imageName,description,btnCardClickObj,\r\n    cardClick=()=>{},\r\n    }) => {\r\n\r\n\r\n    //Устанавливаем дефолтую картинку на карточки\r\n    const [image, setImage] = useState(defaultImage)\r\n\r\n    //Загружаем основную картинку\r\n    downloadImage(imageName).then(imageData=>{setImage(imageData)})\r\n\r\n    const down = () =>{\r\n        return(\r\n        <div style={{width:\"200px\",height:\"200px\"}}>\r\n            {description}\r\n            <Button></Button>\r\n        </div>\r\n    )}\r\n\r\n    const caption = (\r\n        <CardWrapperDescription\r\n            btnCardClickObj={btnCardClickObj}\r\n            text={description}\r\n            textBtn={textBtn}\r\n        ></CardWrapperDescription>\r\n    )\r\n\r\n    return(\r\n    <ContentCard\r\n        header={\r\n            <div className=\"CardWrapper__title\">\r\n                <div>{title}</div>\r\n                <div>{percentProgress}/{numberOfQuestions}</div>\r\n            </div>\r\n        }\r\n        mode={\"tint\"}\r\n        onClick={cardClick}\r\n        image={image}\r\n        caption={caption}\r\n        className=\"CardWrapper__Card\"\r\n    >\r\n        </ContentCard>\r\n)}\r\n\r\nexport default CardWrapper","import { ContentCard, Div } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getCurWidth } from '../../Additional/selectors';\r\nimport CardWrapper from '../CardWrapper/CardWrapper';\r\nimport './ListCard.css';\r\n\r\nconst ListCard = ( { info,percentProgress,numberOfQuestions, \r\n    cardClick = (index) => null, \r\n    btnCardClick = (index) => null,\r\n    }) => {\r\n        \r\n\r\n    const curWidth = useSelector(getCurWidth)\r\n\r\n    const getWidthInfo = () => {\r\n        if(curWidth>1280){\r\n            return {colNumber:\"s\", maxWidth:\"--main-three-col-max-width\"}\r\n        }\r\n        else if (curWidth>560){\r\n            return {colNumber:\"m\", maxWidth:\"--main-two-col-max-width\"}\r\n        }\r\n        else {\r\n            return {colNumber:\"l\", maxWidth:\"--main-one-col-max-width\"}\r\n        } \r\n    }\r\n\r\n    \r\n    return (\r\n            <div className=\"ListCard\" style={{maxWidth:getWidthInfo().maxWidth}}>\r\n                {\r\n                    info.map((record,i) => {\r\n                        return <div key={record.russianName}>\r\n                            <CardWrapper\r\n                                title={record.russianName}\r\n                                percentProgress={record.percentProgress}\r\n                                numberOfQuestions={record.numberOfQuestions}\r\n                                \r\n                                cardClick={cardClick(i)}\r\n                                btnCardClickObj={{ isBtnNeed:record.isBtnNeed, func: btnCardClick(i)}}\r\n\r\n                                imageName={record.imageName}\r\n                                description={record.description}\r\n                                textBtn={\"Посмотреть результаты\"}\r\n                            >\r\n                            </CardWrapper>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ListCard","import {QUESTION_NOT_ANSWERED} from \"../NotUI/Data/consts\"\r\n\r\n// export const getEras = (state) => state.Data.Eras\r\n\r\n\r\n// Получение ID\r\nexport const getCurEraId = (state) =>{\r\n    return state.Data.CurEraId\r\n}\r\nexport const getCurSurveyId = (state) =>{\r\n    return state.Data.CurSurveyId\r\n}\r\nexport const getCurQuestionId = (state) =>{\r\n    return state.Data.CurQuestionId\r\n}\r\n\r\n\r\n\r\n// Получение массива элементов по id вышестоящего элемента\r\nexport const getSurveysById = (idEra) => (state) =>{\r\n    return state.Data.Surveys.filter(survey=>survey.idEra === idEra)\r\n}\r\nexport const getQuestionsById = (idSurvey) => (state) =>{\r\n    return state.Data.Questions.filter(question=>question.idSurvey === idSurvey)\r\n}\r\nexport const getAnswerOptionsById  = (idQuestion) => (state) =>{\r\n    return state.Data.AnswerOptions.filter(answerOption=>answerOption.idQuestion === idQuestion)\r\n}\r\n\r\n\r\n// Получение одного элемента по id\r\nexport const getEraById = (idEra) => (state) =>{\r\n    return state.Data.Eras.filter((era)=>era.idEra === idEra)[0]\r\n} \r\nexport const getSurveyById = (idSurvey) => (state) =>{\r\n    return state.Data.Surveys.filter((survey)=>survey.idSurvey === idSurvey)[0]\r\n} \r\nexport const getQuestionById = (idQuestion) => (state) =>{\r\n    return state.Data.Questions.filter((question)=>question.idQuestion === idQuestion)[0]\r\n} \r\nexport const getAnswerOptionById = (idAnswerOption) => (state) =>{\r\n    return state.Data.AnswerOptions.filter((answerOption)=>answerOption.idAnswerOption === idAnswerOption)[0]\r\n} \r\nexport const getUserAnswer = (idQuestion) => (state) =>{\r\n    const userAnswer = state.Data.UserAnswers.filter((userAnswer)=>userAnswer.idQuestion === idQuestion)\r\n\r\n    if(userAnswer === undefined){\r\n        return undefined\r\n    }\r\n    else{\r\n        return userAnswer[0]\r\n    }\r\n}\r\n\r\n\r\n\r\n// Получение текущих данных\r\nexport const getCurEra = (state) => {\r\n\r\n    const curEraId = getCurEraId(state)\r\n    const eras = getEras(state)\r\n\r\n    return(\r\n        eras.filter((era)=>era.idEra === curEraId)[0]\r\n    )\r\n}\r\nexport const getCurSurvey = (state) => {\r\n\r\n    const curSurvId = getCurSurveyId(state)\r\n    const surveys = getCurSurveys(state)\r\n\r\n    return(\r\n        surveys.filter((survey)=>survey.idSurvey === curSurvId)[0]\r\n    )\r\n}\r\nexport const getCurSurveys = (state) =>{\r\n    const curEraId = getCurEraId(state)\r\n    return state.Data.Surveys.filter(survey=>survey.idEra === curEraId)\r\n}\r\nexport const getCurQuestion = (state) =>{\r\n    const curQuestionId = getCurQuestionId(state)\r\n    return state.Data.Questions.filter(question=>question.idQuestion === curQuestionId)[0]\r\n}\r\nexport const getCurQuestions = (state) => {\r\n    const curSurveyId = getCurSurveyId(state)\r\n    return state.Data.Questions.filter(question=>question.idSurvey === curSurveyId)\r\n}\r\nexport const getCurAnswerOptions = (state) =>{\r\n    const curQuestionId = getCurQuestionId(state)\r\n    return state.Data.AnswerOptions.filter(answerOption=>answerOption.idQuestion === curQuestionId)\r\n}\r\nexport const getCurUserAnswer = (state) => {\r\n    const curQuestionId = getCurQuestionId(state)\r\n    const curUserAnswer = getUserAnswer(curQuestionId)(state)\r\n\r\n    if(curUserAnswer === undefined){\r\n        return undefined\r\n    }\r\n    else{\r\n        return curUserAnswer\r\n    }\r\n} \r\n\r\n\r\n// Результаты\r\nexport const isAnswerOptionTrue = (idAnswerOption) => (state) =>{\r\n    const answerOption = getAnswerOptionById(idAnswerOption)(state)\r\n\r\n    return answerOption.score === 1 ? true : false\r\n}\r\nexport const isQuestionTrue = (idQuestion) => (state) => {\r\n    const userAnswer = getUserAnswer(idQuestion)(state)\r\n    if(userAnswer === undefined){\r\n        return false\r\n    }\r\n\r\n    return isAnswerOptionTrue(userAnswer.idAnswerOption)(state)\r\n} \r\nexport const isCurQuestionTrue = (state) => {\r\n    const userAnswer = getCurUserAnswer(state)\r\n\r\n    if(userAnswer === undefined){\r\n        return false\r\n    }\r\n\r\n    return isAnswerOptionTrue(userAnswer.idAnswerOption)\r\n}\r\n\r\n\r\n\r\nexport const getRightAnswerOptionById = (idQuestion) => (state) =>{\r\n\r\n    let ret = {};\r\n\r\n    const answerOptions = getAnswerOptionsById(idQuestion)(state);\r\n\r\n    answerOptions.map((answerOption)=>{\r\n        if(isAnswerOptionTrue(answerOption.idAnswerOption)(state)){\r\n            ret = answerOption\r\n        }\r\n    })\r\n\r\n    return ret\r\n}\r\n\r\nexport const getResultCurSurvey = (state) =>{\r\n    const curQuestions = getCurQuestions(state)\r\n\r\n    const total = curQuestions.length\r\n    let score = 0;\r\n\r\n    curQuestions.map((question)=>{\r\n        if(isQuestionTrue(question.idQuestion)(state)){\r\n            score++\r\n        }\r\n    })\r\n\r\n    return {total:total, score:score}\r\n}\r\nexport const getResultSurveyById = (idSurvey) => (state) =>{\r\n    const questions = getQuestionsById(idSurvey)(state)\r\n\r\n    const total = questions.length\r\n    let score = 0;\r\n\r\n    questions.map((question)=>{\r\n        if(isQuestionTrue(question.idQuestion)(state)){\r\n            score++\r\n        }\r\n    })\r\n\r\n    return {total:total, score:score}\r\n}\r\n\r\nexport const getResultCurSurveys = (state) =>{\r\n    const curSurveys = getCurSurveys(state)\r\n\r\n    let ret = []\r\n\r\n    curSurveys.map((survey)=>{\r\n        let surveyResult = getResultSurveyById(survey.idSurvey)(state)\r\n        ret.push(\r\n            {\r\n                idSurvey:survey.idSurvey,\r\n                total:surveyResult.total, \r\n                score:surveyResult.score\r\n            }\r\n        )\r\n    })\r\n\r\n    return ret\r\n}\r\n\r\nexport const getResultEraById = (idEra) => (state) =>{\r\n    const surveys = getSurveysById(idEra)(state)\r\n\r\n    const total = surveys.length\r\n    let score = 0\r\n\r\n    surveys.map((survey)=>{\r\n        let surveyResult = getResultSurveyById(survey.idSurvey)(state)\r\n        if(surveyResult.score === surveyResult.total){\r\n            score++\r\n        }\r\n    })\r\n\r\n    return {score:score, total:total}\r\n\r\n}\r\n\r\nexport const getResultsEras = (state) =>{\r\n    const eras = getEras(state)\r\n\r\n    let ret = []\r\n\r\n    eras.map((era)=>{\r\n        let eraResult = getResultEraById(era.idEra)(state)\r\n        ret.push(\r\n            {\r\n                idEra:era.idEra,\r\n                total:eraResult.total, \r\n                score:eraResult.score\r\n            }\r\n        )\r\n    })\r\n\r\n    return ret\r\n}\r\n\r\n\r\n\r\n//Данные пользователя\r\nexport const getIsFirstOpen = (state) => state.Data.UserData.isFirstOpen\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Остальные функции\r\n\r\n//Получить все эры\r\nexport const getEras = (state) => state.Data.Eras\r\n\r\n\r\n\r\n\r\n// export const getArrQuestions = (state) => {\r\n//     const eras = getEras(state)\r\n//     const indexEra = getIndexEra(state)\r\n//     const indexSurvey = getIndexSurvey(state)\r\n\r\n//     return(\r\n//         eras[indexEra].subset[indexSurvey].subset\r\n//     )\r\n// }\r\n\r\n// export const getCurSurvey = (state) => {\r\n\r\n//     const curSurvId = getCurSurveyId(state)\r\n//     const surveys = getSurveys(curSurvId)(state)\r\n\r\n//     return(\r\n//         eras[indexEra].subset[indexSurvey]\r\n//     )\r\n// }\r\n\r\n// export const getCurEraSurveys = (state) => {\r\n//     const eras = getEras(state)\r\n//     const indexEra = getIndexEra(state)\r\n\r\n//     return(\r\n//         eras[indexEra].subset\r\n//     )\r\n// }\r\n\r\n// export const getCurEra = (state) => {\r\n//     const eras = getEras(state)\r\n//     const indexEra = getIndexEra(state)\r\n\r\n//     return(\r\n//         eras[indexEra]\r\n//     )\r\n// }\r\n\r\n\r\n\r\n// export const getSurveyResult = (idSurvey) => (state) =>{\r\n//     const answers = getAnswers()\r\n//     return state.Data.Surveys.filter(survey=>survey.idEra === idEra)\r\n// }\r\n\r\n// Извлечение статических данных\r\n// export const getEras = (state) => state.Data.Eras\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Результаты\r\n\r\n// export const isAnswerOptionTrue = (idAnswerOption) => (state) =>{\r\n//     const answerOption = getAnswerOption(idAnswerOption)(state)\r\n//     return answerOption.score === 1 ? true : false\r\n// } \r\n\r\n// export const getIdUserAnswerOption = (idQuestion) => (state) =>{\r\n//     const userAnswer = state.Data.UserAnswers.filter((userAnswer)=>userAnswer.idQuestion === idQuestion);\r\n\r\n//     if(userAnswer.lenght === undefined){\r\n//         return QUESTION_NOT_ANSWERED\r\n//     }\r\n//     else{\r\n//         return userAnswer[0].idAnswerOption\r\n//     }\r\n// }\r\n\r\n// export const isQuestionAnsweredTrue = (idQuestion) => (state) =>{\r\n//     const idUserAnswerOption = getIdUserAnswerOption(idQuestion)(state)\r\n\r\n//     if(idUserAnswerOption === QUESTION_NOT_ANSWERED){\r\n//         return false\r\n//     }\r\n\r\n//     const answerOption = getAnswerOption(idUserAnswerOption)(state)[0]\r\n//     return answerOption.score === 1 ? true : false\r\n// }\r\n\r\n// export const getSurveyResult = (idSurvey) => (state) =>{\r\n//     const questions = getQuestions(idSurvey)(state)\r\n\r\n//     const total = questions.length\r\n//     let score = 0;\r\n\r\n//     questions.map((question)=>{\r\n\r\n//         if(isQuestionAnsweredTrue(question.idQuestion)(state)){\r\n//             score++\r\n//         }\r\n\r\n//     })\r\n\r\n//     return {total:total, score:score}\r\n// }\r\n\r\n// export const getSurveysResults = (state) =>{\r\n//     const surveys = getCurSurveys(state)\r\n\r\n//     let ret = []\r\n\r\n//     surveys.map((survey)=>{\r\n\r\n//         let surveyResult = getSurveyResult(survey.idSurvey)(state)\r\n\r\n//         ret.push(\r\n//             {\r\n//                 idSurvey:survey.idSurvey,\r\n//                 total:surveyResult.total,\r\n//                 score:surveyResult.score\r\n//             }\r\n//         )\r\n//     })\r\n\r\n//     return ret\r\n// }\r\n\r\n\r\n// export const getEraResult = (idEra) => (state) =>{\r\n//     const surveys = getSurveys(idEra)(state);\r\n\r\n//     const total = surveys.length;\r\n//     let score = 0;\r\n\r\n//     surveys.map((survey)=>{\r\n//         let surveyResult = getSurveyResult(survey.idSurvey)(state);\r\n//         if(surveyResult.total === surveyResult.score){\r\n//             score++\r\n//         }\r\n//     })\r\n\r\n//     return {total:total, score:score}\r\n\r\n// } \r\n\r\n// export const getErasResults = (state) =>{\r\n//     const eras = getEras(state)\r\n\r\n//     let ret = []\r\n\r\n//     eras.map((era)=>{\r\n\r\n//         let eraResult = getEraResult(era.idEra)(state)\r\n\r\n//         ret.push({\r\n//             idEra:era.idEra,\r\n//             total:eraResult.total,\r\n//             score:eraResult.score\r\n//         })\r\n//     })\r\n\r\n//     return ret\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// export const isAnswerTrue = (idAnswer) => {\r\n\r\n// }\r\n\r\n// export const getSurveyResult = (state) => {\r\n//     const eras = getEras(state);\r\n//     const indexAgeAndSurvey = \r\n\r\n// }","import { PanelHeader, Panel, Div } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport './ListAge.css'\r\nimport { getAnswersResultEra, isTitleCentre } from '../../help';\r\nimport ListCard from '../../components/ListCard/ListCard'\r\nimport Header from '../../components/Header/Header'\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\nimport downloadImage from '../../NotUI/Server/server.js'\r\nimport { useSelector } from 'react-redux';\r\nimport { getEraResult, getResultsEras } from '../../Selectors/data_selectors';\r\n\r\n\r\nconst ListAge = ({id, eras, createOnClickItemAge=index=>null}) => {\r\n\r\n \r\n    const eraResults = useSelector(getResultsEras);\r\n\r\n    const info = eras.map((era)=>{\r\n        let eraResult = eraResults.filter((eraResult)=>eraResult.idEra === era.idEra)[0]\r\n        return {\r\n            russianName: era.russianName,\r\n            percentProgress: eraResult.score,\r\n            numberOfQuestions: eraResult.total,\r\n            imageName: era.image.imageName,\r\n            description: era.description\r\n        }\r\n    })\r\n\r\n    const cardClick = (index) => () =>{\r\n        createOnClickItemAge(eras[index].idEra)\r\n    }\r\n\r\n    return (\r\n        <PanelWrapper id={id} headerText=\"Выбирете эпоху\" isHeaderFixed={true}>\r\n\r\n                <div className=\"ListAge__content\">\r\n                    <ListCard\r\n                        info={info}\r\n                        cardClick={cardClick}>\r\n                    </ListCard>\r\n                </div>\r\n\r\n        </PanelWrapper>\r\n    )\r\n}\r\n\r\nexport default ListAge;\r\n","import { Alert } from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getAnswerOptionById, getCurAnswerOptions, getCurQuestion, getCurUserAnswer, getRightAnswerOptionById, isCurQuestionTrue } from \"../../Selectors/data_selectors\";\r\nimport \"./AlertQuestionResult.css\";\r\n\r\nconst AlertQuestionResult = ({\r\n\r\n    onClose=()=>{}\r\n\r\n    }) => {\r\n    \r\n    const answerOptions = useSelector(getCurAnswerOptions)\r\n    const curQuestion = useSelector(getCurQuestion)\r\n    const userAnswer = useSelector(getCurUserAnswer)\r\n    const rightAnswer = useSelector(getRightAnswerOptionById(curQuestion.idQuestion))\r\n\r\n    const isWin = ((userAnswer !== undefined) && (userAnswer.idAnswerOption === rightAnswer.idAnswerOption)) ? true : false\r\n\r\n    let userAnswerText = \"Вы не ответили\";\r\n    answerOptions.map((answerOption)=>{\r\n        if((userAnswer !== undefined) && (answerOption.idAnswerOption === userAnswer.idAnswerOption)){\r\n            userAnswerText = answerOption.text\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"AnswersQuestions__alert_big\">\r\n            <Alert\r\n                actionsLayout={\"horizontal\"}\r\n                onClose={onClose}\r\n                actions={[{\r\n                    title: \"Закрыть\",\r\n                    autoclose: true,\r\n                    mode: \"cancel\"\r\n                }]}\r\n            >\r\n                <div className=\"AnswersQuestions__alert\">\r\n\r\n                    <h3 className={\"AlertQuestionResult__text-question\"}>{curQuestion.textQuestion}</h3>\r\n\r\n                        {\r\n                            !isWin &&\r\n                            <div>\r\n                                <div className=\"AnswersQuestions__alert__title-answer-wrap AnswersQuestions__alert__title-answer-wrap_bad\">\r\n                                    <div\r\n                                        className=\"AnswersQuestions__alert__title-answer AnswersQuestions__alert__title-answer_bad\"\r\n                                    >Ваш ответ\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div\r\n                                    className=\"AnswersQuestions__alert__text-answer\"\r\n                                >\r\n                                    {userAnswerText}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        <div>\r\n                            <div className=\"AnswersQuestions__alert__title-answer-wrap AnswersQuestions__alert__title-answer-wrap_good\">\r\n                                <div\r\n                                    className=\"AnswersQuestions__alert__title-answer AnswersQuestions__alert__title-answer_good\"\r\n                                >\r\n                                    {\r\n                                        isWin\r\n                                            ? \"Ваш ответ верен\"\r\n                                            : \"Правильный ответ\"\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                className=\"AnswersQuestions__alert__text-answer\"\r\n                            >\r\n                                {rightAnswer.text}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"AnswersQuestions__alert__title-answer-wrap AnswersQuestions__alert__title-answer-wrap_normal\">\r\n                                <div\r\n                                    className=\"AnswersQuestions__alert__title-answer AnswersQuestions__alert__title-answer_normal\"\r\n                                >Остальные варианты</div>\r\n                            </div>\r\n\r\n                            {\r\n                                answerOptions.map((answerOption, i) => {\r\n                                    return (\r\n                                        (answerOption.idAnswerOption !== rightAnswer.idAnswerOption)\r\n                                        &&\r\n                                        (\r\n                                            ((userAnswer !== undefined) && (answerOption.idAnswerOption !== userAnswer.idAnswerOption))\r\n                                            ||(userAnswer === undefined)\r\n                                        ) \r\n                                        &&\r\n                                        <div\r\n                                            className=\"AnswersQuestions__alert__text-answer\"\r\n                                            key={answerOption.text}\r\n                                        >\r\n                                            {answerOption.text}\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                </div>\r\n            </Alert>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlertQuestionResult;\r\n","import React, { useCallback, useState } from 'react';\r\nimport \"./CustomTooltip.css\";\r\nimport { ClickAwayListener, Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    tooltip: {\r\n        backgroundColor: 'var(--main-therd-bg-color)',\r\n        color: 'var(--text_secondary)',\r\n        maxWidth: 220,\r\n        fontSize: \"14px\",\r\n        border: \"1px solid var(--main-therd-bg-color)\"\r\n    },\r\n    arrow: {\r\n        color: 'var(--main-therd-bg-color)',\r\n        '&::before': {\r\n            border: \"1px solid var(--main-therd-bg-color)\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst CustomTooltip = ({children, text, defaultIsShown=false}) => {\r\n    const classes = useStyles();\r\n\r\n    const [isVisible, setIsVisible] = useState(defaultIsShown);\r\n\r\n    const open = useCallback(() => {\r\n        setIsVisible(true);\r\n    });\r\n\r\n    const close = useCallback(() => {\r\n        setIsVisible(false);\r\n    });\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={close}>\r\n            <Tooltip\r\n                title={text}\r\n                disableFocusListener\r\n                disableHoverListener\r\n                arrow\r\n                onClose={close}\r\n                open={isVisible}\r\n                classes={{ tooltip: classes.tooltip, arrow: classes.arrow }}\r\n            >\r\n                <span onClick={open}>\r\n                    {children}\r\n                </span>\r\n            </Tooltip>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nexport default CustomTooltip;\r\n","function makeEaseOut(timing) {\r\n  return function (timeFraction) {\r\n    return 1 - timing(1 - timeFraction);\r\n  }\r\n}\r\n\r\nconst easeOut = makeEaseOut((timeFraction) => timeFraction);\r\n\r\nexport default easeOut;\r\n","import { Div, FixedLayout } from '@vkontakte/vkui';\r\nimport React, { createRef, useEffect, useState } from 'react';\r\nimport animate from '../../../../anime/animate';\r\nimport easeOut from '../../../../anime/easeOut';\r\nimport BlackBackground from '../../../../components/BlackBackground/BlackBackground';\r\nimport ButtonWrapper from '../../../../components/ButtonWrapper/ButtonWrapper';\r\nimport { Icon16CheckCircleOutline } from '@vkontakte/icons';\r\nimport { Icon16CancelCircleOutline } from '@vkontakte/icons';\r\n\r\nimport \"./ItemAnswerQuestion.css\";\r\nimport AlertQuestionResult from '../../../../components/AlertQuestionResult/AlertQuestionResult';\r\nimport { useSelector } from 'react-redux';\r\nimport { isQuestionTrue } from '../../../../Selectors/data_selectors';\r\n\r\nconst ItemAnswerQuestion = ({userAnswerText,idQuestion, questionTitle, rightAnswerText, arrOptioAnswersWithoutRight, \r\n    openAlert = () => {} }) => {\r\n\r\n    const ICON_SIZE = 24;\r\n    const isWin = useSelector(isQuestionTrue(idQuestion))\r\n\r\n    // const openAlert = () =>{\r\n    //     setAlert(\r\n    //         <AlertQuestionResult\r\n    //             isWin={isWin}\r\n    //             questionTitle={questionTitle}\r\n    //             userAnswerText={userAnswerText}\r\n    //             rightAnswerText={rightAnswerText}\r\n    //             arrOthersQuestions={arrOptioAnswersWithoutRight}\r\n\r\n    //             onClose={setAlert(null)}\r\n    //         >\r\n    //         </AlertQuestionResult>\r\n    // )}\r\n\r\n    return (\r\n        <div className=\"ItemAnswerQuestion\">\r\n            <ButtonWrapper\r\n                onClick={openAlert}\r\n                text={questionTitle}\r\n                classNameText=\"ItemAnswerQuestion__button-text\"\r\n                hasActive={false}\r\n                before=\r\n                {\r\n                    isWin \r\n                    ? <Icon16CheckCircleOutline height={ICON_SIZE} width={ICON_SIZE} style={{color:\"var(--main-green-color)\"}}/> \r\n                    : <Icon16CancelCircleOutline height={ICON_SIZE} width={ICON_SIZE} style={{color:\"var(--main-red-color)\"}}/> \r\n                }\r\n            >\r\n            </ButtonWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemAnswerQuestion;\r\n","import { Icon24Back } from '@vkontakte/icons';\r\nimport { Alert, Div, Panel, PanelHeader, PanelHeaderButton, View } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport Header from '../../../components/Header/Header';\r\n// import './ItemAnswerQuestion/ItemAnswerQuestion.css';\r\n\r\nimport \"./PanelAnswersQuestions.css\";\r\nimport ItemAnswerQuestion from './ItemAnswerQuestion/ItemAnswerQuestion';\r\nimport ButtonWrapper from '../../../components/ButtonWrapper/ButtonWrapper';\r\nimport PanelWrapper from '../../../components/PanelWrapper/PanelWrapper';\r\nimport { QUESTION_NOT_ANSWERED } from '../../../NotUI/Data/consts';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst isQuestionTrue = (idAnswerOptionUser, arrQuestions) =>{\r\n    let ret = false;\r\n\r\n    arrQuestions.map((question)=>{\r\n        if((question.idAnswerOption === idAnswerOptionUser) && (question.score===1)){\r\n            ret = true\r\n        }\r\n    })\r\n\r\n    return ret\r\n}\r\n\r\nconst getUserAnswerText = (idAnswerOptionUser, arrQuestions) =>{\r\n    let text = \"\";\r\n\r\n    if(idAnswerOptionUser === QUESTION_NOT_ANSWERED){\r\n        return null\r\n    }\r\n\r\n    arrQuestions.map((question)=>{\r\n        if(question.idAnswerOption === idAnswerOptionUser){\r\n            text = question.text\r\n        }\r\n    })\r\n\r\n    return text\r\n}\r\n\r\nconst getArrOptioAnswersWithoutRight = (arrQuestions) =>{\r\n    let arr = [];\r\n\r\n    arrQuestions.map((question)=>{\r\n        if(question.score !== 1){\r\n            arr.push(question)\r\n        }\r\n    })\r\n\r\n    return arr\r\n}\r\n\r\nconst getRightAnswerOption = (arrQuestions) =>{\r\n    let answerOption = {};\r\n\r\n    arrQuestions.map((question)=>{\r\n        if(question.score === 1){\r\n            answerOption = question\r\n        }\r\n    })\r\n\r\n    return answerOption\r\n}\r\n\r\n\r\n\r\nconst PanelAnswersQuestions = ({id, questions,\r\n    onBack=()=>{}, \r\n    openAlert=()=>{}\r\n}) => {\r\n\r\n\r\n    return (\r\n        <PanelWrapper id={id} headerText=\"Вопросы\" onHeaderBack={onBack} isOneColumn={true}>\r\n\r\n            <div style={{display:\"flex\",justifyContent:\"center\"}}>\r\n                <div className=\"PanelAnswersQuestions\">\r\n                {\r\n                    questions.map((question, i) => (\r\n                        <ItemAnswerQuestion\r\n                            indexQuestion={i}\r\n                            questionTitle={question.textQuestion}\r\n                            idQuestion={question.idQuestion}\r\n                            openAlert={()=>openAlert(question.idQuestion)}\r\n                            // userAnswerText={getUserAnswerText(question.userAnswer, question.answerOptions)}\r\n                            // rightAnswerText={getRightAnswerOption(question.answerOptions)}\r\n                            // arrOptioAnswersWithoutRight={getArrOptioAnswersWithoutRight(question.answerOptions)}\r\n                            // isWin = { (question.userAnswer !== QUESTION_NOT_ANSWERED) && (isQuestionTrue(question.userAnswer.idAnswerOption, question.answerOptions))  }\r\n                            // setAlert={setAlert}\r\n                        />\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        </PanelWrapper>\r\n    )\r\n}\r\n\r\nexport default PanelAnswersQuestions;\r\n","import React from \"react\";\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport { Button, CellButton, Div } from \"@vkontakte/vkui\";\r\n\r\nimport './ResultButtons.css';\r\nimport { Icon28AddAwardOutline } from \"@vkontakte/icons\";\r\nimport { Icon56LikeOutline } from '@vkontakte/icons';\r\nimport { Icon28ArticleOutline } from '@vkontakte/icons';\r\nimport { Icon24List } from '@vkontakte/icons';\r\nimport { Icon28RefreshOutline } from '@vkontakte/icons';\r\nimport { Icon56ArticleOutline } from '@vkontakte/icons';\r\nimport { Icon24Globe } from '@vkontakte/icons';\r\nimport { Icon28ShareExternalOutline } from '@vkontakte/icons';\r\nimport ButtonWrapper from \"../../../components/ButtonWrapper/ButtonWrapper\";\r\n\r\nconst ResultButtons = ({\r\n    onAgain=()=>{},\r\n    goToPollView=()=>{},\r\n    goToPanelAnswers=()=>{},\r\n    onBack = () => {}\r\n}) => {\r\n    const sendToHistory = (image) => {\r\n\r\n        bridge.send(\"VKWebAppShowStoryBox\", {\r\n            \"background_type\": \"image\",\r\n            \"url\": \"https://nikita-jpg.github.io\" + image\r\n        });\r\n    }\r\n\r\n    const sendToWall = (image) => {\r\n        window.open(\"https://vk.com/share.php?url=https://nikita-jpg.github.io\" + image);\r\n    }\r\n\r\n    const iconSize = 28;\r\n\r\n    return (\r\n        <div className=\"Result-buttons__container\">\r\n            {/* <Div> */}\r\n\r\n            {/* К вопросам */}\r\n                <ButtonWrapper\r\n                    text=\"К вопросам\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon24List width={iconSize} height={iconSize} style={{color:\"var(--main-yellow-color)\"}}/>}\r\n                    onClick={goToPanelAnswers}\r\n                >\r\n                </ButtonWrapper>\r\n\r\n            {/* К эпохам */}\r\n                <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"К эпохам\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon24Globe width={iconSize} height={iconSize} style={{color:\"var(--main-purple-color)\"}}/>}\r\n                    onClick={goToPollView}\r\n                >\r\n                </ButtonWrapper>\r\n\r\n            {/* Ещё раз */}\r\n                <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"Ещё раз\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon28RefreshOutline width={iconSize} height={iconSize} style={{color:\"var(--main-green-color)\"}}/>}\r\n                    onClick={onAgain}\r\n                >\r\n                </ButtonWrapper>\r\n\r\n                {/* <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"К вопросам\"\r\n                    className=\"Result-buttons\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon24List width={iconSize} height={iconSize} style={{color:\"var(--main-yellow-color)\"}}/>}\r\n                >\r\n                </ButtonWrapper> */}\r\n\r\n                {/* <ButtonWrapper\r\n                    size=\"l\"\r\n                    text=\"Поделиться\"\r\n                    className=\"Result-buttons__button\"\r\n                    classNameText=\"Result-buttons__text\"\r\n                    before={<Icon28ShareExternalOutline width={iconSize} height={iconSize} style={{color:\"var(--main-blue-color)\"}}/>}\r\n                >\r\n                </ButtonWrapper> */}\r\n\r\n\r\n                {/* <button className=\"Result-buttons Result-buttons_favorite\">Поддержать</button>\r\n                <button \r\n                    onClick={onAgain} \r\n                    className=\"Result-buttons Result-buttons_refresh\">\r\n                    Ещё раз\r\n                </button>\r\n                <button className=\"Result-buttons Result-buttons_share\">Поделиться</button>\r\n                <button \r\n                    onClick={onGoToAnswersQuestion} \r\n                    className=\"Result-buttons Result-buttons_format-list-bulleted\">\r\n                    К вопросам\r\n                </button> */}\r\n            {/* </Div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultButtons;\r\n\r\n{/* \r\n            <Button\r\n                size=\"l\"\r\n                className=\"Result-buttons\"\r\n                before={<Icon56ArticleOutline width={28} height={28} style={{color:\"var(--main-yellow-color)\"}} />}\r\n            >\r\n                <div className=\"Result-buttons__text\">\r\n                    К вопросам\r\n                </div>\r\n            </Button> */}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ButtonWrapper from '../../../components/ButtonWrapper/ButtonWrapper';\r\nimport CardWrapper from '../../../components/CardWrapper/CardWrapper';\r\nimport { getAnswersResultSurvey, getAnswersResultEra } from '../../../help';\r\nimport { getCurSurvey, getCurEraSurveys, getIndexSurvey, testSelector } from '../../../Selectors/data_selectors';\r\nimport './ResultCards.css'\r\n\r\nconst makeUsedData = (survey, surveyResult) =>{\r\n    // console.log(survey)\r\n    return(\r\n        {\r\n            russianName: survey.russianName,\r\n            percentProgress: surveyResult.score,\r\n            numberOfQuestions: surveyResult.total,\r\n            imageName: survey.image.imageName,\r\n            description: survey.description,\r\n            // isBtnNeed: getAnswersResultSurvey(survey).score !== 0 ? true : false\r\n        }\r\n    )\r\n\r\n}\r\n\r\nconst makeCard = (info, isFirstOpenResult, cardClick=()=>{}, makeStepAnimDealyForCard=()=>{}) => {\r\n    \r\n    return(\r\n        <div className={`ResultCards__card ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard() }}>\r\n            <CardWrapper\r\n                title={info.russianName}\r\n                percentProgress={info.percentProgress}\r\n                numberOfQuestions={info.numberOfQuestions}\r\n                imageSrc={info.imageSrc}\r\n                description={info.description}\r\n                cardClick={cardClick}\r\n            >    \r\n            </CardWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst getCardsFromSurveysFilter = (surveys,surveysResult, curSurveyID, isFirstOpenResult, \r\n    cardClick=()=>{}, \r\n    makeStepAnimDealyForCard=()=>{}\r\n    ) => {\r\n\r\n    let arr = [];\r\n    surveysResult.map((surveyResult)=>{\r\n        if((surveyResult.score !== surveyResult.total) && (surveyResult.idSurvey !== curSurveyID)){\r\n\r\n            let curSurvey = surveys.filter((survey)=>survey.idSurvey === surveyResult.idSurvey)[0]\r\n            let data = makeUsedData(curSurvey, surveyResult)\r\n            arr.push(makeCard(data, isFirstOpenResult, cardClick(curSurvey.idSurvey), makeStepAnimDealyForCard))\r\n\r\n        }\r\n    })\r\n\r\n    if(arr.length === 0)\r\n        return null\r\n    else\r\n        return(arr)\r\n}\r\n\r\nconst getCardsFromEraFilter = (erasResult, curEraID, isFirstOpenResult, isCompletedQuiz, \r\n    onAgain=()=>{}, goToEras=()=>{}, makeStepAnimDealyForCard=()=>{}) => {\r\n\r\n    let retrunMessage= \"\";\r\n    let returnButtons = [];\r\n    let isHasNotFinishedEras = false;\r\n\r\n    erasResult.map((eraResult)=>{\r\n        if((eraResult.score !== eraResult.total) && (eraResult.idEra !== curEraID)){\r\n            isHasNotFinishedEras = true;\r\n        }\r\n    })\r\n\r\n    if( (isHasNotFinishedEras === true) && (isCompletedQuiz === true)  ){\r\n        retrunMessage = \"Поздравляем, вы завершили целую эпоху! Предлагаем перейти к выбору новой эпохи\";\r\n        returnButtons = [{text:\"К эпохам\", click:goToEras}]\r\n    }\r\n\r\n    if( (isHasNotFinishedEras === false) && (isCompletedQuiz === true)  ){\r\n        retrunMessage = \"Поздравляем, вы завершили все эпохи!\";\r\n        returnButtons = []\r\n    }\r\n\r\n    if( (isHasNotFinishedEras === true) && (isCompletedQuiz === false)  ){\r\n        retrunMessage = \"Поздравляем, вы почти полностью прошли эпоху на 100%. Но, к сожалению, данный орпос не на 100%. Хотите его перепройти или перейти к выбору новой эпохи?\";\r\n        returnButtons = [{text:\"Ещё раз\", click:onAgain}, {text:\"К эпохам\", click:goToEras}]\r\n    }\r\n\r\n    if( (isHasNotFinishedEras === false) && (isCompletedQuiz === false)  ){\r\n        retrunMessage = \"Поздравляем, вы почти прошли все опросы на 100%! Но, к сожалению, данный опрос не на 100%. Предлагаем вам его перепройти. Ещё чуть-чуть :)\"\r\n        returnButtons = [{text:\"Ещё раз\", click:onAgain}]\r\n    }\r\n\r\n    return(\r\n        <div className=\"ResultCards__container\">\r\n            \r\n            <div className={`ResultCards__container__text ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard() }}>\r\n                <div className=\"ResultCards__text\">{retrunMessage}</div>\r\n            </div>\r\n\r\n            {returnButtons.length !== 0 &&\r\n                returnButtons.map((button)=>{\r\n                    return(\r\n                    <div className={`ResultCards__container__buttons ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard() }}>\r\n                        <div className=\"ResultCards__button\">\r\n                            <ButtonWrapper\r\n                                isLinkForm={true}\r\n                                style={{color:\"var(--main-gray-color)\", fontSize:\"18px\"}}\r\n                                text={button.text}\r\n                                onClick={button.click}\r\n                            ></ButtonWrapper>\r\n                        </div>\r\n                    </div>\r\n                )}) \r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ResultCards = ({\r\n    isFirstOpenResult, \r\n    isCompletedSurvey,\r\n\r\n    curSurveys, \r\n    curSurveysResult,\r\n    curEraIndex,\r\n    curSurveyIndex,\r\n    erasResult,\r\n\r\n    goToQuiz=()=>{}, \r\n    goToPollView=()=>{},\r\n    onAgain=()=>{},\r\n    setIndexSurvey=()=>{},\r\n    goToSurveyView=()=>{},\r\n    makeStepAnimDealyForCard=()=>{}\r\n}) =>{\r\n\r\n    // const eras = upperEras;\r\n    // const surveys = makeUsedData(upperCurSurveys)\r\n\r\n\r\n    const cardClick = (indexSurvey) => () => {\r\n        setIndexSurvey(indexSurvey)\r\n        goToSurveyView()\r\n    }\r\n\r\n    \r\n    //Узнаём есть ли непройденные опросы (кроме текущего)\r\n    let surveysFilterResultArr = getCardsFromSurveysFilter(curSurveys,curSurveysResult, curSurveyIndex, isFirstOpenResult, cardClick, makeStepAnimDealyForCard)\r\n    if(surveysFilterResultArr !== null){\r\n        return surveysFilterResultArr\r\n    }\r\n\r\n    \r\n    let eraFilterResult = getCardsFromEraFilter(erasResult, curEraIndex, isFirstOpenResult, isCompletedSurvey, onAgain, goToPollView, makeStepAnimDealyForCard)\r\n    // console.log(eraFilterResult)\r\n    if(eraFilterResult !== null){\r\n        return eraFilterResult\r\n    }\r\n    \r\n    return null\r\n    // return null\r\n\r\n    // if(isCurSurveyCompleted)\r\n    //     // return(surveysFilterResultArr)\r\n    \r\n    // let eraFilterResult = eraFilter(eras, indexAge, isFirstOpenResult, isCurSurveyCompleted, onAgain, goToEras, makeStepAnimDealyForCard)\r\n    // if(eraFilter !== null)\r\n    //     return(eraFilterResult)\r\n\r\n}\r\nexport default ResultCards","import CustomTooltip from \"../../../components/CustomTooltip/CustomTooltip\"\r\nimport PanelWrapper from \"../../../components/PanelWrapper/PanelWrapper\"\r\nimport './PanelResult.css'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ResultButtons from \"../ResultButtons/ResultButtons\";\r\nimport { PromoBanner } from \"@vkontakte/vkui\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport ResultCards from \"../ResultCards/ResultCards\";\r\nimport { getCurEraId, getCurEraSurveys, getCurSurveyId, getCurSurveys, getEras, getIndexEra, getIndexSurvey, getResultCurSurvey, getResultCurSurveys, getResultsEras } from \"../../../Selectors/data_selectors\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n// onClose={()=>{setIsFirstOpenResult(false)}} \r\nconst PanelResult = ({id,isNeedAnim,adDate,isAdVisible,\r\n    goToSurveyView=()=>{},\r\n    goToPanelAnswers=()=>{},\r\n    goToPollView=()=>{},\r\n\r\n    setAdVisible=()=>{},\r\n    setIndexSurvey=()=>{}\r\n}) =>{\r\n\r\n//Кешируем\r\n    // Мы делаем локальную копию резульата, чтобы при переходе другому опросу, не менялось значение.\r\n    // Значение меняется быстрее анимации, поэтому при переходе к другому опросу,\r\n    // пользователь вначале увидит изменение результата на результат кликнутого опроса,\r\n    // а после перейдёт к новому опросу\r\n\r\n    const total = useSelector(getResultCurSurvey)\r\n    const [totalResult, setTotal] = useState(0)\r\n    const [eras, setEras] = useState([])\r\n    const [erasResult, setErasResult] = useState([])\r\n    const [surveys, setSurveys] = useState([])\r\n    const [surveysCurResult, setSurveysCurResult] = useState([])\r\n    const [curEraIndex,setCurEraIndex] = useState(-1)\r\n    const [curSurveyIndex,setCurSurveyIndex] = useState(-1)\r\n\r\n    const surveysModified = useSelector(getCurSurveys)\r\n    const curEraIndexModified = useSelector(getCurEraId)\r\n    const curSurveyIndexModified = useSelector(getCurSurveyId)\r\n    const erasModified = useSelector(getEras)\r\n    const erasResultModified = useSelector(getResultsEras)\r\n    const surveysCurResultModified = useSelector(getResultCurSurveys)\r\n\r\n\r\n    useEffect(()=>{\r\n        setTotal(total)\r\n        setEras(erasModified)\r\n        setErasResult(erasResultModified)\r\n        setSurveys(surveysModified)\r\n        setCurEraIndex(curEraIndexModified)\r\n        setCurSurveyIndex(curSurveyIndexModified)\r\n        setSurveysCurResult(surveysCurResultModified)\r\n    }, [])\r\n\r\n//Анимация\r\n    let startAnimDealyForCard = 0.2;\r\n    let stepAnimDealyForCard = 0.1;\r\n    let curAnimDealyForCard = -stepAnimDealyForCard;\r\n\r\n    const makeStepAnimDealyForCard = () => {\r\n        curAnimDealyForCard = curAnimDealyForCard + stepAnimDealyForCard;\r\n        return startAnimDealyForCard + curAnimDealyForCard + \"s\";\r\n    }\r\n\r\n//Получаем цвет для результата\r\n    const getClassNameForPercent = (totalResult) => {\r\n\r\n        const total = totalResult.total;\r\n        const score = totalResult.score\r\n\r\n        if (score <= total/3) {\r\n            return \"Result__points-postfix_bad\";\r\n        }\r\n\r\n        if (score <= total/2) {\r\n            return \"Result__points-postfix_normal\";\r\n        }\r\n\r\n        return \"Result__points-postfix_good\";\r\n    }\r\n\r\n    return(\r\n        <PanelWrapper id={id} isOneColumn={true}>\r\n\r\n        {/* Цифра в виде результата */}\r\n            <div className={`PanelResult__title ${isNeedAnim ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard()}}>\r\n                <span className={`PanelResult__points ${getClassNameForPercent(totalResult)}`}>\r\n                    <CustomTooltip\r\n                        // text={`${titleAge}: ${quizes[indexQuiz].title}`}\r\n                        // defaultIsShown={isFirstOpenResult}\r\n                    >\r\n                        {totalResult.score}\r\n                        <span>/{totalResult.total}</span>\r\n                    </CustomTooltip>\r\n                </span>\r\n            </div>\r\n\r\n        {/* Панелька с кнопками */}\r\n            <div className={`Result__buttons ${isNeedAnim ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard()}}>\r\n                <ResultButtons \r\n                    onAgain={goToSurveyView}\r\n                    // onGoToAnswersQuestion={ () => { setIsFirstOpenResult(false); goToPanelAnswers()}}\r\n                    onGoToAnswersQuestion={goToPanelAnswers}\r\n                    goToPollView={goToPollView}\r\n                    goToPanelAnswers={goToPanelAnswers}\r\n                />\r\n            </div>\r\n\r\n        {/* Реклама */}\r\n            {\r\n                isAdVisible &&\r\n                <div className={`Result__adds ${isNeedAnim ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard()}}>\r\n                    <PromoBanner bannerData={adDate} onClose={() => {setAdVisible(false)}}></PromoBanner>\r\n                </div>\r\n            }\r\n\r\n        {/* Карточки опросов */}\r\n            <ResultCards \r\n                // indexAge={indexAge}\r\n                // indexQuiz={indexQuiz}\r\n                // eras={eras}\r\n                isFirstOpenResult={isNeedAnim}\r\n\r\n                eras={eras}\r\n                erasResult={erasResult}\r\n                curSurveys={surveys}\r\n                curSurveysResult={surveysCurResult}\r\n\r\n                curEraIndex={curEraIndex}\r\n                curSurveyIndex={curSurveyIndex}\r\n\r\n                isCompletedSurvey={totalResult.score === totalResult.total}\r\n                // isCompletedQuiz={percent === questions.length ? true : false}\r\n\r\n                makeStepAnimDealyForCard={makeStepAnimDealyForCard}\r\n                goToSurveyView={goToSurveyView}\r\n                setIndexSurvey={setIndexSurvey}\r\n                goToPollView={goToPollView}\r\n                onAgain={goToSurveyView}\r\n                // goToQuiz={createOnClickItemQuizes}\r\n                // goToEras={goToViewListAndQuizes}\r\n            >\r\n            </ResultCards>\r\n\r\n        </PanelWrapper>\r\n    )\r\n}\r\n\r\nexport default PanelResult","import bridge from '@vkontakte/vk-bridge';\r\nimport { ContentCard, Div, Panel, PromoBanner, View } from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AlertQuestionResult from \"../../components/AlertQuestionResult/AlertQuestionResult\";\r\nimport CustomTooltip from '../../components/CustomTooltip/CustomTooltip';\r\nimport Header from \"../../components/Header/Header\";\r\nimport \"../../components/ListCard/ListCard.css\";\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\nimport { getAnswersResultSurvey } from '../../help';\r\nimport { getArrQuestions, getCurQuestions, getCurSurvey, getQuestions } from '../../Selectors/data_selectors';\r\nimport PanelAnswersQuestions from './PanelAnswersQuestions/PanelAnswersQuestions';\r\n// import { getIndexEraAndSurvey } from '../../Selectors/data_selectors';\r\nimport PanelResult from './PanelResult/PanelResult';\r\nimport \"./Result.css\";\r\nimport ResultButtons from \"./ResultButtons/ResultButtons\";\r\nimport ResultCards from './ResultCards/ResultCards';\r\n\r\nconst Result = ({ id, titleAge, percent, eras, quizes, indexesAnswers, isFirstOpenResult, setIsFirstOpenResult, indexQuiz,\r\n    createOnClickItemQuizes = (index) => null,\r\n    onAgain=()=>{}, \r\n    goToViewListAndQuizes=()=>{},\r\n    goToSurveyViewAction=()=>{},\r\n    goToPollViewAction=()=>{},\r\n\r\n    setIndexEra=()=>{},\r\n    setCurSurveyIdAction=()=>{},\r\n    setCurQuestionIdAction=()=>{},\r\n\r\n }) => {\r\n\r\n//Получаем необходимые данные\r\n    const questions = useSelector(getCurQuestions)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n//Если мы не первый раз открываем Result, то нам не нужно запускать заново анимацию\r\n    const [isNeedAnim, setIsNeedAnim] = useState(true);\r\n\r\n\r\n\r\n//Внешняя навигация\r\n        const goToSurveyView = () => dispatch(goToSurveyViewAction())\r\n        \r\n        const goToPollView = () => dispatch(goToPollViewAction())\r\n\r\n        const setIndexSurvey = (indexSurvey) => dispatch(setCurSurveyIdAction(indexSurvey))\r\n        const setIdQuestion = (idQuestion) => dispatch(setCurQuestionIdAction(idQuestion))\r\n\r\n//Работа с панелями\r\n        const PANEL_RESULT = \"PANEL_RESULT\";\r\n        const PANEL_ANSWERS_QUESTIONS = \"PANEL_ANSWERS_QUESTIONS\";\r\n        const [activePanel, setActivePanel] = useState(PANEL_RESULT)\r\n\r\n        const goToPanelAnswers = () => {\r\n            goForwardInHistory(PANEL_ANSWERS_QUESTIONS)\r\n            setActivePanel(PANEL_ANSWERS_QUESTIONS)\r\n            setIsNeedAnim(false)\r\n        }\r\n\r\n\r\n//История\r\n        const [history, setHistory] = useState([PANEL_RESULT]);\r\n\r\n        const goBackInHistory = () => {\r\n\t\t\tlet his = history;\r\n\t\t\this.pop()\r\n\t\t\tif (activePanel === PANEL_RESULT) {\r\n\t\t\t\tbridge.send('VKWebAppEnableSwipeBack');\r\n\t\t\t}\r\n\t\t\tsetHistory(his)\r\n            setActivePanel(history[history.length - 1])\t\r\n\t\t}\r\n\r\n\t\tconst goForwardInHistory = (panelId) => { \r\n\t\t\tlet his = history;\r\n\t\t\this.push(panelId);\r\n\t\t\tif (activePanel === PANEL_RESULT) {\r\n\t\t\t\tbridge.send('VKWebAppDisableSwipeBack');\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n//Кнопки\r\n        // Переход к эпохам\r\n        const goToViewListAndQuizesWrapper = () => {\r\n            setIsFirstOpenResult(true)\r\n            goToViewListAndQuizes()\r\n        }\r\n        // Ещё раз\r\n        const modifyIsFirstOpenResult = (f) => (...args) => {\r\n            setIsFirstOpenResult(true);\r\n            return f(...args);\r\n        }\r\n\r\n//Анимация \r\n        const getClassNameForPercent = (percent) => {\r\n            if (percent <= 4) {\r\n                return \"Result__points-postfix_bad\";\r\n            }\r\n\r\n            if (percent <= 6) {\r\n                return \"Result__points-postfix_normal\";\r\n            }\r\n\r\n            return \"Result__points-postfix_good\";\r\n        }\r\n\r\n//Реклама\r\n        const getAdData = () => {\r\n            let addData = \"\";\r\n            console.log(\"getAdData use\")\r\n            bridge.send('VKWebAppGetAds',{}).then((promoBannerProps) => {\r\n                    console.log(\"promo\")\r\n                    addData = promoBannerProps\r\n                    // setAdDate(promoBannerProps)\r\n                    // (true);\r\n                })\r\n                .catch(error => console.log(error))\r\n                .finally(()=>{\r\n                    console.log(\"final\")\r\n                })\r\n            return addData\r\n        }\r\n        const [isAdVisible, setAdVisible] = useState(true)\r\n        // const [adDate, setAdDate] = useState(getAdData())\r\n        const [adDate, setAdDate] = useState({\r\n            title: 'Заголовок',\r\n            domain: 'vk.com',\r\n            trackingLink: 'https://vk.com',\r\n            ctaText: 'Перейти',\r\n            advertisingLabel: 'Реклама',\r\n            iconLink: 'https://sun9-7.userapi.com/c846420/v846420985/1526c3/ISX7VF8NjZk.jpg',\r\n            description: 'Описание рекламы',\r\n            ageRestrictions: \"14+\",\r\n            statistics: [\r\n                { url: '', type: 'playbackStarted' },\r\n                { url: '', type: 'click' }\r\n            ]\r\n        })  \r\n\r\n//Alert\r\n        const getAnswerText = (indexQuestion, indexInAnswer) => {\r\n            if (indexesAnswers[indexQuestion] === -1) return \"Вы не ответили\"\r\n            return `${questions[indexQuestion].answerOptions[indexInAnswer].text}`;\r\n        }\r\n\r\n        const [indexQuestion, setIndexQuestion] = useState();\r\n        const calcIndexRightAnswer = (indexQuestion) => {\r\n            return questions[indexQuestion].answerOptions.findIndex(a => a.score === 1);\r\n        }\r\n        const calcIndexUserAnswer = (indexQuestion) => {\r\n            return indexesAnswers[indexQuestion];\r\n        }\r\n\r\n\r\n        const [isVisibleAlert, setIsVisibleAlert] = useState(false);\r\n\r\n        const openAlert = (indexQuestion) => {\r\n            setIdQuestion(indexQuestion);\r\n            setIsVisibleAlert(true);\r\n        }\r\n        const closeAlert = () =>{\r\n            setIsVisibleAlert(false)\r\n        }\r\n\r\n    return (\r\n        <View \r\n            id={id} \r\n            activePanel={activePanel} \r\n            popout={    \r\n            isVisibleAlert\r\n            ?<AlertQuestionResult\r\n                onClose={closeAlert}\r\n            >\r\n            </AlertQuestionResult>\r\n            :null\r\n            }\r\n            onSwipeBack={goBackInHistory}\r\n            history={history}>\r\n\r\n            <PanelResult\r\n                id={PANEL_RESULT}\r\n                isNeedAnim={isNeedAnim}\r\n                adDate={adDate}\r\n                isAdVisible={isAdVisible}\r\n\r\n                goToSurveyView={goToSurveyView}\r\n                goToPollView={goToPollView}\r\n                goToPanelAnswers={goToPanelAnswers}\r\n\r\n                setAdVisible={setAdVisible}\r\n\r\n                setIndexSurvey={setIndexSurvey}\r\n            />\r\n\r\n            {/* <PanelWrapper id={PANEL_RESULT} onClose={()=>{setIsFirstOpenResult(false)}} isOneColumn={true}> */}\r\n\r\n            {/* <div className={`Result__title ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard()}}> */}\r\n                        {/* Цифра в виде результата */}\r\n                        {/* <div className={`Result__title`} style={{animationDelay:makeStepAnimDealyForCard()}}>\r\n                            <span className={`Result__points ${getClassNameForPercent(percent)}`}>\r\n                                <CustomTooltip\r\n                                    text={`${titleAge}: ${quizes[indexQuiz].title}`}\r\n                                    defaultIsShown={isFirstOpenResult}\r\n                                >\r\n                                    {percent}\r\n                                    <span>/{questions.length}</span>\r\n                                </CustomTooltip>\r\n                            </span>\r\n                        </div> */}\r\n\r\n                        {/* Панелька с кнопками */}\r\n                        {/* <div className={`Result__buttons ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard()}}>\r\n                            <ResultButtons \r\n                                onAgain={modifyIsFirstOpenResult(onAgain)}\r\n                                onGoToAnswersQuestion={ () => { setIsFirstOpenResult(false); goToPanelAnswers()}}\r\n                                goToViewListAndQuizes={goToViewListAndQuizesWrapper}\r\n                            />\r\n                        </div> */}\r\n\r\n                        {/* Реклама */}\r\n                        {/* {\r\n                            isAdVisible &&\r\n                            <div className={`Result__adds ${isFirstOpenResult ? \"Result__fade-anim\":\"\"}`} style={{animationDelay:makeStepAnimDealyForCard()}}>\r\n                                <PromoBanner bannerData={adDate} onClose={() => {setAdVisible(false)}}></PromoBanner>\r\n                            </div>\r\n                        } */}\r\n\r\n                        {/* Карточки опросов */}\r\n                        {/* <ResultCards \r\n                            indexAge={indexAge}\r\n                            indexQuiz={indexQuiz}\r\n                            eras={eras}\r\n                            isFirstOpenResult={isFirstOpenResult}\r\n                            isCompletedQuiz={percent === questions.length ? true : false}\r\n\r\n                            makeStepAnimDealyForCard={makeStepAnimDealyForCard}\r\n                            onAgain={modifyIsFirstOpenResult(onAgain)}\r\n                            goToQuiz={createOnClickItemQuizes}\r\n                            goToEras={goToViewListAndQuizes}\r\n                        >\r\n                        </ResultCards> */}\r\n\r\n            {/* </PanelWrapper> */}\r\n\r\n            <PanelAnswersQuestions\r\n                id={PANEL_ANSWERS_QUESTIONS}\r\n                questions={questions}\r\n                indexesAnswers={indexesAnswers}\r\n                onBack={goBackInHistory}\r\n                openAlert={openAlert}\r\n            >\r\n            </PanelAnswersQuestions>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Result;\r\n","import React, { useEffect, useState } from 'react';\r\nimport \"./ImageCard.css\"\r\nimport defaultImage from '../../../../svg/imgLoader.svg'\r\nimport { downloadImageFromServer } from '../../../../NotUI/Server/server';\r\nimport { Div } from '@vkontakte/vkui';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst ImageCard = ({imageName, sourceImageLink}) => {\r\n\r\n    //Управление состояниями карточки (картинка/источник)\r\n    const [isImgInfoOpen, setisImgInfoOpen] = useState(false)\r\n    const onLinkClick = (e) => e.stopPropagation();\r\n    \r\n\r\n    //Картинка\r\n    //Устанавливаем дефолтую картинку на карточки\r\n    const [image, setImage] = useState(defaultImage)\r\n    //Загружаем основную картинку\r\n    useEffect(()=>{\r\n        downloadImageFromServer(imageName).then(imageData=>{setImage(imageData)})\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div className=\"Image__container\" onClick={() => {setisImgInfoOpen(!isImgInfoOpen)}}>\r\n\r\n        <img\r\n            className=\"Image__image\" \r\n            src={image}\r\n        />\r\n        \r\n        <CSSTransition \r\n            in={isImgInfoOpen} \r\n            timeout={200}   \r\n            classNames=\"Image__info\"\r\n            onEnter={() => {setisImgInfoOpen(true)}}\r\n            onExited={() => {setisImgInfoOpen(false)}}>\r\n            <div className=\"Image__info\">\r\n                <Div className=\"Image__description\">\r\n                    Источник: <br/>\r\n                    {\r\n                        isImgInfoOpen\r\n                        ?<a \r\n                            href={sourceImageLink} \r\n                            className=\"Image__link\"\r\n                            target=\"_blank\"\r\n                            onClick={onLinkClick}\r\n                        >\r\n                            Клик\r\n                        </a>\r\n                        :<span className=\"Image__link\">\r\n                            Клик \r\n                        </span>\r\n                    }\r\n                    \r\n                </Div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ImageCard","import { Icon28ChevronDownOutline } from '@vkontakte/icons';\r\nimport { Panel, platform, Text, Div, Platform, PanelHeaderButton}  from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ButtonWrapper from '../../../components/ButtonWrapper/ButtonWrapper';\r\nimport Header from '../../../components/Header/Header';\r\nimport PanelWrapper from '../../../components/PanelWrapper/PanelWrapper';\r\nimport { QUESTION_NOT_ANSWERED } from '../../../NotUI/Data/consts';\r\nimport { getAnswerOptionsById } from '../../../Selectors/data_selectors';\r\nimport ImageCard from './ImageCard/ImageCard';\r\n\r\nimport \"./IteamListQuestion.css\";\r\n\r\nconst osName = platform();\r\n\r\nconst IteamListQuestion = ({ id, question, \r\n    countQuestions,\r\n    isModalOpen,\r\n    goToPrevQuestion=()=>{}, \r\n    goToNextQuestion=()=>{},\r\n    giveAnswer=()=>{},\r\n    changeModal = () => {}, \r\n    getUserAnswer = () => {} \r\n}) => {\r\n    \r\n    const answerOptions = useSelector(getAnswerOptionsById(question.idQuestion))\r\n\r\n    return (\r\n        <PanelWrapper id={id} isOneColumn={true}\r\n            onHeaderClose={id === 0 ? goToPrevQuestion:false}\r\n            onHeaderBack={goToPrevQuestion}\r\n            headerText={id+1 + \" из \" + countQuestions}\r\n            headerIcon={<Icon28ChevronDownOutline style={{ transform: `rotate(${isModalOpen ? '180deg' : '0'})`, transition:\"0.5s\" }} />}\r\n            headerClick={changeModal}\r\n        >\r\n\r\n            <div className=\"IteamListQuestion\">\r\n\r\n                <ImageCard\r\n                    imageName={question.image.imageName}\r\n                    sourceImageLink={question.image.sourceImageLink}\r\n                />\r\n\r\n                <Text weight=\"regular\" className=\"IteamListQuestion__question\">{question.textQuestion}</Text> \r\n\r\n                <div className=\"IteamListQuestion__answer-options\">\r\n                    {\r\n                        answerOptions.map((answer, i) => (\r\n                            <ButtonWrapper\r\n                                onClick={() => {\r\n                                    giveAnswer(question.idQuestion, answer.idAnswerOption)\r\n                                    goToNextQuestion()\r\n                                    // setNotActiveBackgoundToAnswerButton();\r\n                                }}\r\n                                text={answer.text}\r\n                                className={`IteamListQuestion__answer ${(getUserAnswer(question.idQuestion) === answer.idAnswerOption)?\"IteamListQuestion__answer-active\":\"\"}` }\r\n                            >\r\n                            </ButtonWrapper>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </PanelWrapper>\r\n    )\r\n};\r\n\r\nexport default IteamListQuestion;\r\n","import React from \"react\";\r\nimport { ANDROID, IOS, ModalPageHeader, useAdaptivity, usePlatform, PanelHeaderButton, PanelHeaderClose, ViewWidth } from \"@vkontakte/vkui\";\r\nimport './ModalPageHead.css'\r\nimport { isTitleCentre } from \"../../help\";\r\nimport { Icon24Dismiss } from \"@vkontakte/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurWidth } from \"../../Additional/selectors\";\r\n\r\n\r\nconst ModalPageHead = ({text, onClose = () => {}}) => {\r\n\r\n    let textAlign = isTitleCentre(useSelector(getCurWidth)).text;\r\n    const { viewWidth } = useAdaptivity();\r\n    const isDesktop = !(viewWidth >= ViewWidth.SMALL_TABLET);    \r\n    return(\r\n        <ModalPageHeader\r\n            // separator={false}\r\n            // visor={true}\r\n            // transparent={true}\r\n            right={isDesktop && <Icon24Dismiss className=\"ModalPageHead__button-close\" onClick={onClose}/>}\r\n            left={isDesktop && <PanelHeaderClose className=\"ModalPageHead__button-pug\"/>}\r\n        >\r\n         <div className=\"ModalPageHead__inside\" style={{textAlign}}>\r\n            {text}\r\n        </div>\r\n        </ModalPageHeader>\r\n    )\r\n}\r\n\r\nexport default ModalPageHead","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getCurWidth } from './Additional/selectors';\r\nimport { QUESTION_NOT_ANSWERED } from './NotUI/Data/consts';\r\n\r\nexport const isTitleCentre = (curWidth) => {\r\n    return({\r\n    // stub:curWidth >= 370 ? <div style={{width:\"90px\"}}>{element} </div> :element,\r\n    text:curWidth >= 370 ? \"center\" : \"start\"\r\n    })\r\n}\r\n\r\nexport const getWidthInfo = (curWidth) => {\r\n\r\n    if(curWidth>1280){\r\n        return {colNumber:\"s\", maxWidth:\"1500px\"}\r\n    }\r\n    else if (curWidth>560){\r\n        return {colNumber:\"m\", maxWidth:\"1280px\"}\r\n    }\r\n    else {\r\n        return {colNumber:\"l\", maxWidth:\"560px\"}\r\n    } \r\n}\r\n\r\nexport const getAnswersResultSurvey = (survey) => {\r\n    let arrQuestions = survey.subset\r\n\r\n    let score = 0;\r\n    const total = arrQuestions.length;\r\n\r\n    arrQuestions.map((question)=>{\r\n        for(let i=0;i<question.answerOptions.length;i++){\r\n            if ( (question.userAnswer !== QUESTION_NOT_ANSWERED) && (question.userAnswer.idAnswerOption === question.answerOptions[i].idAnswerOption) && (question.answerOptions[i].score === 1)){\r\n                score++;\r\n            }\r\n        }\r\n    })\r\n\r\n    return{\r\n        score:score,\r\n        total:total\r\n    }\r\n}\r\n\r\nexport const getAnswersResultEra = (era) => {\r\n    let arrSurveys = era.subset\r\n\r\n    let score = 0;\r\n    const total = arrSurveys.length;\r\n\r\n    arrSurveys.map((survey)=>{\r\n        let surveyResult = getAnswersResultSurvey(survey)\r\n        if(surveyResult.score === surveyResult.total){\r\n            score++;\r\n        }\r\n    })\r\n\r\n    return{\r\n        score:score,\r\n        total:total\r\n    }\r\n}\r\n\r\n// Получить все эры\r\n// Получить результаты конкретной эры\r\n// Опросник получить\r\n// Результат опросника\r\n//  ","import { Alert } from \"@vkontakte/vkui\"\r\nimport React from 'react';\r\nimport './AlertWrapper.css'\r\n\r\nconst AlertWrapper = ({header, description, leftText, children, leftFunc = () => { }, rightText, rightFunc = () => { }, onClose = () => { }}) => {\r\n  // console.log(leftText)\r\n  return(\r\n    <Alert    \r\n      header={header}\r\n      description={description}\r\n      actionsLayout=\"horizontal\"\r\n      onClose={onClose}\r\n      actions={[{\r\n          title: `${leftText}`,\r\n          autoclose: true,\r\n          mode: 'cancel',\r\n          action: () => leftFunc()\r\n        }, {\r\n          title: `${rightText}`,\r\n          autoclose: true,\r\n          mode: 'destructive',\r\n          action: () => rightFunc(),\r\n        }]}\r\n      >\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default AlertWrapper","import { Div, ModalPage, SimpleCell } from \"@vkontakte/vkui\";\r\nimport './ModalPageForListQuestions.css'\r\nimport React from 'react';\r\nimport ModalPageHead from \"../../../components/ModalPageHead/ModalPageHead\";\r\nimport { QUESTION_NOT_ANSWERED } from \"../../../NotUI/Data/consts\";\r\n\r\nconst ModalPageForListQuestions = ({id,arrQuestions,\r\n    changeModal=()=>{},\r\n    goToCurrentQuestion=()=>{}, \r\n    finishSurvey=()=>{},\r\n    getUserAnswer=()=>{}\r\n\r\n}) => {\r\n\r\n    return(\r\n        <ModalPage \r\n            id={id}\r\n            settlingHeight={100}\r\n            header={\r\n                <ModalPageHead text=\"Вопросы\" onClose={changeModal}></ModalPageHead>\r\n            }>\r\n            <Div>\r\n                {\r\n                    arrQuestions.map((question,i) => (\r\n                        <SimpleCell \r\n                            key={i}\r\n                            onClick={() => {goToCurrentQuestion(i); changeModal()}}\r\n                            className={`ListQuestions__modal-el ${getUserAnswer(question.idQuestion) !== QUESTION_NOT_ANSWERED ? 'ListQuestions__modal-el_answered':''}`}\r\n                            >\r\n                            <div className=\"ListQuestions__modal-el__text\">\r\n                                {i+1}) {question.textQuestion}\r\n                            </div>\r\n                        </SimpleCell>\r\n                    ))\r\n                    \r\n                }\r\n                <SimpleCell\r\n                    hasActive={false}\r\n                    onClick={ () => {finishSurvey()}}\r\n                    className=\"ListQuestions__modal-el\">\r\n                    <div className=\"ListQuestions__modal-el__finish-btn\">\r\n                    Завершить\r\n                    </div>\r\n                </SimpleCell>\r\n            </Div>\r\n        </ModalPage>\r\n    )\r\n}\r\n\r\nexport default ModalPageForListQuestions\r\n\r\n\r\n","export const SET_INDEX_ERA = \"SET_INDEX_ERA\"\r\nexport const SET_INDEX_SURVEY = \"SET_INDEX_SURVEY\"\r\nexport const SET_INDEX_QUESTION = \"SET_INDEX_QUESTION\"\r\n\r\nexport const SAVE_USER_ANSWERS = \"SAVE_USER_ANSWERS\"\r\nexport const QUESTION_NOT_ANSWERED = null;\r\n\r\nexport const SET_STATIC_DATA_FROM_SERVER = \"SET_STATIC_DATA_FROM_SERVER\"","import { View, Panel, Spinner, ScreenSpinner } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport './LoadingPanel.css'\r\n\r\n\r\nconst LoadingPanel = ({id}) => {\r\n\r\n    return(\r\n        <Panel id ={id}>\r\n            <div className=\"LoadingPanel\">\r\n                <svg className=\"LoadingPanel__spinnerBox_spinner\">\r\n                    <polyline className=\"stroke-still\" points=\"0,0 90,0 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                    <polyline className=\"stroke-still\" points=\"0,0 0,90 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n\r\n                        <svg x=\"28.5\" y=\"26.5\" width=\"33\" height=\"37\" viewBox=\"0 0 33 37\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path className=\"stroke-text text-animation\" stroke-width=\"1.5\" d=\"M5.02966 7.09C5.02966 5.254 4.77766 3.904 4.27366 3.04C3.76966 2.14 2.76166 1.69 1.24966 1.69H0.169664V0.609999H5.02966C6.36166 0.609999 7.35166 0.789998 7.99966 1.15C8.68366 1.474 9.16966 2.086 9.45766 2.986C9.74566 3.886 9.88966 5.254 9.88966 7.09V31.39L27.1697 0.609999H32.0297V36.25H27.1697V5.47L9.88966 36.25H5.02966V7.09Z\"/>\r\n                        </svg>\r\n                    <polyline class=\"line-cornered stroke-animation\" points=\"0,0 90,0 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                    <polyline class=\"line-cornered stroke-animation\" points=\"0,0 0,90 90,90\" stroke-width=\"10\" fill=\"none\"></polyline>\r\n                </svg>\r\n            </div>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default LoadingPanel","import { View,ModalRoot,ModalPage,List, SimpleCell, Div, usePlatform, ViewWidth, Group } from '@vkontakte/vkui';\r\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\r\nimport IteamListQuestion from './IteamListQuestion/IteamListQuestion';\r\nimport ModalPageHead from '../../components/ModalPageHead/ModalPageHead';\r\nimport vkBridge from '@vkontakte/vk-bridge'\r\nimport AlertWrapper from '../../components/AlertWrapper/AlertWrapper';\r\nimport './ListQuestions.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getArrQuestions, getCurQuestions, getCurSurveyId } from '../../Selectors/data_selectors';\r\nimport { getSurveyFinishedGoToResult } from '../../Selectors/listSurvey_selectors';\r\nimport { downloadImagesArr, sendUserAnswersToServer } from '../../NotUI/Server/server';\r\nimport ModalPageForListQuestions from './ModalPageForListQuestions/ModalPageForListQuestions';\r\nimport { QUESTION_NOT_ANSWERED } from '../../NotUI/Data/consts';\r\nimport LoadingPanel from '../../components/LoadingPanel/LoadingPanel'\r\n\r\n\r\nconst MODAL_ID = \"MODAL_ID\"\r\nconst PANEL_LOADING = \"PANEL_LOADING-0\"\r\n\r\n\r\nconst ListQuestions = ({id,\r\n    goToLoadingViewAction=()=>{}, \r\n    goToViewListQuestionsAction=()=>{},\r\n    goToPollViewAction=()=>{}, \r\n    goToResultViewAction=()=>{}, \r\n    goToListSurveyAction=()=>{},\r\n    saveUserAnswersAction=()=>{}\r\n}) => {\r\n\r\n\r\n    //Получение данных\r\n    const arrQuestions = useSelector(getCurQuestions)\r\n    const curSurveyId = useSelector(getCurSurveyId)\r\n    const dispath = useDispatch();\r\n\r\n    //Внутренняя навигация\r\n    const [activePanel, setActivePanel] = useState(PANEL_LOADING);\r\n    const setIndexQuestionAndHistory = (newIndex) => {\r\n        setActivePanel(newIndex)\r\n        changeHistory(newIndex)\r\n    }\r\n\r\n    //Подгрузка картинок\r\n    useEffect(()=>{\r\n\r\n        let imageArr = [];\r\n        arrQuestions.map((question)=>{\r\n            imageArr.push(question.image.imageName)\r\n        })\r\n\r\n        downloadImagesArr(imageArr)\r\n        .then((res)=>{\r\n            setActivePanel(0)\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    //Работа с ответами\r\n    const [userAnswers, setUserAnswers] = useState([])\r\n    const [userAnswersFinishValidator, setUserAnswersFinishValidator] = useState(false)\r\n\r\n    const giveAnswer = (idQuestion, idAnswerOption) => {\r\n        let isAnswerBe = false;\r\n\r\n        let newUserAnswers = Object.assign([],userAnswers);\r\n\r\n        for(let i=0;i<userAnswers.length;i++){\r\n            if(userAnswers[i].idQuestion === idQuestion){\r\n                isAnswerBe = true\r\n                newUserAnswers[i].idAnswerOption = idAnswerOption\r\n            }\r\n        }\r\n\r\n        if(!isAnswerBe){\r\n            newUserAnswers.push({idQuestion:idQuestion, idAnswerOption:idAnswerOption})\r\n        }\r\n        setUserAnswers(newUserAnswers)\r\n    }\r\n    const getUserAnswer = (idQuestion) =>{\r\n\r\n        let idAnswer = QUESTION_NOT_ANSWERED;\r\n\r\n        userAnswers.map((userAnswer)=>{\r\n            if(userAnswer.idQuestion === idQuestion){\r\n                idAnswer = userAnswer.idAnswerOption\r\n            }\r\n        })\r\n\r\n        return idAnswer\r\n    }\r\n\r\n    const getPrepareDataToSend = () =>{\r\n        let userAnswersForState = Object.assign([],userAnswers)\r\n\r\n\r\n        for(let i=0;i<userAnswersForState.length;i++){\r\n            userAnswersForState[i] = {\r\n                idSurvey:curSurveyId,\r\n                idQuestion:userAnswersForState[i].idQuestion,\r\n                idAnswerOption:userAnswersForState[i].idAnswerOption\r\n            }\r\n        }\r\n\r\n        return userAnswersForState\r\n    }\r\n\r\n    const saveAnswersToState = () => {dispath(saveUserAnswersAction(getPrepareDataToSend()))}\r\n    const saveAnswersToServer= () => sendUserAnswersToServer(getPrepareDataToSend())\r\n\r\n\r\n\r\n    //Внешняя навигация\r\n    const goToLoadingView = () => dispath(goToLoadingViewAction)\r\n    const goToResultView = () => dispath(goToResultViewAction())\r\n    const goToPollView = () => {\r\n        dispath(goToListSurveyAction())\r\n        dispath(goToPollViewAction())\r\n    }\r\n    const goToViewListQuestions = () =>dispath(goToViewListQuestionsAction())\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //Навигация\r\n    const checkIndex = (indexQuestion) =>{\r\n\r\n        //Если мы переходим к этому индексу, значит пользователь ответил на посл вопрос и надо завершать опрос\r\n        if(indexQuestion===arrQuestions.length){\r\n            finishSurvey()\r\n            return false;\r\n        }\r\n\r\n        if(indexQuestion === -1){\r\n            openCloseListQuestionsAleret()\r\n            return false;\r\n        }\r\n\r\n        return true\r\n    }\r\n    const goToCurrentQuestion = (indexQuestion)=>{\r\n\r\n        if(checkIndex(indexQuestion)){\r\n            changeHistory(indexQuestion)\r\n            setActivePanel(indexQuestion)\r\n        }\r\n    }\r\n    const goToPrevQuestion=()=> goToCurrentQuestion(activePanel - 1)\r\n    const goToNextQuestion=()=> goToCurrentQuestion(history.length)\r\n\r\n\r\n\r\n    //Окончание опроса\r\n    const cheakAllAnswered = () => {\r\n        return arrQuestions.length === userAnswers.length;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(userAnswersFinishValidator){\r\n            if(!cheakAllAnswered()){\r\n                openFinishAlert();\r\n            }else{\r\n                finishSurveyWithOutCheck()\r\n            }\r\n        }\r\n\t}, [userAnswersFinishValidator]);\r\n\r\n    const finishSurvey = () => {\r\n        setUserAnswersFinishValidator(true)\r\n    }\r\n\r\n    const finishSurveyWithOutCheck = () =>{\r\n        saveAnswersToState()\r\n        saveAnswersToServer()\r\n        goToResultView()\r\n    }\r\n\r\n\r\n\r\n    // История\r\n    const [history, setHistory] = useState([0]);\r\n    const changeHistory = (nextIndex) => {\r\n\r\n        //Установка истории\r\n        let his = [];\r\n        for(let i=0;i<nextIndex+1;i++){\r\n            his.push(i)\r\n        }\r\n        setHistory(his)\r\n\r\n\r\n        //vkBridge\r\n        if (nextIndex === 0) {\r\n            vkBridge.send('VKWebAppDisableSwipeBack');\r\n            }\r\n        else{\r\n            vkBridge.send('VKWebAppEnableSwipeBack');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Работа с модальным окном\r\n    const [isModalOpen, setModalOpen] = useState(null)\r\n    const changeModal = () => {\r\n        if(isModalOpen === MODAL_ID){\r\n            setModalOpen(null)\r\n        }\r\n        else{\r\n            setModalOpen(MODAL_ID)\r\n        }\r\n    }\r\n    const modal = (\r\n        <ModalRoot activeModal={isModalOpen} onClose={changeModal}>\r\n            <ModalPageForListQuestions\r\n                id={MODAL_ID}\r\n                arrQuestions={arrQuestions}\r\n                getUserAnswer={getUserAnswer}\r\n                changeModal={changeModal}\r\n                goToCurrentQuestion={goToCurrentQuestion}\r\n                finishSurvey={finishSurvey}\r\n            />\r\n        </ModalRoot>\r\n    )\r\n\r\n\r\n\r\n    //Alert\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    const openCloseListQuestionsAleret = () => {\r\n\r\n        setAlert(\r\n            <AlertWrapper\r\n                header=\"Уверены, что хотите выйти?\"\r\n                leftText={\"Отмена\"}\r\n                rightText={\"Выйти\"}\r\n                rightFunc={()=>{goToPollView()}}\r\n                onClose={()=>{setAlert(null)}}\r\n            >\r\n            </AlertWrapper>\r\n    )}\r\n    const openFinishAlert = () => {       \r\n        setAlert(\r\n\r\n            <AlertWrapper\r\n                header=\"Вы ответили не на все вопросы\"\r\n                leftText={\"Отмена\"}\r\n                rightText={\"Завершить\"}\r\n                rightFunc={ () => {\r\n                    finishSurveyWithOutCheck();\r\n                }}\r\n                onClose={()=>{ \r\n                    setUserAnswersFinishValidator(false)\r\n                    setAlert(null)\r\n                }}\r\n            >\r\n            </AlertWrapper>\r\n\r\n    )}\r\n\r\n\r\n\r\n    // const setNotActiveBackgoundToAnswerButton = () =>{\r\n    //     let panel = document.getElementsByName(createIdActivePanel(indexQuestion));\r\n    //     const buttons = panel[0].getElementsByClassName(\"IteamListQuestion__answer\");\r\n\r\n    //     for(let i=0;i<buttons.length;i++){\r\n    //         buttons[i].style.backgroundColor = \"var(--main-second-bg-color)\"\r\n    //     }\r\n    // }\r\n\r\n\r\n    return (\r\n        <View id={id} \r\n            activePanel={activePanel} \r\n            modal={modal} \r\n            history={history} \r\n            onSwipeBack={goToPrevQuestion}\r\n            popout={alert}\r\n            >\r\n            \r\n            <LoadingPanel id={PANEL_LOADING}/>\r\n            \r\n            {\r\n                arrQuestions.map((question, i) =>(\r\n                    <IteamListQuestion\r\n                        id={i}            \r\n                        question={question}\r\n                        countQuestions={arrQuestions.length}\r\n                        isModalOpen={isModalOpen}\r\n\r\n                        giveAnswer={giveAnswer}\r\n                        goToNextQuestion={goToNextQuestion}\r\n                        goToPrevQuestion={goToPrevQuestion}\r\n                        getUserAnswer={getUserAnswer}\r\n\r\n                        changeModal={changeModal}\r\n\r\n                        // setNotActiveBackgoundToAnswerButton={setNotActiveBackgoundToAnswerButton}\r\n                    />\r\n                ))\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ListQuestions;\r\n","import { Panel } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ListCard from '../../components/ListCard/ListCard'\r\n\r\nimport './ListQuizes.css';\r\nimport Header from '../../components/Header/Header';\r\nimport PanelWrapper from '../../components/PanelWrapper/PanelWrapper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAnswersResultSurvey } from '../../help';\r\nimport { getCurEra, getResultCurSurveys } from '../../Selectors/data_selectors';\r\n\r\nconst ListQuizes = ({ id, surveys,\r\n    onBack = () => { }, \r\n    createOnClickItemQuizesBtn = (index) => null , \r\n    createOnClickItemQuizes = (index) => null \r\n}) => {\r\n\r\n\r\n    // const info = surveys.map((survey)=>{\r\n    //     return{\r\n    //         russianName: survey.russianName,\r\n    //         percentProgress: surveyResult.score,\r\n    //         numberOfQuestions: surveyResult.total,\r\n    //         imageName: survey.image.imageName,\r\n    //         description: survey.description,\r\n    //         isBtnNeed: surveyResult.score !== 0 ? true : false\r\n    //     }\r\n    // })\r\n\r\n    const surveysResult = useSelector(getResultCurSurveys);\r\n    const title = useSelector(getCurEra).russianName\r\n    let surveyResult = {};\r\n\r\n    const info = surveys.map((survey)=>{\r\n        surveyResult = surveysResult.filter((surveyResult)=>surveyResult.idSurvey === survey.idSurvey)[0]\r\n        return{\r\n            russianName: survey.russianName,\r\n            percentProgress: surveyResult.score,\r\n            numberOfQuestions: surveyResult.total,\r\n            imageName: survey.image.imageName,\r\n            description: survey.description,\r\n            isBtnNeed: surveyResult.score !== 0 ? true : false \r\n        }\r\n    })\r\n    \r\n    const cardClick = (indexSurvey) => () =>{\r\n        createOnClickItemQuizes(surveys[indexSurvey].idSurvey)\r\n    }\r\n\r\n    const cardBtnClick = (indexSurvey) => () =>{\r\n        createOnClickItemQuizesBtn(surveys[indexSurvey].idSurvey)\r\n    }\r\n\r\n    return (\r\n        <PanelWrapper id={id} headerText={title} onHeaderBack={onBack} isHeaderFixed={true}>\r\n\r\n            <div className=\"ListQuizes\">\r\n                <ListCard\r\n                    info={info}\r\n                    cardClick={cardClick}\r\n                    btnCardClick={cardBtnClick}\r\n                />\r\n            </div>\r\n\r\n        </PanelWrapper>\r\n    );\r\n}\r\n\r\nexport default ListQuizes;\r\n","import LoadingPanel from \"../../components/LoadingPanel/LoadingPanel\"\r\nimport React from 'react'\r\n\r\nconst SpinnerView = ({id}) => {\r\n    return(\r\n        <LoadingPanel id={id}/>\r\n    )\r\n}\r\nexport default SpinnerView","// логика переключения между View\r\nexport const VIEW_ID_START_WINDOW = \"VIEW_ID_START_WINDOW\";\r\nexport const VIEW_ID_LIST_AGE_AND_QUIZES = \"VIEW_ID_LIST_AGE_AND_QUIZES\";\r\nexport const VIEW_ID_LIST_QUESTIONES = \"VIEW_ID_LIST_QUESTIONES\";\r\nexport const VIEW_ID_RESULT = \"VIEW_ID_RESULT\";\r\nexport const VIEW_ID_ANSWERS_QUESTIONS = \"VIEW_ID_ANSWERS_QUESTIONS\";\r\n\r\nexport const VIEW_ID_SPINNER = \"VIEW_ID_SPINNER\";\r\n\r\n","import * as viewsConsts from './Constants'\r\n\r\n\r\nexport const App_goToLoadingtView = () => {\r\n    return{\r\n        type:viewsConsts.VIEW_ID_SPINNER\r\n    }\r\n}\r\n\r\nexport const App_goToStartView = () => {\r\n    return{\r\n        type:viewsConsts.VIEW_ID_START_WINDOW\r\n    }\r\n}\r\n\r\n\r\nexport const App_goToPollView = () => {\r\n    return{\r\n        type:viewsConsts.VIEW_ID_LIST_AGE_AND_QUIZES\r\n    }\r\n}\r\n\r\nexport const App_goToSurveyView = () => {\r\n    return{\r\n        type:viewsConsts.VIEW_ID_LIST_QUESTIONES\r\n    }\r\n}\r\n\r\nexport const App_goToResultView = () => {\r\n    return{\r\n        type:viewsConsts.VIEW_ID_RESULT\r\n    }\r\n}\r\n","import {SET_INDEX_ERA, SET_INDEX_SURVEY, SAVE_USER_ANSWERS, SET_STATIC_DATA_FROM_SERVER, SET_INDEX_QUESTION} from './consts'\r\n\r\nexport const Data_setIndexEra = (indexEra) => {\r\n    return{\r\n        type:SET_INDEX_ERA,\r\n        CurEraId:indexEra\r\n    }\r\n}\r\n\r\nexport const Data_setIndexSurvey = (indexSurvey) => {\r\n    return{\r\n        type:SET_INDEX_SURVEY,\r\n        CurSurveyId: indexSurvey\r\n    }\r\n}\r\n\r\nexport const Data_setIndexQuestion= (indexQuestion) => {\r\n    return{\r\n        type:SET_INDEX_QUESTION,\r\n        CurQuestionId: indexQuestion\r\n    }\r\n}\r\n\r\nexport const Data_saveUserAnswers = (userAnswers) => {\r\n    return{\r\n        type:SAVE_USER_ANSWERS,\r\n        userAnswers:userAnswers\r\n    }\r\n}\r\n\r\nexport const Data_setStaticDataFromServer = (data) => {\r\n    return{\r\n        type:SET_STATIC_DATA_FROM_SERVER,\r\n        data:data\r\n    }\r\n}\r\n","import * as viewsConsts from './consts'\r\n\r\nexport const PoolView_goToListAge = () => {\r\n    return{\r\n        type:viewsConsts.GO_TO_LIST_AGE\r\n    }\r\n}\r\n\r\nexport const PoolView_goToListSurvey = () => {\r\n    return{\r\n        type:viewsConsts.GO_TO_LIST_SURVEY\r\n    }\r\n}","export const GO_TO_LIST_AGE = \"GO_TO_LIST_AGE\";\r\nexport const GO_TO_LIST_SURVEY = \"GO_TO_LIST_SURVEY\";\r\n\r\nexport const LIST_AGE_PANEL = \"LIST_AGE_PANEL\";\r\nexport const LIST_SURVEYS_PANEL = \"LIST_SURVEYS_PANEL\";","export const selectCurrentView = (state) =>{\r\n    return state.App.currentView\r\n}","export const getFirstPanel = (state) =>{\r\n    return state.PoolView.firstPanel\r\n}","import React, { useEffect, useState } from 'react';\r\nimport vkBridge from '@vkontakte/vk-bridge'\r\nimport { View } from \"@vkontakte/vkui\"\r\nimport ListAge from \"../ListAge/ListAge\"\r\nimport ListQuizes from \"../ListQuizes/ListQuizes\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurEra, getCurSurveys, getEras, getErasResults, getIndexEra, getIndexEraAndSurvey, getIndexSurvey, getSurveys, getSurveysResults } from '../../Selectors/data_selectors';\r\nimport { LIST_AGE_PANEL, LIST_SURVEYS_PANEL } from './consts';\r\nimport { getFirstPanel } from '../../Selectors/pollView_selectors';\r\n\r\n\r\nconst PoolView = ({id, \r\n\tsetIndexEraAction=()=>{}, \r\n\tsetIndexSurveyAction=()=>{}, \r\n\tgoToSurveyViewAction=()=>{},\r\n\tgoToResultViewAction=()=>{},\r\n\tgoToListAgeAction=()=>{}\r\n\t}) => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\r\n\t//Получение данных\r\n\tconst eras = useSelector(getEras)\r\n\tconst erasResults = {tottal:0, score:0}\r\n\r\n\t\r\n\tconst surveys = useSelector(getCurSurveys)\r\n\r\n\t// const indexEra = useSelector(getIndexEra);\r\n\tconst mustCurrentPanel = useSelector(getFirstPanel); //Проверяем какая панелька должна быть открыта по приказу извне\r\n\r\n\tconst [activePanel, setActivePanel] = useState(mustCurrentPanel);\r\n\r\n\tconst setIndexEra = (indexEra) => dispatch(setIndexEraAction(indexEra))\r\n\tconst setIndexSurvey = (indexSurvey) => dispatch(setIndexSurveyAction(indexSurvey))\r\n\tconst goToViewListQuestions = () => dispatch(goToSurveyViewAction())\r\n\tconst goToResultView = () => dispatch(goToResultViewAction())\r\n\tconst goToListAge = () => dispatch(goToListAgeAction())\r\n\r\n\t// История\r\n\tconst [history, setHistory] = useState([LIST_AGE_PANEL]);\r\n\r\n\tconst goBackInHistory = () => {\r\n\t\tlet his = history;\r\n\t\this.pop()\r\n\t\tif (activePanel === LIST_AGE_PANEL) {\r\n\t\t\tvkBridge.send('VKWebAppEnableSwipeBack');\r\n\t\t}\r\n\t\tsetHistory(his)\r\n\t\tsetActivePanel(history[history.length - 1])\t\r\n\t}\r\n\r\n\tconst goForwardInHistory = (view) => { \r\n\t\tlet his = history;\r\n\t\this.push(view);\r\n\t\tif (activePanel === LIST_AGE_PANEL) {\r\n\t\t\tvkBridge.send('VKWebAppDisableSwipeBack');\r\n\t\t\tsetHistory(his)\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetHistory(his)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Проверяем какая панелька должна быть открыта по приказу извне\r\n\tuseEffect(() => {\r\n\t\tif(mustCurrentPanel === LIST_AGE_PANEL){\r\n\t\t\tsetActivePanel(LIST_AGE_PANEL)\r\n\t\t\tsetHistory([LIST_AGE_PANEL])\r\n\t\t}\r\n\t\tif(mustCurrentPanel === LIST_SURVEYS_PANEL){\r\n\t\t\tsetActivePanel(LIST_SURVEYS_PANEL)\r\n\t\t\tsetHistory([LIST_AGE_PANEL, LIST_SURVEYS_PANEL])\r\n\r\n\t\t\t//Сбрасываем значение начальное панели на значение по умолчанию (панель эр)\r\n\t\t\tgoToListAge()\r\n\t\t}\r\n\t}, []);\r\n\r\n\t\r\n\tconst onBackListQuizes = () => {\r\n\t\tgoBackInHistory(LIST_AGE_PANEL)\r\n\t}\r\n\r\n\tconst createOnClickItemAge = (indexEra) => {\r\n\t\tsetIndexEra(indexEra);\r\n\t\tgoForwardInHistory(LIST_SURVEYS_PANEL);\r\n\t\tsetActivePanel(LIST_SURVEYS_PANEL);\r\n\t}\r\n\r\n\tconst createOnClickItemQuizes = (indexSurvey) => {\r\n\t\tsetIndexSurvey(indexSurvey)\r\n\t\tgoToViewListQuestions()\r\n\t}\r\n\r\n\tconst createOnClickItemQuizesBtn = (indexSurvey) => {\r\n\t\tsetIndexSurvey(indexSurvey)\r\n\t\tgoToResultView()\r\n\t}\r\n\r\n        \r\n    return(\r\n        <View \r\n            id={id}\r\n            activePanel={activePanel}\r\n            onSwipeBack={goBackInHistory}\r\n            history={history}\r\n        >\r\n\r\n        <ListAge \r\n            id={LIST_AGE_PANEL} \r\n            eras={eras} \r\n\t\t\terasResults={erasResults}\r\n            createOnClickItemAge={createOnClickItemAge}\r\n        />\r\n\r\n        <ListQuizes \r\n            id={LIST_SURVEYS_PANEL} \r\n            surveys={surveys} \r\n            onBack={onBackListQuizes} \r\n            createOnClickItemQuizes={createOnClickItemQuizes}\r\n\t\t\tcreateOnClickItemQuizesBtn={createOnClickItemQuizesBtn}\r\n        />\r\n\r\n    </View>\r\n    )\r\n}\r\n\r\nexport default PoolView","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport vkBridge from '@vkontakte/vk-bridge'\r\n\r\nimport { AdaptivityProvider, ModalRoot, AppRoot, ConfigProvider, ModalPage, Header, Panel, PanelHeader, Platform, Root, Scheme, SimpleCell, SplitCol, SplitLayout, View, usePlatform } from '@vkontakte/vkui';\r\n\r\nimport \"./App.css\";\r\nimport StartWindow from '../views/StartWindow/StartWindow';\r\nimport ListAge from '../views/ListAge/ListAge';\r\nimport Result from '../views/Result/Result'\r\nimport ListQuestions from '../views/ListQuestions/ListQuestions';\r\n// import Result from '..//Result/Result';\r\nimport ListQuizes from '../views/ListQuizes/ListQuizes';\r\n// import AnswersQuestions from '..//AnswersQuestions/AnswersQuestions';\r\n// import Modal from '..//ListQuestions/IteamListQuestion/Modal/Modal';\r\n// import ModalPageHead from '../../components/ModalPageHead/ModalPageHead';\r\nimport SpinnerView from '../views/SpinnerView/SpinnerView';\r\n// import testClass from '..//StartWindow/StartWindow';\r\n// import axios from 'axios';\r\n\r\nimport TestView from '../components/TestView/TestView';\r\nimport { Provider, useDispatch, useSelector } from 'react-redux';\r\n\r\n//Actions\r\nimport * as appNavigate from './Actions'\r\nimport * as server from '../NotUI/Server/server'\r\nimport * as data from '../NotUI/Data/actions'\r\nimport * as poolView from '../views/PoolView/actions'\r\n\r\n//Views id\r\nimport * as viewsId from './Constants'\r\n\r\n// import * as additionalActions from '../Additional/actions'\r\n\r\nimport {selectCurrentView} from '../Selectors/app_selectors'\r\nimport PoolView from '../views/PoolView/PoolView';\r\nimport { getIsFirstOpen } from '../Selectors/data_selectors';\r\n\r\n// import './svg/book.svg'\r\n// import './svg/imgLoader.svg'\r\n\r\n\r\n// import svgContacts from '..//StartWindow/contacts.svg';\r\n\r\n// setActiveView(null)\r\nconst App = ({results, MAX_SCORE, \r\n\tsavePercentQuiz = (indexAge, indexQuiz, percentProgress) => {}}) => {\r\n\t\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// логика переключения между View\r\n\tconst VIEW_ID_START_WINDOW = \"VIEW_ID_START_WINDOW\";\r\n\tconst VIEW_ID_LIST_AGE_AND_QUIZES = \"VIEW_ID_LIST_AGE_AND_QUIZES\";\r\n\tconst VIEW_ID_LIST_QUESTIONES = \"VIEW_ID_LIST_QUESTIONES\";\r\n\tconst VIEW_ID_RESULT = \"VIEW_ID_RESULT\";\r\n\tconst VIEW_ID_ANSWERS_QUESTIONS = \"VIEW_ID_ANSWERS_QUESTIONS\";\r\n\r\n\tconst VIEW_ID_SPINNER = \"VIEW_ID_SPINNER\";\r\n\r\n\t// логика переключения между Панелями\r\n\tconst PANEL_ID_LIST_AGE = \"PANEL_ID_LIST_AGE\";\r\n\tconst PANEL_ID_LIST_QUIZES = \"PANEL_ID_LIST_QUIZES\";\r\n\r\n\r\n\tconst [activeViewOld, setActiveView] = useState(VIEW_ID_LIST_AGE_AND_QUIZES);\r\n\tconst [activePanel, setActivePanel] = useState(PANEL_ID_LIST_AGE);\r\n\tconst [curWidth, setCurWidth] = useState(0)\r\n\r\n\tconst goToViewStartWindow = () => setActiveView(VIEW_ID_START_WINDOW);\r\n\tconst goToViewListAgeAndQuizes = () =>setActiveView(VIEW_ID_LIST_AGE_AND_QUIZES)\r\n\tconst goToViewListQuestions = () => setActiveView(VIEW_ID_LIST_QUESTIONES);\r\n\tconst goToViewResult = () => setActiveView(VIEW_ID_RESULT);\r\n\tconst goToViewAnswersQuestions = () => setActiveView(VIEW_ID_ANSWERS_QUESTIONS);\r\n\tconst goToViewSpinner = () => setActiveView(VIEW_ID_SPINNER);\r\n\r\n\tconst goToPanelListAge = () => setActivePanel(PANEL_ID_LIST_AGE);\r\n\t// const goToPanelListQuizes = () => setActivePanel(PANEL_ID_LIST_QUIZES);\r\n\r\n\t// логика хранения индексов\r\n\tconst [indexAge, setIndexAge] = useState(0);\r\n\tconst [indexQuiz, setIndexQuiz] = useState(0);\r\n\tconst [indexResuslt, setIndexResult] = useState(0);\r\n\r\n\t// логика хранения ответов\r\n\tconst [indexesAnswers, setIndexesAnswers] = useState([-1,-1,-1,-1,-1,-1,-1,-1]);\r\n\r\n\t// первый раз открываем Result\r\n\tconst [isFirstOpenResult, setIsFirstOpenResult] = useState(true);\r\n\r\n\r\n\tconst [eras, setEras] = useState(\r\n\t[\r\n\t\t{\r\n\t\t\trussianName: \"Эра1\",\r\n\t\t\tdescription: \"Описание Эры1\",\r\n\t\t\timage: {\r\n\t\t\t\timageName: \"1.jpg\",\r\n\t\t\t\tsourceImageLink: \"Ссылка на картинку1\"\r\n\t\t\t},\r\n\t\t\tsubset: [\r\n\t\t\t\t{\r\n\t\t\t\t\trussianName: \"Опрос2\",\r\n\t\t\t\t\tdescription: \"ОписаниеОпроса2\",\r\n\t\t\t\t\timage: {\r\n\t\t\t\t\t\timageName: \"2.jpg\",\r\n\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку2\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsubset: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tidQuestion: 2,\r\n\t\t\t\t\t\t\ttextQuestion: \"Вопрос2\",\r\n\t\t\t\t\t\t\timage: {\r\n\t\t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t\t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tanswerOptions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tidAnswerOption: 8,\r\n\t\t\t\t\t\t\t\t\tidQuestion: 2,\r\n\t\t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t\t\t\t\t\t\t\t\tscore: \"0\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tidAnswerOption: 7,\r\n\t\t\t\t\t\t\t\t\tidQuestion: 2,\r\n\t\t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t\t\t\t\t\t\t\t\tscore: \"0\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tidAnswerOption: 6,\r\n\t\t\t\t\t\t\t\t\tidQuestion: 2,\r\n\t\t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t\t\t\t\t\t\t\t\tscore: \"1\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tidAnswerOption: 5,\r\n\t\t\t\t\t\t\t\t\tidQuestion: 2,\r\n\t\t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t\t\t\t\t\t\t\t\tscore: \"0\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tuserAnswer: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tserver.downloadData().then(info=>{\r\n\t\t\tdispatch(data.Data_setStaticDataFromServer(info))\r\n\r\n\t\t\tlet erasImages = [];\r\n\t\t\tinfo.Eras.map((era)=>{\r\n\t\t\t\terasImages.push(era.image.imageName)\r\n\t\t\t})\r\n\r\n\t\t\t// Загрузка картинок эр\r\n\t\t\tserver.downloadImagesArr(erasImages).then(res=>{\r\n\r\n\t\t\t\tlet surveysImages = [];\r\n\t\t\t\tinfo.Surveys.map((survey)=>{\r\n\t\t\t\t\tsurveysImages.push(survey.image.imageName)\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// Загрузка картинок эпох\r\n\t\t\t\tserver.downloadImagesArr(erasImages).then(res=>{\r\n\r\n\t\t\t\t\t// Загрузка svg-шек\r\n\t\t\t\t\tserver.downloadDefaultIMG().then((res)=>{\r\n\t\t\t\t\t\tif(info.UserData.isFirstOpen){\r\n\t\t\t\t\t\t\tdispatch(appNavigate.App_goToStartView())\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tdispatch(appNavigate.App_goToPollView())\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(err=>console.log(err))\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err=>console.log(err))\r\n\r\n\t\t\t})\r\n\t\t\t.catch(err=>console.log(err))\r\n\r\n\t\t})\r\n\t\t.catch(err=>console.log(err))\r\n\t\t//Обновляем текущую ширину\r\n\r\n\t\t// additionalActions.Additional_setCurHeight(document.getElementById('root').scrollHeight)\r\n\t\t// additionalActions.Additional_setCurWidth(document.getElementById('root').scrollWidth)\r\n\t}, []);\r\n\r\n\r\n\r\n\t\tconst downloadQuizeImage = async (index) => {\r\n\t\t\tawait server.downloadImagesArr(eras[indexAge].subset[index].subset)\r\n\t\t\tgoToViewListQuestions()\r\n\t\t}\r\n\r\n\r\n\t//Функции для StartWindow\r\n\t\r\n\t\tconst onClickStartWindow = () => {\r\n\t\t\tgoToViewListAgeAndQuizes();\r\n\t\t}\t\r\n\r\n\r\n\t// Функции для ListAgeAndQuizes\r\n\r\n\t\t// Выбор эпохи\r\n\t\tconst createOnClickItemAge = (index) => () => {\r\n\t\t\tgoForwardInHistory(PANEL_ID_LIST_QUIZES);\r\n\t\t\tsetIndexAge(index);\r\n\t\t\t// goToPanelListQuizes();\r\n\t\t}\r\n\r\n\t\t// Выбор опроса\r\n\t\tconst createOnClickItemQuizes = (index) => () => {\r\n\t\t\tsetIndexQuiz(index);\r\n\t\t\tgoToViewListQuestions();\r\n\t\t\t// goToViewSpinner();\r\n\t\t\t// downloadQuizeImage(index)\r\n\t\t\t// if(!eras[indexAge].subset[index].isImageDownloaded)\r\n\t\t\t// {\r\n\t\t\t// \tgoToViewSpinner();\r\n\t\t\t// \tdownloadQuizeImage(index)\r\n\t\t\t// \teras[indexAge].quizzes[index].isImageDownloaded = true;\r\n\t\t\t// }\r\n\t\t\t\t\r\n\t\t\t// else\r\n\t\t\t// \tgoToViewListQuestions();\r\n\t\t}\r\n\r\n\t\t// Возврат от выбранной эпохи к выбору эпохи\r\n\t\tconst onBackListQuizes = () => {\r\n\t\t\tsetIsFirstOpenResult(true);\r\n\t\t\tgoBackInHistory(PANEL_ID_LIST_AGE)\r\n\t\t}\r\n\r\n\t\t//Возврат от результатов к выбору эпохи\r\n\t\tconst goToViewListAgeAndQuizesFromResult = () => {\r\n\t\t\tgoBackInHistory()\r\n\t\t\tgoToViewListAgeAndQuizes()\r\n\t\t}\r\n\r\n\t\t//Загружены ли в кеш картинки эпох и опросов (не картинки внутри опросов, их загружают отдельно)\r\n\t\tconst [isImageDownloaded, setIsImageDownloaded] = useState(false)\r\n\r\n\r\n\r\n\t// История для ListAgeAndQuizes\r\n\r\n\t\tconst [history, setHistory] = useState([PANEL_ID_LIST_AGE]);\r\n\t\tconst goBackInHistory = () => {\r\n\t\t\tlet his = history;\r\n\t\t\this.pop()\r\n\t\t\tif (activePanel === PANEL_ID_LIST_AGE) {\r\n\t\t\t\tvkBridge.send('VKWebAppEnableSwipeBack');\r\n\t\t\t}\r\n\t\t\tsetHistory(his)\r\n\t\t\tsetActivePanel(history[history.length - 1])\t\r\n\t\t}\r\n\r\n\t\tconst goForwardInHistory = (view) => { \r\n\t\t\tlet his = history;\r\n\t\t\this.push(view);\r\n\t\t\tif (activePanel === PANEL_ID_LIST_AGE) {\r\n\t\t\t\tvkBridge.send('VKWebAppDisableSwipeBack');\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetHistory(his)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tconst onFinishListQuestions = (indexesAnswers) => {\r\n\t\t\tsetIndexesAnswers(indexesAnswers);\r\n\r\n\t\t\tlet sum = 0;\r\n\t\t\tfor(let i=0;i<indexesAnswers.length;i++){\r\n\t\t\t\tif(indexesAnswers[i] !== -1){\r\n\t\t\t\t\tsum+=eras[indexAge].subset[indexQuiz].subset[i].answerOptions[indexesAnswers[i]].score;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\teras[indexAge].subset[indexQuiz].percentProgress = sum;\r\n\t\t\tif(eras[indexAge].subset[indexQuiz].numberOfQuestions === sum){\r\n\t\t\t\teras[indexAge].subset = eras[indexAge].percentProgress + 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetIndexResult(sum)\r\n\t\t\tgoToViewResult();\r\n\t\t}\r\n\r\n\t// функции для Result\r\n\t\tconst onBackResult = () => {\r\n\t\t\tgoToViewListAgeAndQuizes();\r\n\t\t}\r\n\r\n\t\tconst onAgainResult = () => {\r\n\t\t\tgoToViewListQuestions();\r\n\t\t}\r\n\t\t\r\n\t\tconst onGoToAnswersQuestionResult = () => {\r\n\t\t\tgoToViewAnswersQuestions()\r\n\t\t}\r\n\r\n\t// функции для AnswersQuestions\r\n\t\tconst onBackAnswersQuestions = () => {\r\n\t\t\tgoToViewResult();\r\n\t\t}\r\n\r\n\r\n\r\n\tconst onBackListAge = () => {\r\n\t\tgoBackInHistory(PANEL_ID_LIST_AGE)\r\n\t\tgoToViewListAgeAndQuizes()\r\n\t}\r\n\r\n\tconst activeView = useSelector(selectCurrentView)\r\n\t// console.log(eras)\r\n\r\n\treturn (\r\n\t<ConfigProvider isWebView={true}>\r\n\t\t<AdaptivityProvider>\r\n\t\t\t<AppRoot>\r\n\t\t\t\t<SplitLayout header={null}>\r\n\t\t\t\t\t<SplitCol animate={true}>\r\n\t\t\t\t\t\t\t<Root activeView={activeView}>\r\n\r\n\t\t\t\t\t\t\t\t<StartWindow \r\n\t\t\t\t\t\t\t\t\tid={viewsId.VIEW_ID_START_WINDOW} \r\n\t\t\t\t\t\t\t\t\tgoToPollView={appNavigate.App_goToPollView}/>\r\n\r\n\t\t\t\t\t\t\t\t<PoolView\r\n\t\t\t\t\t\t\t\t\tid={viewsId.VIEW_ID_LIST_AGE_AND_QUIZES}\r\n\t\t\t\t\t\t\t\t\tsetIndexEraAction={data.Data_setIndexEra}\r\n\t\t\t\t\t\t\t\t\tsetIndexSurveyAction={data.Data_setIndexSurvey}\r\n\t\t\t\t\t\t\t\t\tgoToSurveyViewAction={appNavigate.App_goToSurveyView}\r\n\t\t\t\t\t\t\t\t\tgoToResultViewAction={appNavigate.App_goToResultView}\r\n\t\t\t\t\t\t\t\t\tgoToListAgeAction={poolView.PoolView_goToListAge}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<ListQuestions \r\n\t\t\t\t\t\t\t\t\tid={viewsId.VIEW_ID_LIST_QUESTIONES}\r\n\t\t\t\t\t\t\t\t\tonFinish={onFinishListQuestions}\r\n\t\t\t\t\t\t\t\t\tgoToListSurveyAction={poolView.PoolView_goToListSurvey}\r\n\t\t\t\t\t\t\t\t\tgoToPollViewAction={appNavigate.App_goToPollView}\r\n\t\t\t\t\t\t\t\t\tgoToResultViewAction={appNavigate.App_goToResultView}\r\n\t\t\t\t\t\t\t\t\tgoToLoadingViewAction={appNavigate.App_goToLoadingtView}\r\n\t\t\t\t\t\t\t\t\tgoToViewListQuestions={appNavigate.App_goToSurveyView}\r\n\r\n\t\t\t\t\t\t\t\t\tsaveUserAnswersAction={data.Data_saveUserAnswers}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\t\t\tid={VIEW_ID_RESULT}\r\n\t\t\t\t\t\t\t\t\tgoToSurveyViewAction={appNavigate.App_goToSurveyView}\r\n\t\t\t\t\t\t\t\t\tgoToPollViewAction={appNavigate.App_goToPollView}\r\n\t\t\t\t\t\t\t\t\tsetCurSurveyIdAction={data.Data_setIndexSurvey}\r\n\t\t\t\t\t\t\t\t\tsetCurQuestionIdAction={data.Data_setIndexQuestion}\r\n\t\t\t\t\t\t\t\t\t// percent={results[indexResuslt].percent}\r\n\t\t\t\t\t\t\t\t\t// year={results[indexResuslt].year}\r\n\t\t\t\t\t\t\t\t\t// historicalEvent={results[indexResuslt].historicalEvent}\r\n\t\t\t\t\t\t\t\t\t// quizes={eras[indexAge].quizzes}\r\n\t\t\t\t\t\t\t\t\t// questions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\t\t// indexAge={indexAge}\r\n\t\t\t\t\t\t\t\t\t// eras={eras}\r\n\t\t\t\t\t\t\t\t\t// indexQuiz={indexQuiz}\r\n\t\t\t\t\t\t\t\t\t// indexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\t\t// createOnClickItemAge={createOnClickItemAge}\r\n\t\t\t\t\t\t\t\t\t// onBack={onBackResult}\r\n\t\t\t\t\t\t\t\t\t// createOnClickItemQuizes={createOnClickItemQuizes}\r\n\r\n\t\t\t\t\t\t\t\t\t// onAgain={onAgainResult}\r\n\t\t\t\t\t\t\t\t\t// onGoToAnswersQuestion={onGoToAnswersQuestionResult}\r\n\t\t\t\t\t\t\t\t\t// goToViewListAndQuizes={goToViewListAgeAndQuizesFromResult}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t{/* <Result\r\n\t\t\t\t\t\t\t\t\tid={viewsId.VIEW_ID_RESULT}\r\n\t\t\t\t\t\t\t\t\tpercent={results[indexResuslt].percent}\r\n\t\t\t\t\t\t\t\t\tquizes={eras[indexAge].quizzes}\r\n\t\t\t\t\t\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\t\tindexAge={indexAge}\r\n\t\t\t\t\t\t\t\t\teras={eras}\r\n\t\t\t\t\t\t\t\t\tindexQuiz={indexQuiz}\r\n\t\t\t\t\t\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\r\n\t\t\t\t\t\t\t\t\tonAgain={onAgainResult}\r\n\t\t\t\t\t\t\t\t\tgoToViewListAndQuizes={goToViewListAgeAndQuizesFromResult}\r\n\r\n\t\t\t\t\t\t\t\t\tisFirstOpenResult={isFirstOpenResult}\r\n\t\t\t\t\t\t\t\t\tsetIsFirstOpenResult={setIsFirstOpenResult}\r\n\t\t\t\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t\t\t\t{/* <ListQuestions \r\n\t\t\t\t\t\t\t\t\tid={VIEW_ID_LIST_QUESTIONES}\r\n\t\t\t\t\t\t\t\t\tcurWidth={curWidth}\r\n\t\t\t\t\t\t\t\t\tarrQuestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\t\tonBack={onBackListQuestions}\r\n\t\t\t\t\t\t\t\t\tonFinish={onFinishListQuestions}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\t\t\tid={VIEW_ID_RESULT}\r\n\t\t\t\t\t\t\t\t\tpercent={results[indexResuslt].percent}\r\n\t\t\t\t\t\t\t\t\tyear={results[indexResuslt].year}\r\n\t\t\t\t\t\t\t\t\thistoricalEvent={results[indexResuslt].historicalEvent}\r\n\t\t\t\t\t\t\t\t\tquizes={eras[indexAge].quizzes}\r\n\t\t\t\t\t\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\t\tindexAge={indexAge}\r\n\t\t\t\t\t\t\t\t\teras={eras}\r\n\t\t\t\t\t\t\t\t\tindexQuiz={indexQuiz}\r\n\t\t\t\t\t\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\t\tcreateOnClickItemAge={createOnClickItemAge}\r\n\t\t\t\t\t\t\t\t\tonBack={onBackResult}\r\n\t\t\t\t\t\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\r\n\t\t\t\t\t\t\t\t\tonAgain={onAgainResult}\r\n\t\t\t\t\t\t\t\t\tonGoToAnswersQuestion={onGoToAnswersQuestionResult}\r\n\t\t\t\t\t\t\t\t\tgoToViewListAndQuizes={goToViewListAgeAndQuizesFromResult}\r\n\r\n\t\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\t\tid={VIEW_ID_RESULT}\r\n\t\t\t\t\t\t\t\tpercent={results[indexResuslt].percent}\r\n\t\t\t\t\t\t\t\tyear={results[indexResuslt].year}\r\n\t\t\t\t\t\t\t\thistoricalEvent={results[indexResuslt].historicalEvent}\r\n                                titleAge={eras[indexAge].title}\r\n\t\t\t\t\t\t\t\tquizes={eras[indexAge].quizzes}\r\n\t\t\t\t\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\tindexAge={indexAge}\r\n\t\t\t\t\t\t\t\teras={eras}\r\n\t\t\t\t\t\t\t\tindexQuiz={indexQuiz}\r\n\t\t\t\t\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\tcreateOnClickItemAge={createOnClickItemAge}\r\n\t\t\t\t\t\t\t\tonBack={onBackResult}\r\n\t\t\t\t\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\r\n\t\t\t\t\t\t\t\t{/* <AnswersQuestions\r\n\t\t\t\t\t\t\t\t\tid={VIEW_ID_ANSWERS_QUESTIONS}\r\n\t\t\t\t\t\t\t\t\tquestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\t\t\t\t\t\tindexesAnswers={indexesAnswers}\r\n\t\t\t\t\t\t\t\t\tonBack={onBackAnswersQuestions}\r\n\t\t\t\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t\t\t\t<SpinnerView\r\n\t\t\t\t\t\t\t\t\tid={\"VIEW_ID_SPINNER\"}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</SpinnerView>\r\n\r\n\t\t\t\t\t\t\t</Root>\r\n\t\t\t\t\t\t{/* </Provider> */}\r\n\t\t\t\t\t</SplitCol>\r\n\t\t\t\t</SplitLayout>\r\n\t\t\t</AppRoot>\r\n    \t</AdaptivityProvider>\r\n    </ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import imagePetr1 from \"../../img/ageRussianEmpire/Petr1/Petr1.png\";\r\n\r\nimport imgExample from \"../../img/ageRussianEmpire/Petr1/img1.png\";\r\n\r\nimport ababa from \"../../img/ageRussianEmpire/main.png\"\r\n\r\nconst quizPetr1 = {\r\n    title: \"Император Пётр I\",\r\n    description:\"Росси́йская импе́рия (рус. дореф. Россійская имперія; также Всеросси́йская импе́рия, ца́рская Росси́я) — государство, существовавшее в период с 22 октября (2 ноября) 1721 года до Февральской революции и провозглашения республики в сентябре 1917 года Временным правительством.\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 8,\r\n    isImageDownloaded: false,\r\n    imageSrc: imagePetr1,\r\n    questions: [\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: imgExample,\r\n            questionText: \"Основная причина дефолта 98-го года?3156156566644684684\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Лопнул пузырь ГКО (Государственные краткосрочные облигации)\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Отказ западных партнёров выдать кредит\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Решение о срочном запуске печатного станка в “ускоренном режиме\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 2\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 3\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 4\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 5\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 6\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 7\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 8\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default quizPetr1;\r\n","import mainImage from \"../../img/ageRussianEmpire/Petr1/Petr1.png\";\r\nimport quizPetr1 from \"./quizPetr1\";\r\nimport quizTheEraOfPalaceCoups from \"./quizTheEraOfPalaceCoups\";\r\n\r\nconst ageRussianEmpire = {\r\n    title: \"Государство московское\",\r\n    shortTitle: \"Империя\",\r\n    imageSrc: mainImage,\r\n    description:\"Росси́йская импе́рия (рус. дореф. Россійская имперія; также Всеросси́йская импе́рия, ца́рская Росси́я) — государство, существовавшее в период с 22 октября (2 ноября) 1721 года до Февральской революции и провозглашения республики в сентябре 1917 года Временным правительством.\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    // numberOfQuestions:8,\r\n    quizzes: [\r\n        quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizPetr1,\r\n        // quizTheEraOfPalaceCoups\r\n    ]\r\n}\r\n\r\nexport default ageRussianEmpire;\r\n","import imageTheEraOfPalaceCoups from \"../../img/ageRussianEmpire/The era of palace coups/The era of palace coups.png\";\r\n\r\nconst quizTheEraOfPalaceCoups = {\r\n    title: \"Эпоха Дворцовых переворотов\",\r\n    imageSrc: imageTheEraOfPalaceCoups,\r\n    questions: []\r\n}\r\n\r\nexport default quizTheEraOfPalaceCoups;\r\n","import imgMain from \"../../img/ageRF/MMM/MMM.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/MMM/MMM.jpg\";\r\n\r\nconst quizMMM = {\r\n    title: \"МММ\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default quizMMM;\r\n","import imgMain from \"../../img/ageRF/Privatization/Privatization.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/Privatization/Privatization.jpg\";\r\n\r\nconst Privatization = {\r\n    title: \"Приватизация\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default Privatization;\r\n","import imgMain from \"../../img/ageRF/TheChechenWar/TheChechenWar.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/TheChechenWar/TheChechenWar.jpg\";\r\n\r\nconst TheChechenWar = {\r\n    title: \"Чеченская война\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default TheChechenWar;\r\n","import imgMain from \"../../img/ageRF/TheWhiteHouse/TheWhiteHouse.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/TheWhiteHouse/TheWhiteHouse.jpg\";\r\n\r\nconst TheWhiteHouse = {\r\n    title: \"Белый дом\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default TheWhiteHouse;\r\n","import imgMain from \"../../img/ageRF/Yeltsin/Yeltsin.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/Yeltsin/Yeltsin.jpg\";\r\n\r\nconst Yeltsin = {\r\n    title: \"Ельцин\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    isImageDownloaded: false,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            overSideImg: img1,\r\n            questionText: \"Текст вопроса\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Вариант 1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Вариант 2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Вариант 3\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default Yeltsin;\r\n","import ageRussianEmpire from \"./ageRussianEmpire/ageRussianEmpire\";\r\nimport ageRF from \"./ageRF/ageRF\";\r\n\r\nimport results from \"./results/results\";\r\n\r\nconst store = {\r\n    eras: [\r\n        ageRussianEmpire,\r\n        ageRF,\r\n        // ageRF,\r\n        // ageRussianEmpire,\r\n        // ageRussianEmpire,\r\n        // ageRussianEmpire\r\n    ],\r\n\r\n    results,\r\n\r\n    // isAgeAndQuizesDownloaded:false,\r\n\r\n    MAX_SCORE: 8\r\n}\r\n\r\nexport default store;\r\n\r\nconst calculatePercentAge = (era) => {\r\n    const numberOfPassedQuizes = era.quizzes.reduce((sum, quiz) => {\r\n        return quiz.percentProgress !== undefined ?sum + 1 :sum\r\n    }, 0);\r\n\r\n    return Math.round(numberOfPassedQuizes / era.length * 100);\r\n}\r\n\r\nexport const savePercentQuiz = (indexAge, indexQuiz, percentProgress) => {\r\n    store.eras = store.eras.map((era, i) => {\r\n        if (i !== indexAge) {\r\n            return era;\r\n        }\r\n\r\n        if (era.quizzes[indexQuiz].percentProgress === undefined) {\r\n            era.quizzes[indexQuiz].percentProgress = percentProgress;\r\n        } else {\r\n            era.quizzes[indexQuiz].percentProgress = Math.max(percentProgress, era.quizzes[indexQuiz].percentProgress);\r\n        }\r\n\r\n        era.percentProgress = calculatePercentAge(era);\r\n\r\n        return {...era};\r\n    })\r\n}\r\n","import imgMain from \"../../img/ageRF/Zero/Zero.jpg\";\r\n\r\nimport img1 from \"../../img/ageRF/Zero/img1.jpg\";\r\nimport img2 from \"../../img/ageRF/Zero/img2.jpg\";\r\nimport img3 from \"../../img/ageRF/Zero/img3.jpg\";\r\nimport img4 from \"../../img/ageRF/Zero/img4.jpg\";\r\nimport img5 from \"../../img/ageRF/Zero/img5.jpg\";\r\nimport img6 from \"../../img/ageRF/Zero/img6.jpg\";\r\nimport img7 from \"../../img/ageRF/Zero/img7.jpg\";\r\nimport img8 from \"../../img/ageRF/Zero/img8.jpg\";\r\n\r\nconst Zero = {\r\n    title: \"Нулевые\",\r\n    description:\"Описание\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 8,\r\n    imageSrc: imgMain,\r\n    questions: [\r\n        {\r\n            imageSrc: img1,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/kristoffer-trolle/40588411473/in/photolist-24QEdDP-8rou28-6YCCCD-7qqiVa-Myr8m3-NgsQHD-7CvC46-CKME9U-29DVmgL-XwC2eb-pCHa79-aebVAb-P3CF5L-rUE8tQ-HHkMwh-JeKXGC-TxLrF2-D8c4fL-21osJCo-bRGzWx-NAHSP-DNeEib-y5oQTb-eDDNiF-uEyuJi-e4WqDn-rDQWNB-215SXvJ-o7Ny3d-fxJyd-r9hjk7-EesQgh-25MtnPo-H5673U-rxHCGA-qj9wvw-r3BfHh-4wCRXA-CvASK4-tkHTtd-f9geAA-bnVBLy-dmpbvA-rafVkw-923mtQ-r2Wikr-dNaA5i-amkjYy-dTHUqH-K6Wp4P\",\r\n            questionText: \"Почему 25 мая 2005 года в Москве многим людям пришлось возвращаться домой пешком?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Из-за взрыва в метро\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Произошла авария в энергосистеме\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Противники монетизации льгот перекрыли дороги\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img2,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/brieuc/2991630124/in/photolist-5ymTpJ-5ZJcJE-4kASi1-NoSdv-5yi5Ec-pXrD2-7fPmpj-3AdyY-4CPjhT-gDc7J-srznLQ-d4MKmq-56SVMa-bpyXtS-4vcES-2fUXwQ-29p2FSm-qcPEhP-5DXQGC-5DTzcH-5noFUF-6raagH-6hZM5z-5ZyvB5-8Tyg7-6XiSgc-4RtyeS-5M8mj9-6z5WDK-oKqCP3-bLLfP4-xgqxs-AE6Fi-ju4wrN-pkCDA-sztQL-b71xan-5kkWtd-9BTx9a-9BWukL-5GMdDZ-4V56W1-5hVhCa-6n5fV9-768R64-DCrNF1-2jNRATr-2fq1HPd-Ld5ujp-qdcjg2\",\r\n            questionText: \"Почему 25 мая 2005 года в Москве многим людям пришлось возвращаться домой пешком?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"2001\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"2004\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2008\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img3,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/32322040@N06/50576826581/in/photolist-2k4istp-QoDBgD-xgDuU3-2jASiTV-QJUB67-2iuNpzh-2ehiLwT-dcDsdB-2iNsXkD-2iuQdMq-25aqNt6-2iWYGAu-nZdgyD-2iLADAh-2iDR6zt-2j7GkRF-QBsgF6-2iUTKSn-cRmUJ1-cRmULh-cRmUGd-i3eUEZ-2irfvgQ-urWciH-2k4isum-2jjTez5-2hhHymA-2i5LXcJ-8FnKmY-DG4X-2yYiA6-2z33Th-2z2nej-2z33Vu-2z2n2y-2z2n3w-2z343m-2gyhZ5E-2yYV9o-2z2n1o-3RzVuS-2z33Z9-2iMKS3w-2yYVbE-2yWydf-d4o3mb-22oZfLu-2yVUwC-2yVUsG-2yVUvN\",\r\n            questionText: \"Что происходило с 23 по 26 октября 2002 года в Москве?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Саммит «большой восьмёрки»\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Газовый конфликт между Россией и Украиной\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Захват заложников в Театральном центре на Дубровке\",\r\n                    score: 1\r\n                }\r\n            ]\r\n        },        \r\n        {\r\n            imageSrc: img4,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/sibekokke/1117587017/in/photolist-2GKVFF-4ArWj3-4ygBrh-AnVpq6-7HGaTv-GgzTog-Bkkgre-4YjV7o-4YfEBe-4YjUNs-4YjVid-4YfEje-AJvfft-8dMR6q-4ygBs7-5WQmfd-AnVrBR-Bi2yGf-ALPoRR-2j2GjKs-4wBMzC-91qfBY-dwKhcg-A9EDFy-8hazk-HNsZa4-26J5X2S-5PRtEX-2krvCEx-5PRtp4-osfhkr-AP18e-5PRtLK-B6wMW4-gLPvM-FxkA8-8Bf55K-4nFYWF-emPbDW-ruNTSk-aTbG8-gh5hni-5EbEEj-6TCsp-6z3eJ-5FaTYA-5F6ArR-5FaTyq-nskxq-MXNhw9\",\r\n            questionText: \"Что произошло в августе 2000 года, когда вещание большинства российских телеканалов на Москву и Московскую область было приостановлено, а три человека погибли?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Захват НТВ\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Погром на Манежной площади\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Пожар на Останкинской телебашне \",\r\n                    score: 1\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img5,\r\n            linkOriginPhoto: \"\",\r\n            questionText: \"С этим местом связана трагедия, произошедшая 17 августа 2009 года. Что это?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"АЭС Фукусима–1\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Саяно–Шушенская ГЭС \",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"АЭС Три–Майл–Айленд\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img6,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/zapthedingbat/5531724951/in/photolist-9qPx78-9qSnz3-o8hRRG-o8gKNx-9qPp7n-ir7oD-opuQqP-9qSnao-9qSwzG-orwxyZ-2iyguJu-JWvMub-K6GPFT-4g1yNz-2iBjUJe-9qPoo2-2iz1sjb-CEYF1-5kQnpy-orwGNv-orw8Ga-9qSnjC-o8igvK-opumr2-9qPoF2-5kQmFs-o8hTy9-opLMti-9qPovZ-9qPoGT-onKE5f-opuCFM-9qSndd-9qPpNX-opMna6-onK7Mq-o8hdnq-opMdSK-9qPobp-9qSp3q-9qSq3j-4UKAC3-opLKaF-9qSnuL-orwZXk-9qPpZH-9qSoP7-orwQPa-9qSwyo-onKs8j\",\r\n            questionText: \"Что произошло в апреле 2000 года?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Завершились активные боевые действия Второй чеченской войны\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Избрание В. Путина президентом РФ\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Арест Михаила Ходорковского\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img7,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/pedrosz/49669484811/in/photolist-2iF86nM-2jk9zix-2jpG2vB-2iyfWEn-2iH9LAh-2iDf1xj-2iFLyQe-2jkLbtb-2jCHgRr-2jA15Uq-2jr8eXe-2iEisj4-2iz1sjb-2izAGFg-2iD1St6-EdzN4R-2g9GhyY-2dJcKUK-24ssb7a-2i3eGHC-2cp7FMA-ffie9A-ff3Yhi-2iCfHbL-ECRTvP-2jFbsyv-CnrC6x-296vjMN-2extTv2-2hZdqf7-EjWwZq-2iCt4RR-ffiaou-A5RQhb-HKMLB2-ffiea9-2gN8Agy-ffiaps-ffiapf-ff3Q2X-ff3U6p-21qQHWo-2gsXy7H-nkxYsz-FnKro6-CT88Vh-2gY5VHz-KVUtkj-RnxoCJ-N27twc\",\r\n            questionText: \"Значимое событие в 2006 в Санкт-Петербурге\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Саммит глав стран «Большой восьмёрки»\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Саммит глав стран “СНГ”\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Международный форум стран экспортёров газа\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            imageSrc: img8,\r\n            linkOriginPhoto: \"https://www.flickr.com/photos/pedrosz/49669484811/in/photolist-2iF86nM-2jk9zix-2jpG2vB-2iyfWEn-2iH9LAh-2iDf1xj-2iFLyQe-2jkLbtb-2jCHgRr-2jA15Uq-2jr8eXe-2iEisj4-2iz1sjb-2izAGFg-2iD1St6-EdzN4R-2g9GhyY-2dJcKUK-24ssb7a-2i3eGHC-2cp7FMA-ffie9A-ff3Yhi-2iCfHbL-ECRTvP-2jFbsyv-CnrC6x-296vjMN-2extTv2-2hZdqf7-EjWwZq-2iCt4RR-ffiaou-A5RQhb-HKMLB2-ffiea9-2gN8Agy-ffiaps-ffiapf-ff3Q2X-ff3U6p-21qQHWo-2gsXy7H-nkxYsz-FnKro6-CT88Vh-2gY5VHz-KVUtkj-RnxoCJ-N27twc\",\r\n            questionText: \"Что было в 2009 году в России впервые?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Евровидение\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Фестиваль нашествие\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Фестиваль хиппи\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        \r\n    ]\r\n}\r\n\r\nexport default Zero;\r\n","import mainImage from \"../../img/ageRF/ageRF.jpg\";\r\nimport MMM from \"./MMM\";\r\nimport Privatization from \"./Privatization\";\r\nimport TheChechenWar from \"./TheChechenWar\";\r\nimport TheWhiteHouse from \"./TheWhiteHouse\";\r\nimport Yeltsin from \"./Yeltsin\";\r\nimport Zero from \"./Zero\";\r\n\r\nconst ageRF = {\r\n    title: \"РФ\",\r\n    shortTitle: \"РФ\",\r\n    imageSrc: mainImage,\r\n    description:\"Росси́йская федерация\",\r\n    percentProgress: 0,\r\n    numberOfQuestions: 1,\r\n    quizzes: [\r\n        MMM,\r\n        // Privatization,\r\n        // TheChechenWar,\r\n        // TheWhiteHouse,\r\n        // Yeltsin,\r\n        // Zero\r\n    ]\r\n}\r\n\r\nexport default ageRF;","const results = [\r\n    {\r\n        percent: 0,\r\n        year: \"1700\",\r\n        historicalEvent: \"Начало Северной войны со Швецией\"\r\n    },\r\n    {\r\n        percent: 1,\r\n        year: \"1011\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 2,\r\n        year: \"1022\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 3,\r\n        year: \"1033\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 4,\r\n        year: \"1054\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 5,\r\n        year: \"1065\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 6,\r\n        year: \"1076\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 7,\r\n        year: \"1087\",\r\n        historicalEvent: \"Какое-то событие\"\r\n    },\r\n    {\r\n        percent: 8,\r\n        year: \"1108\",\r\n        historicalEvent: \"в Витичеве прошёл 2-й съезд князей Киевской Рус\"\r\n    }\r\n]\r\n\r\nexport default results;\r\n","import * as viewsConsts from './Constants';\r\n\r\n\r\nexport const initialState = \r\n{\r\n    currentView: viewsConsts.VIEW_ID_SPINNER\r\n}","export const initialState = {\r\n\r\n\tCurEraId:1,\r\n\tCurSurveyId:1,\r\n\tCurQuestionId:1,\r\n\r\n\t// UserData:{\r\n\t// \tisFirstOpen:false\r\n\t// },\r\n\r\n\tEras:\r\n\t[\r\n\t\t{\r\n\t\t\tidEra:1,\r\n\t\t\trussianName: \"Эра1\",\r\n\t\t\tdescription: \"Описание Эры1\",\r\n\t\t\timage: \r\n\t\t\t{\r\n\t\t\t\timageName: \"1.jpg\",\r\n\t\t\t\tsourceImageLink: \"Ссылка на картинку1\"\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tidEra:2,\r\n\t\t\trussianName: \"Эра2\",\r\n\t\t\tdescription: \"Описание Эры2\",\r\n\t\t\timage: \r\n\t\t\t{\r\n\t\t\t\timageName: \"2.jpg\",\r\n\t\t\t\tsourceImageLink: \"Ссылка на картинку2\"\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\tSurveys:\r\n\t[\r\n\t\t{\r\n\t\t\tidEra:1,\r\n\t\t\tidSurvey:1,\r\n\t\t\trussianName: \"Опрос1\",\r\n\t\t\tdescription: \"ОписаниеОпроса1\",\r\n\t\t\timage: \r\n\t\t\t{\r\n\t\t\t\timageName: \"1.jpg\",\r\n\t\t\t\tsourceImageLink: \"Ссылка на картинку1\"\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tidEra:1,\r\n\t\t\tidSurvey:2,\r\n\t\t\trussianName: \"Опрос2\",\r\n\t\t\tdescription: \"ОписаниеОпроса2\",\r\n\t\t\timage: \r\n\t\t\t{\r\n\t\t\t\timageName: \"2.jpg\",\r\n\t\t\t\tsourceImageLink: \"Ссылка на картинку2\"\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tidEra:2,\r\n\t\t\tidSurvey:3,\r\n\t\t\trussianName: \"Опрос3\",\r\n\t\t\tdescription: \"ОписаниеОпроса3\",\r\n\t\t\timage: \r\n\t\t\t{\r\n\t\t\t\timageName: \"3.jpg\",\r\n\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t\t\t},\r\n\t\t}\r\n\t\t\r\n\t],\r\n\r\n\tQuestions:\r\n\t[\r\n\t\t{\r\n\t\t\tidSurvey:1,\r\n\t\t\tidQuestion: 1,\r\n\t\t\ttextQuestion: \"Вопрос1\",\r\n\t\t\timage: \r\n\t\t\t{\r\n\t\t\t\timageName: \"3.jpg\",\r\n\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tidSurvey:1,\r\n\t\t\tidQuestion: 2,\r\n\t\t\ttextQuestion: \"Вопрос2\",\r\n\t\t\timage: \r\n\t\t\t{\r\n\t\t\t\timageName: \"3.jpg\",\r\n\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tidSurvey:2,\r\n\t\t\tidQuestion: 3,\r\n\t\t\ttextQuestion: \"Вопрос2\",\r\n\t\t\timage: \r\n\t\t\t{\r\n\t\t\t\timageName: \"3.jpg\",\r\n\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\tAnswerOptions:\r\n\t[\r\n\t\t{\r\n\t\t\tidQuestion: 1,\r\n\t\t\tidAnswerOption: 1,\r\n\t\t\ttext: \"Вариант4\",\r\n\t\t\tscore: 0\r\n\t\t},\r\n\t\t{\r\n\t\t\tidQuestion: 1,\r\n\t\t\tidAnswerOption: 2,\r\n\t\t\ttext: \"Вариант4\",\r\n\t\t\tscore: 0\r\n\t\t},\r\n\t\t{\r\n\t\t\tidQuestion: 1,\r\n\t\t\tidAnswerOption: 3,\r\n\t\t\ttext: \"Вариант4\",\r\n\t\t\tscore: 1\r\n\t\t},\r\n\t\t{\r\n\t\t\tidQuestion: 2,\r\n\t\t\tidAnswerOption: 4,\r\n\t\t\ttext: \"Вариант4\",\r\n\t\t\tscore: 0\r\n\t\t},\r\n\t\t{\r\n\t\t\tidQuestion: 2,\r\n\t\t\tidAnswerOption: 5,\r\n\t\t\ttext: \"Вариант4\",\r\n\t\t\tscore: 0\r\n\t\t},\r\n\t\t{\r\n\t\t\tidQuestion: 2,\r\n\t\t\tidAnswerOption: 6,\r\n\t\t\ttext: \"Вариант4\",\r\n\t\t\tscore: 1\r\n\t\t},\r\n\t\t{\r\n\t\t\tidQuestion: 3,\r\n\t\t\tidAnswerOption: 7,\r\n\t\t\ttext: \"Вариант4\",\r\n\t\t\tscore: 1\r\n\t\t},\r\n\t\t{\r\n\t\t\tidQuestion: 3,\r\n\t\t\tidAnswerOption: 8,\r\n\t\t\ttext: \"Вариант4\",\r\n\t\t\tscore: 0\r\n\t\t},\r\n\t\t{\r\n\t\t\tidQuestion: 3,\r\n\t\t\tidAnswerOption: 9,\r\n\t\t\ttext: \"Вариант4\",\r\n\t\t\tscore: 0\r\n\t\t},\r\n\r\n\t],\r\n\r\n\tUserAnswers:\r\n\t[\r\n\t\t{\r\n\t\t\tidSurvey:1,\r\n\t\t\tidQuestion:1,\r\n\t\t\tidAnswerOption:3,\r\n\t\t},\r\n\t\t{\r\n\t\t\tidSurvey:1,\r\n\t\t\tidQuestion:2,\r\n\t\t\tidAnswerOption:6,\r\n\t\t}\r\n\t]\r\n\r\n\r\n    // indexEraAndSurvey:\r\n    //     {\r\n    //         indexEra:0,\r\n    //         indexSurvey:0\r\n    //     },\r\n    // Eras:[\r\n\t// \t{\r\n\t// \t\trussianName: \"Эра1\",\r\n\t// \t\tdescription: \"Описание Эры1\",\r\n\t// \t\timage: {\r\n\t// \t\t\timageName: \"1.jpg\",\r\n\t// \t\t\tsourceImageLink: \"Ссылка на картинку1\"\r\n\t// \t\t},\r\n\t// \t\tsubset: [\r\n\t// \t\t\t{\r\n\t// \t\t\t\trussianName: \"Опрос2\",\r\n\t// \t\t\t\tdescription: \"ОписаниеОпроса2\",\r\n\t// \t\t\t\timage: {\r\n\t// \t\t\t\t\timageName: \"2.jpg\",\r\n\t// \t\t\t\t\tsourceImageLink: \"Ссылка на картинку2\"\r\n\t// \t\t\t\t},\r\n\t// \t\t\t\tsubset: [\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t\tidQuestion: 40,\r\n\t// \t\t\t\t\t\ttextQuestion: \"Вопрос2\",\r\n\t// \t\t\t\t\t\timage: {\r\n\t// \t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t// \t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t// \t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\tanswerOptions: [\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 41,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 40,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 42,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 40,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 90,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 40,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t// \t\t\t\t\t\t\t\tscore: 1\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 43,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 40,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t],\r\n\t// \t\t\t\t\t\tuserAnswer: {\r\n\t// \t\t\t\t\t\t\tidAnswerOption: 42\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t// userAnswer: null\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t\tidQuestion: 44,\r\n\t// \t\t\t\t\t\ttextQuestion: \"Вопрос3\",\r\n\t// \t\t\t\t\t\timage: {\r\n\t// \t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t// \t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t// \t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\tanswerOptions: [\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 45,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 44,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 46,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 44,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 47,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 44,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t// \t\t\t\t\t\t\t\tscore: 1\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 48,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 44,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t],\r\n\t// \t\t\t\t\t\t// userAnswer: {\r\n\t// \t\t\t\t\t\t// \tidAnswerOption: 9\r\n\t// \t\t\t\t\t\t// }\r\n\t// \t\t\t\t\t\tuserAnswer: null\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t\tidQuestion: 49,\r\n\t// \t\t\t\t\t\ttextQuestion: \"Вопрос4\",\r\n\t// \t\t\t\t\t\timage: {\r\n\t// \t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t// \t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t// \t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\tanswerOptions: [\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 50,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 49,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 51,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 49,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 52,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 49,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t// \t\t\t\t\t\t\t\tscore: 1\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 53,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 49,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t],\r\n\t// \t\t\t\t\t\tuserAnswer: {\r\n\t// \t\t\t\t\t\t\tidAnswerOption: 51\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t// userAnswer: null\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t]\r\n\t// \t\t\t},\r\n\t// \t\t\t{\r\n\t// \t\t\t\trussianName: \"Опрос3\",\r\n\t// \t\t\t\tdescription: \"ОписаниеОпроса2\",\r\n\t// \t\t\t\timage: {\r\n\t// \t\t\t\t\timageName: \"2.jpg\",\r\n\t// \t\t\t\t\tsourceImageLink: \"Ссылка на картинку2\"\r\n\t// \t\t\t\t},\r\n\t// \t\t\t\tsubset: [\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t\tidQuestion: 54,\r\n\t// \t\t\t\t\t\ttextQuestion: \"Вопрос2 Опрос3\",\r\n\t// \t\t\t\t\t\timage: {\r\n\t// \t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t// \t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t// \t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\tanswerOptions: [\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 55,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 54,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 56,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 54,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 57,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 54,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t// \t\t\t\t\t\t\t\tscore: 1\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 58,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 54,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t],\r\n\t// \t\t\t\t\t\tuserAnswer: {\r\n\t// \t\t\t\t\t\t\tidAnswerOption: 58\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t// userAnswer: null\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t\tidQuestion: 59,\r\n\t// \t\t\t\t\t\ttextQuestion: \"Вопрос3\",\r\n\t// \t\t\t\t\t\timage: {\r\n\t// \t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t// \t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t// \t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\tanswerOptions: [\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 60,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 59,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 61,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 59,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 62,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 59,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t// \t\t\t\t\t\t\t\tscore: 1\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 63,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 59,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t],\r\n\t// \t\t\t\t\t\tuserAnswer: {\r\n\t// \t\t\t\t\t\t\tidAnswerOption: 63\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t// userAnswer: null\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t]\r\n\t// \t\t\t},\r\n\t// \t\t]\r\n\t// \t},\r\n\t// \t{\r\n\t// \t\trussianName: \"Эра2\",\r\n\t// \t\tdescription: \"Описание Эры2\",\r\n\t// \t\timage: {\r\n\t// \t\t\timageName: \"1.jpg\",\r\n\t// \t\t\tsourceImageLink: \"Ссылка на картинку1\"\r\n\t// \t\t},\r\n\t// \t\tsubset: [\r\n\t// \t\t\t{\r\n\t// \t\t\t\trussianName: \"Опрос2\",\r\n\t// \t\t\t\tdescription: \"ОписаниеОпроса2\",\r\n\t// \t\t\t\timage: {\r\n\t// \t\t\t\t\timageName: \"2.jpg\",\r\n\t// \t\t\t\t\tsourceImageLink: \"Ссылка на картинку2\"\r\n\t// \t\t\t\t},\r\n\t// \t\t\t\tsubset: [\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t\tidQuestion: 64,\r\n\t// \t\t\t\t\t\ttextQuestion: \"Вопрос2\",\r\n\t// \t\t\t\t\t\timage: {\r\n\t// \t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t// \t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t// \t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\tanswerOptions: [\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 65,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 64,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 66,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 64,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 67,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 64,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t// \t\t\t\t\t\t\t\tscore: 1\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 68,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 64,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t],\r\n\t// \t\t\t\t\t\tuserAnswer: {\r\n\t// \t\t\t\t\t\t\tidAnswerOption: 67\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t// userAnswer: null\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t\tidQuestion: 69,\r\n\t// \t\t\t\t\t\ttextQuestion: \"Вопрос3\",\r\n\t// \t\t\t\t\t\timage: {\r\n\t// \t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t// \t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t// \t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\tanswerOptions: [\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 70,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 69,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 71,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 69,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 72,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 69,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t// \t\t\t\t\t\t\t\tscore: 1\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 73,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 69,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t],\r\n\t// \t\t\t\t\t\t// userAnswer: {\r\n\t// \t\t\t\t\t\t// \tidAnswerOption: 9\r\n\t// \t\t\t\t\t\t// }\r\n\t// \t\t\t\t\t\tuserAnswer: null\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t\tidQuestion: 74,\r\n\t// \t\t\t\t\t\ttextQuestion: \"Вопрос4\",\r\n\t// \t\t\t\t\t\timage: {\r\n\t// \t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t// \t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t// \t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\tanswerOptions: [\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 75,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 74,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 76,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 74,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 77,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 74,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t// \t\t\t\t\t\t\t\tscore: 1\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 78,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 74,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t],\r\n\t// \t\t\t\t\t\tuserAnswer: {\r\n\t// \t\t\t\t\t\t\tidAnswerOption: 78\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t// userAnswer: null\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t]\r\n\t// \t\t\t},\r\n\t// \t\t\t{\r\n\t// \t\t\t\trussianName: \"Опрос3\",\r\n\t// \t\t\t\tdescription: \"ОписаниеОпроса2\",\r\n\t// \t\t\t\timage: {\r\n\t// \t\t\t\t\timageName: \"2.jpg\",\r\n\t// \t\t\t\t\tsourceImageLink: \"Ссылка на картинку2\"\r\n\t// \t\t\t\t},\r\n\t// \t\t\t\tsubset: [\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t\tidQuestion: 79,\r\n\t// \t\t\t\t\t\ttextQuestion: \"Вопрос2 Опрос3\",\r\n\t// \t\t\t\t\t\timage: {\r\n\t// \t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t// \t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t// \t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\tanswerOptions: [\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 80,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 79,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 81,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 79,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 82,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 79,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t// \t\t\t\t\t\t\t\tscore: 1\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 83,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 79,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t],\r\n\t// \t\t\t\t\t\tuserAnswer: {\r\n\t// \t\t\t\t\t\t\tidAnswerOption: 83\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t// userAnswer: null\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t\tidQuestion: 84,\r\n\t// \t\t\t\t\t\ttextQuestion: \"Вопрос3\",\r\n\t// \t\t\t\t\t\timage: {\r\n\t// \t\t\t\t\t\t\timageName: \"3.jpg\",\r\n\t// \t\t\t\t\t\t\tsourceImageLink: \"Ссылка на картинку3\"\r\n\t// \t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\tanswerOptions: [\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 85,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 84,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант4\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 86,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 84,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант3\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 87,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 84,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант2\",\r\n\t// \t\t\t\t\t\t\t\tscore: 1\r\n\t// \t\t\t\t\t\t\t},\r\n\t// \t\t\t\t\t\t\t{\r\n\t// \t\t\t\t\t\t\t\tidAnswerOption: 88,\r\n\t// \t\t\t\t\t\t\t\tidQuestion: 84,\r\n\t// \t\t\t\t\t\t\t\ttext: \"Вариант1\",\r\n\t// \t\t\t\t\t\t\t\tscore: 0\r\n\t// \t\t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t],\r\n\t// \t\t\t\t\t\tuserAnswer: {\r\n\t// \t\t\t\t\t\t\tidAnswerOption: 86\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t\t// userAnswer: null\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t]\r\n\t// \t\t\t},\r\n\t// \t\t]\r\n\t// \t}\r\n\t// ],\r\n\r\n\r\n}\r\n","export const initialState = {\r\n    curWidth:0,\r\n    curHeight:0\r\n}","export const initialState = \r\n{\r\n    userAnswers: []\r\n}","import { LIST_AGE_PANEL } from \"./consts\";\r\n\r\nexport const initialState = \r\n{\r\n    firstPanel: LIST_AGE_PANEL\r\n}","import { combineReducers } from \"redux\";\r\nimport {appReducer} from './App/Redusers'\r\nimport {dataReducer} from './NotUI/Data/reducers'\r\nimport {additionalReducer} from './Additional/reducer'\r\nimport { listSurveyReducer } from \"./views/ListQuestions/reducer\";\r\nimport { poolVeiwReducer } from \"./views/PoolView/reducer\";\r\n\r\nexport const comboReducer = combineReducers({\r\n    App: appReducer,\r\n    ListSurvey: listSurveyReducer,\r\n    PoolView: poolVeiwReducer,\r\n    Data: dataReducer,\r\n    Additional: additionalReducer\r\n})","import {initialState} from './initialState'\r\nimport * as viewsConsts from './Constants'\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n\r\n    for (let viewConst in viewsConsts){\r\n        if(action.type === viewConst){\r\n            return {...state, ...{currentView:viewConst}}\r\n        }\r\n    }\r\n\r\n    return state\r\n    \r\n}","import { initialState } from \"./initialState\"\r\nimport * as consts from './consts'\r\n\r\nexport const listSurveyReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        // case consts.SURVEY_FINISHED_GO_TO_RESULT_FALSE:{\r\n        //     return {...state, ...{surveyFinishedGoToResult: false}}\r\n        // }\r\n        // case consts.SURVEY_FINISHED_GO_TO_RESULT_TRUE:{\r\n        //     return {...state, ...{surveyFinishedGoToResult: true}}\r\n        // }\r\n        case consts.GIVE_ANSWER:{\r\n            let userAnswers = state.userAnswers;\r\n            userAnswers.push(action.userAnswer)\r\n            return {...state, ...{userAnswers: userAnswers}}\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}","// export const SURVEY_FINISHED_GO_TO_RESULT_TRUE = \"SURVEY_FINISHED_GO_TO_RESULT_TRUE\"\r\n// export const SURVEY_FINISHED_GO_TO_RESULT_FALSE = \"SURVEY_FINISHED_GO_TO_RESULT_FALSE\"\r\nexport const GIVE_ANSWER = \"GIVE_ANSWER\"\r\nexport const IS_NEED_DOWNLOAD_TRUE = \"GIVE_ANSWER\"","import { initialState } from \"./initialState\"\r\nimport * as consts from './consts'\r\n\r\nexport const poolVeiwReducer = (state = initialState, action) =>{\r\n\r\n    switch(action.type){\r\n        case consts.GO_TO_LIST_AGE:{\r\n            return {...state, ...{firstPanel: consts.LIST_AGE_PANEL}}\r\n        }\r\n        case consts.GO_TO_LIST_SURVEY:{\r\n            return {...state, ...{firstPanel: consts.LIST_SURVEYS_PANEL}}\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}","import { initialState } from \"./initialState\"\r\nimport {SET_INDEX_ERA, SET_INDEX_SURVEY, SAVE_USER_ANSWERS, SET_INDEX_QUESTION, SET_STATIC_DATA_FROM_SERVER} from './consts'\r\n\r\nexport const dataReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n\r\n        case SET_INDEX_ERA:{\r\n            return {...state, ...{CurEraId: action.CurEraId}}\r\n        }\r\n\r\n        case SET_INDEX_SURVEY:{\r\n            return {...state, ...{CurSurveyId: action.CurSurveyId}}\r\n        }\r\n\r\n        case SET_INDEX_QUESTION:{\r\n            return {...state, ...{CurQuestionId: action.CurQuestionId}}\r\n        }\r\n\r\n        case SAVE_USER_ANSWERS:{\r\n            let userAnswersState = [...state.UserAnswers].filter((userAnswer)=>userAnswer.idSurvey !== state.CurSurveyId);\r\n            let userAnswers = action.userAnswers;\r\n            \r\n            if(userAnswersState === undefined){\r\n                userAnswersState = []\r\n            }\r\n\r\n            for(let i=0;i<userAnswers.length;i++){\r\n                userAnswersState.push(\r\n                    userAnswers[i]\r\n                )\r\n            }\r\n\r\n            return {...state, ...{UserAnswers:userAnswersState}}\r\n        }\r\n\r\n        case SET_STATIC_DATA_FROM_SERVER:{\r\n            const data = action.data\r\n            return {...state, ...{\r\n                // UserData:data.UserData,\r\n                Eras:data.Eras,\r\n                Surveys:data.Surveys,\r\n                Questions:data.Questions,\r\n                AnswerOptions:data.AnswerOptions,\r\n                UserAnswers:data.UserAnswers\r\n            }}\r\n        }\r\n\r\n\r\n\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}","import {SET_CUR_WIDTH, SET_CUR_HEIGHT} from './consts'\r\nimport { initialState } from './initialState'\r\n\r\nexport const additionalReducer = (state = initialState, action) => {\r\n\r\n    switch(action){\r\n        case SET_CUR_WIDTH :{\r\n            return {...state,...{curWidth:action.curWidth}}\r\n        }\r\n\r\n        case SET_CUR_HEIGHT:{\r\n            return {...state,...{curHeight:action.curHeight}}\r\n        }\r\n\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n    \r\n}","export const SET_CUR_WIDTH = \"SET_CUR_WIDTH\"\r\nexport const SET_CUR_HEIGHT = \"SET_CUR_HEIGHT\"","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App/App\";\r\n\r\nimport store, { savePercentQuiz } from \"./store/store.js\";\r\nimport { Platform } from \"@vkontakte/vkui\";\r\nimport { createStore } from \"redux\";\r\nimport {comboReducer} from './comboReducer'\r\nimport { Provider } from \"react-redux\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nbridge\r\n    .send(\"VKWebAppGetClientVersion\")\r\n    .then(data => {\r\n        if(data.platform === Platform.IOS){\r\n            bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\"});\r\n        }\r\n        else if (data.platform === Platform.ANDROID){\r\n            bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#000\",\"navigation_bar_color\":\"#000000\"});\r\n        }\r\n    })\r\n    .catch(error =>{\r\n        console.log(error)\r\n    })\r\n\r\n// const [isDownloaded, setIsDownloaded] = \r\n\r\n// const downloadImagesArr = async(arr) => {\r\n//     for(let i=0;i<arr.length;i++){\r\n//         await new Promise((resolve, reject) => {\r\n//             const img = new Image();\r\n//             img.src = arr[i].imageSrc;\r\n//             img.onload = () => {\r\n//                 resolve()\r\n//             }\r\n//         });\r\n//     }\r\n// }\r\n// const firstDownload = async () => {\t\r\n//     await downloadImagesArr(store.eras);\r\n//     for(let i=0;i<store.eras.length;i++)\r\n//     {\r\n//         await downloadImagesArr(store.eras[i].quizzes)\r\n//     }\r\n// }\r\n// firstDownload().then(()=>{\r\n//     startRender()\r\n// })\r\n\r\nconst state = createStore(comboReducer)\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={state}>\r\n        <App {...store} savePercentQuiz={savePercentQuiz}/>\r\n    </Provider>, \r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// const startRender = () =>{\r\n\r\n// }\r\n\r\n\r\nimport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/img1.f17bd5e3.png\";","module.exports = __webpack_public_path__ + \"static/media/imgLoader.59fdaa15.svg\";","module.exports = __webpack_public_path__ + \"static/media/MMM.5b367f29.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Privatization.151bf0e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TheChechenWar.6ad161bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TheWhiteHouse.034671a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Yeltsin.c735400b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Petr1.58cb079c.png\";","module.exports = __webpack_public_path__ + \"static/media/book.da748c82.svg\";"],"sourceRoot":""}