{"version":3,"sources":["panels/StartWindow/contacts.svg","panels/ListQuestions/IteamListQuestion/BottomSheet/candelabrumOpen.svg","panels/ListQuestions/IteamListQuestion/BottomSheet/candelabrumClose.svg","img/ageRussianEmpire/main.png","img/ageRussianEmpire/quizPetr1/petr.png","img/ageRussianEmpire/The era of palace coups/The era of palace coups.png","panels/StartWindow/StartWindow.js","panels/ListAge/ItemListAge/ItemListAge.js","panels/ListAge/ListAge.js","panels/ListQuizes/ItemListQuizes/ItemListQuizes.js","panels/ListQuizes/ListQuizes.js","panels/ListQuestions/IteamListQuestion/IteamListQuestion.js","panels/ListQuestions/ListQuestions.js","App.js","store/ageRussianEmpire/quizPetr1.js","store/ageRussianEmpire/quizTheEraOfPalaceCoups.js","store/store.js","store/ageRussianEmpire/ageRussianEmpire.js","index.js","img/ageRussianEmpire/quizPetr1/Картинка.png"],"names":["module","exports","StartWindow","id","onClick","activePanel","separator","visor","transparent","className","width","height","src","svgContacts","alt","ItemListAge","imageSrc","title","percentProgress","hasLeftButton","goLeft","hasRightButton","goRight","left","ListAge","eras","createOnClickItemAge","index","createIdPanel","useState","indexActivePanel","setIndexActivePanel","createGoRight","map","age","i","arrAge","key","length","ItemListQuizes","classNamePersentProgress","undefined","ListQuizes","quizes","onBack","createOnClickItemQuizes","ID_ACTIVE_PANEL","fill","quiz","osName","platform","IteamListQuestion","question","numberCurrentQuestion","countQuestions","indexAnswer","stateAnswers","lastIndexQuestion","currentIndexQuestion","goToLastQuestion","goToPrevQuestion","goToQuestionWithoutAnswer","goToNextQuestion","onFinish","isRotated","setRotate","rotateImage","IOS","overSideImg","questionImg","questionText","answerOptions","answer","text","ListQuestions","arrQuestions","totalScore","createIdActivePanel","getInitStateAnswers","substring","setStateAnswers","calculateScore","reduce","sum","dataAnswer","indexQuestion","score","setIndexQuestion","resetData","createGoToNextQuestion","maxLength","giveAnswer","createGoToPrevQuestion","setLastIndexQuestion","arr","fromIndexQuestion","toIndexQuestion","App","setUser","size","setPopout","disablePopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","activeView","setActiveView","goToViewListAge","goToViewListQuizes","indexAge","setIndexAge","indexQuiz","setIndexQuiz","shortTitle","quizzes","questions","alert","quizPetr1","imagePetr1","imgExample","quizTheEraOfPalaceCoups","imageTheEraOfPalaceCoups","store","mainImage","ReactDOM","render","getElementById","then","default"],"mappings":"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","file":"static/js/main.356f836b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/contacts.da748c82.svg\";","module.exports = __webpack_public_path__ + \"static/media/candelabrumOpen.6cafcc49.svg\";","module.exports = __webpack_public_path__ + \"static/media/candelabrumClose.22104edc.svg\";","module.exports = __webpack_public_path__ + \"static/media/main.96699d6f.png\";","module.exports = __webpack_public_path__ + \"static/media/petr.58cb079c.png\";","module.exports = __webpack_public_path__ + \"static/media/The era of palace coups.42e7310b.png\";","import { Panel, PanelHeader, View } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nimport svgContacts from './contacts.svg';\r\n\r\nimport './StartWindow.css';\r\n\r\nconst StartWindow = ({id, onClick}) => {\r\n    const ID_ACTIVE_PANEL = \"ID_ACTIVE_PANEL\";\r\n\r\n    return (\r\n        <View activePanel={ID_ACTIVE_PANEL} id={id}>\r\n            <Panel id={ID_ACTIVE_PANEL} separator={false}>\r\n                <PanelHeader\r\n                    separator={false}\r\n                    visor={false}\r\n                    transparent={true}\r\n                ></PanelHeader>\r\n\r\n                <div className=\"StartWindow\">\r\n                    <div className=\"StartWindow__container\">\r\n                        <img width=\"50\" height=\"50\" src={svgContacts} alt=\"contacts\"/>\r\n                        <h1 className=\"StartWindow__title\">Привет, друг!</h1>\r\n                        <p className=\"StartWindow__text\">\r\n                            Это приложение поможет тебе проверить свои знания в области истори родной страны. Удачи!\r\n                        </p>\r\n                        <button className=\"StartWindow__button\" onClick={onClick}>Поехали!</button>\r\n                    </div>\r\n                </div>\r\n            </Panel>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default StartWindow;","import { Panel, PanelHeader } from '@vkontakte/vkui';\r\nimport React from 'react';\r\n\r\nimport \"./ItemListAge.css\";\r\n\r\nconst ItemListAge = ({id, imageSrc, title, percentProgress, onClick,\r\n    hasLeftButton, goLeft, hasRightButton, goRight}) => {\r\n\r\n    return (\r\n        <Panel id={id}>  \r\n            <PanelHeader\r\n                className=\"ItemListAge__PanelHeader\"\r\n                left={\r\n                    <h1 className=\"ItemListAge__header\">Выбор эпохи</h1>\r\n                }\r\n                visor={true}\r\n                transparent={true}\r\n                separator={false}\r\n            ></PanelHeader>\r\n            <div className=\"ItemListAge\">\r\n                <div className=\"ItemListAge__image-wrap\">\r\n                    <img className=\"ItemListAge__image\" src={imageSrc} alt={`ItemListAge-image-${id}`}/>\r\n\r\n                    {\r\n                        hasLeftButton && \r\n                        <button onClick={goLeft} className=\"ItemListAge__arrow-button ItemListAge__arrow-button_left\"></button>\r\n                    }\r\n\r\n                    {\r\n                        hasRightButton && \r\n                        <button onClick={goRight} className=\"ItemListAge__arrow-button ItemListAge__arrow-button_right\"></button>\r\n                    }\r\n\r\n                    <h2 className=\"ItemListAge__title\">{title}</h2>\r\n                </div>\r\n\r\n                <p className=\"ItemListAge__progress\">Пройдено {percentProgress}%</p>\r\n\r\n                <button onClick={onClick} className=\"ItemListAge__button\">Открыть</button>\r\n            </div>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default ItemListAge;","import { View } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport ItemListAge from './ItemListAge/ItemListAge';\r\n\r\nconst ListAge = ({id, eras, createOnClickItemAge=index=>null}) => {\r\n    const createIdPanel = index => `${id}_${index}`;\r\n\r\n    const [indexActivePanel, setIndexActivePanel] = useState(0);\r\n\r\n    const createGoRight = (index) => () => setIndexActivePanel(index + 1);\r\n\r\n    const createGoLeft = (index) => () => setIndexActivePanel(index - 1);\r\n\r\n    return (\r\n        <View id={id} activePanel={createIdPanel(indexActivePanel)}>\r\n            {\r\n                eras.map((age, i, arrAge) => (\r\n                    <ItemListAge\r\n                        key={createIdPanel(i)}\r\n                        id={createIdPanel(i)}\r\n                        title={age.title}\r\n                        imageSrc={age.imageSrc}\r\n                        percentProgress={age.percentProgress}\r\n                        onClick={createOnClickItemAge(i)}\r\n                        hasLeftButton={i > 0}\r\n                        hasRightButton={i < arrAge.length - 1}\r\n                        goLeft={createGoLeft(i)}\r\n                        goRight={createGoRight(i)}\r\n                    />\r\n                ))\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ListAge;\r\n","import React from 'react';\r\n\r\nimport './ItemListQuizes.css';\r\n\r\nconst ItemListQuizes = ({ imageSrc, title, onClick, percentProgress }) => {\r\n    let classNamePersentProgress;\r\n\r\n    if (percentProgress === undefined) {\r\n        classNamePersentProgress = undefined;\r\n    }else if (percentProgress > 50) {\r\n        classNamePersentProgress = \"ItemListQuizes__percent_good\";\r\n    } else if (percentProgress > 25) {\r\n        classNamePersentProgress = \"ItemListQuizes__percent_normal\";\r\n    } else {\r\n        classNamePersentProgress = \"ItemListQuizes__percent_bad\";        \r\n    }\r\n\r\n    return (\r\n        <li className=\"ItemListQuizes\">\r\n            <div className=\"ItemListQuizes__image-wrap\">\r\n                <img className=\"ItemListQuizes__image\" src={imageSrc} alt={`ItemListQuizes-${title}`} />\r\n\r\n                <div className=\"ItemListQuizes__percent-wrap\">\r\n                    {\r\n                        classNamePersentProgress && \r\n                        <span className={`ItemListQuizes__percent ${classNamePersentProgress}`}>{percentProgress}%</span>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"ItemListQuizes__row-bottom\">\r\n                <h2 className=\"ItemListQuizes__title\">{title}</h2>\r\n\r\n                <button onClick={onClick} className=\"ItemListQuizes__button-play\">Играть</button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ItemListQuizes;\r\n","import { Icon24Back } from '@vkontakte/icons';\r\nimport { Panel, PanelHeader, View } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport ItemListQuizes from './ItemListQuizes/ItemListQuizes';\r\n\r\nimport './ListQuizes.css';\r\n\r\nconst ListQuizes = ({ id, title, quizes, onBack = () => { }, createOnClickItemQuizes = (index) => null }) => {\r\n    const ID_ACTIVE_PANEL = `${id}-0`;\r\n\r\n    return (\r\n        <View id={id} activePanel={ID_ACTIVE_PANEL}>\r\n            <Panel id={ID_ACTIVE_PANEL}>\r\n                <PanelHeader\r\n                    left={\r\n                        <div className=\"ListQuizes__header-left\">\r\n                            <Icon24Back onClick={onBack} fill=\"white\" />\r\n                            <h1 className=\"ListQuizes__title\">{title}</h1>\r\n                        </div>\r\n                    }\r\n                    className=\"ListQuizes__header\"\r\n                    visor={true}\r\n                    transparent={true}\r\n                    separator={false}\r\n                >\r\n                </PanelHeader>\r\n\r\n                <ul className=\"ListQuizes\">\r\n                    {\r\n                        quizes.map((quiz, i) => (\r\n                            <ItemListQuizes\r\n                                key={i}\r\n                                imageSrc={quiz.imageSrc}\r\n                                title={quiz.title}\r\n                                onClick={createOnClickItemQuizes(i)}\r\n                                percentProgress={quiz.percentProgress}\r\n                            />\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </Panel>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default ListQuizes;\r\n","import { Icon24Back, Icon28ChevronBack } from '@vkontakte/icons';\r\nimport { IOS, Panel, PanelHeader, PanelHeaderButton, platform } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport BottomSheet from './BottomSheet/BottomSheet';\r\n\r\nimport \"./IteamListQuestion.css\";\r\n\r\nconst osName = platform();\r\n\r\nconst IteamListQuestion = ({ id, question,\r\n    numberCurrentQuestion, countQuestions,\r\n    stateAnswers, indexAnswer,\r\n    lastIndexQuestion, currentIndexQuestion,\r\n    goToLastQuestion, goToQuestionWithoutAnswer,\r\n    goToPrevQuestion, goToNextQuestion,\r\n    onFinish = () => { } }) => {\r\n\r\n    const [isRotated, setRotate] = useState(false);\r\n\r\n    const rotateImage = () => setRotate(!isRotated);\r\n\r\n    return (\r\n        <Panel id={id} separator={false}>\r\n            <PanelHeader\r\n                left={\r\n                    <>\r\n                        <PanelHeaderButton onClick={goToPrevQuestion}>\r\n                            {osName === IOS ? <Icon28ChevronBack fill=\"white\" /> : <Icon24Back fill=\"white\" />}\r\n                        </PanelHeaderButton>\r\n                        <span className=\"IteamListQuestion__number-question\">{numberCurrentQuestion}/{countQuestions}</span>\r\n                    </>\r\n                }\r\n                className=\"IteamListQuestion__PanelHeader\"\r\n                separator={false}\r\n                visor={true}\r\n                transparent={false}\r\n            >\r\n            </PanelHeader>\r\n\r\n            <div className=\"IteamListQuestion\">\r\n                <div className=\"IteamListQuestion__content\">\r\n                    {\r\n                        question.overSideImg !== undefined && question.overSideImg !== null\r\n                            ?\r\n                            <div\r\n                                className={`IteamListQuestion__image-wrap ${isRotated && \"IteamListQuestion__image-wrap_rotated\"}`}\r\n                            >\r\n                                <img\r\n                                    className=\"IteamListQuestion__image IteamListQuestion__image_hidden\"\r\n                                    src={question.questionImg}\r\n                                    alt={`image_hidden_${id}`}\r\n                                />\r\n\r\n                                <div className=\"IteamListQuestion__image-side-wrap IteamListQuestion__image-side-wrap_front\">\r\n                                    <img className=\"IteamListQuestion__image\" src={question.questionImg} alt={`image_front_${id}`} />\r\n\r\n                                    <button\r\n                                        onClick={rotateImage}\r\n                                        className=\"IteamListQuestion__rotate-button IteamListQuestion__rotate-button_front\"\r\n                                    ></button>\r\n                                </div>\r\n\r\n                                <div className={`IteamListQuestion__image-side-wrap \r\n                                    IteamListQuestion__image-side-wrap_back \r\n                                    ${!isRotated ? \"IteamListQuestion__image-side-wrap_disable\" : \"\"}`}\r\n                                >\r\n                                    <img className=\"IteamListQuestion__image\" src={question.overSideImg} alt={`image_back_${id}`} />\r\n\r\n                                    <button\r\n                                        onClick={rotateImage}\r\n                                        className=\"IteamListQuestion__rotate-button IteamListQuestion__rotate-button_back\"\r\n                                    ></button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            : <div className=\"IteamListQuestion__image-wrap\">\r\n                                <img\r\n                                    className=\"IteamListQuestion__image\"\r\n                                    src={question.questionImg}\r\n                                    alt={`image_hidden_${id}`}\r\n                                />\r\n                            </div>\r\n                    }\r\n\r\n                    <p className=\"IteamListQuestion__question-text\">{question.questionText}</p>\r\n\r\n                    <div className=\"IteamListQuestion__answer-options\">\r\n                        {\r\n                            question.answerOptions.map((answer, i) => (\r\n                                <button\r\n                                    key={i}\r\n                                    className={\r\n                                        `IteamListQuestion__answer \r\n                                        ${indexAnswer === i && \"IteamListQuestion__answer_marked\"}`\r\n                                    }\r\n                                    onClick={() => goToNextQuestion(i)}\r\n                                >\r\n                                    {answer.text}\r\n                                </button>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    lastIndexQuestion !== -1 &&\r\n                    <div\r\n                        onClick={goToLastQuestion}\r\n                        className={\r\n                            `IteamListQuestion__go-to-last-question \r\n                                ${lastIndexQuestion > currentIndexQuestion\r\n                                ? \"IteamListQuestion__go-to-last-question_right\"\r\n                                : \"IteamListQuestion__go-to-last-question_left\"\r\n                            }`\r\n                        }\r\n                    >\r\n                        к вопросу {lastIndexQuestion + 1}\r\n                    </div>\r\n                }\r\n\r\n                {/* <BottomSheet\r\n                    stateAnswers={stateAnswers}\r\n                    onFinish={onFinish}\r\n                    goToQuestionWithoutAnswer={goToQuestionWithoutAnswer}\r\n                /> */}\r\n            </div>\r\n        </Panel>\r\n    )\r\n};\r\n\r\nexport default IteamListQuestion;\r\n","import { View } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport IteamListQuestion from './IteamListQuestion/IteamListQuestion';\r\n\r\nconst ListQuestions = ({id, arrQuestions, onBack=()=>{}, onFinish=totalScore=>{}}) => {\r\n    const createIdActivePanel = index => `IteamListQuestion-${index}`;\r\n\r\n    // логика хранения ответов\r\n    const getInitStateAnswers = () => [\r\n        ...arrQuestions.map(question => ({\r\n            questionText: question.questionText.substring(0, 20),\r\n            indexAnswer: -1\r\n        }))\r\n    ];\r\n\r\n    const [stateAnswers, setStateAnswers] = useState(getInitStateAnswers());\r\n\r\n    const giveAnswer = (indexQuestion, indexAnswer) => {\r\n        stateAnswers[indexQuestion].indexAnswer = indexAnswer;\r\n        setStateAnswers([...stateAnswers]);\r\n    }\r\n\r\n    const calculateScore = () => { \r\n        return stateAnswers.reduce((sum, dataAnswer, indexQuestion) => {\r\n            if (dataAnswer.indexAnswer === -1) {\r\n                return sum;\r\n            }\r\n\r\n            return sum + arrQuestions[indexQuestion].answerOptions[dataAnswer.indexAnswer].score;\r\n        }, 0);\r\n    }\r\n\r\n    const resetStateAnswers = () => setStateAnswers(getInitStateAnswers());\r\n\r\n    // логика переключения вопросов\r\n    const [indexQuestion, setIndexQuestion] = useState(0);\r\n\r\n    const resetData = () => {\r\n        resetStateAnswers();\r\n        setIndexQuestion(0);\r\n    }\r\n\r\n    const createGoToNextQuestion = (indexQuestion, maxLength) => (indexAnswer) => {\r\n        giveAnswer(indexQuestion, indexAnswer);    \r\n\r\n        if (indexQuestion < maxLength - 1) {\r\n            setIndexQuestion(indexQuestion + 1);\r\n        } else {\r\n            onFinish(calculateScore());\r\n            resetData();\r\n        }\r\n    }\r\n\r\n    const createGoToPrevQuestion = (indexQuestion) => () => {\r\n        if (indexQuestion > 0) {\r\n            setIndexQuestion(indexQuestion - 1);\r\n        } else {\r\n            onBack();\r\n            resetData();\r\n        }\r\n    }\r\n\r\n    // логика перехода к любому вопросу\r\n    const [lastIndexQuestion, setLastIndexQuestion] = useState(-1);\r\n\r\n    const createGoToQuestionWithoutAnswer = (fromIndexQuestion) => (toIndexQuestion) => {\r\n        setLastIndexQuestion(fromIndexQuestion);\r\n        setIndexQuestion(toIndexQuestion);\r\n    }\r\n\r\n    const goToLastQuestion = () => {\r\n        setIndexQuestion(lastIndexQuestion);\r\n        setLastIndexQuestion(-1);\r\n    }\r\n\r\n    return (\r\n        <View id={id} activePanel={createIdActivePanel(indexQuestion)}>\r\n            {\r\n                arrQuestions.map((question, i, arr) =>(\r\n                    <IteamListQuestion\r\n                        key={i}\r\n                        id={createIdActivePanel(i)}\r\n\r\n                        question={question}\r\n                        numberCurrentQuestion={i+1}\r\n                        countQuestions={arr.length}\r\n\r\n                        stateAnswers={stateAnswers}\r\n                        indexAnswer={stateAnswers[i].indexAnswer}\r\n\r\n                        lastIndexQuestion={lastIndexQuestion}\r\n                        currentIndexQuestion={i}\r\n                        goToLastQuestion={goToLastQuestion}\r\n                        goToQuestionWithoutAnswer={createGoToQuestionWithoutAnswer(i)}\r\n\r\n                        goToNextQuestion={createGoToNextQuestion(i, arr.length)}\r\n                        goToPrevQuestion={createGoToPrevQuestion(i)}\r\n\r\n                        onFinish={() => onFinish(calculateScore())}\r\n                    />\r\n                ))\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ListQuestions;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport { Root } from '@vkontakte/vkui';\r\n\r\nimport \"./App.css\";\r\nimport StartWindow from './panels/StartWindow/StartWindow';\r\nimport ListAge from './panels/ListAge/ListAge';\r\nimport ListQuizes from './panels/ListQuizes/ListQuizes';\r\nimport ListQuestions from './panels/ListQuestions/ListQuestions';\r\n\r\nconst App = ({ eras }) => {\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\tconst enablePopout = () => setPopout(<ScreenSpinner size='large' />);\r\n\tconst disablePopout = () => setPopout(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tdisablePopout();\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\t// логика переключения между View\r\n\tconst VIEW_ID_START_WINDOW = \"VIEW_ID_START_WINDOW\";\r\n\tconst VIEW_ID_LIST_AGE = \"VIEW_ID_LIST_AGE\";\r\n\tconst VIEW_ID_LIST_QUIZES = \"VIEW_ID_LIST_QUIZES\";\r\n\tconst VIEW_ID_LIST_QUESTIONES = \"VIEW_ID_LIST_QUESTIONES\";\r\n\tconst VIEW_ID_RESULT = \"VIEW_ID_RESULT\";\r\n\r\n\tconst [activeView, setActiveView] = useState(VIEW_ID_LIST_QUESTIONES);\r\n\r\n\tconst goToViewStartWindow = () => setActiveView(VIEW_ID_START_WINDOW);\r\n\tconst goToViewListAge = () => setActiveView(VIEW_ID_LIST_AGE);\r\n\tconst goToViewListQuizes = () => setActiveView(VIEW_ID_LIST_QUIZES);\r\n\tconst goToViewListQuestions = () => setActiveView(VIEW_ID_LIST_QUESTIONES);\r\n\tconst goToViewResult = () => setActiveView(VIEW_ID_RESULT);\r\n\r\n\t// логика хранения индексов\r\n\tconst [indexAge, setIndexAge] = useState(0);\r\n\tconst [indexQuiz, setIndexQuiz] = useState(0);\r\n\tconst [indexResuslt, setIndexResult] = useState(0);\r\n\r\n\t// функции для StartWindow\r\n\tconst onClickStartWindow = () => {\r\n\t\tgoToViewListAge();\r\n\t}\r\n\r\n\t// функции для ListAge\r\n\tconst createOnClickItemAge = (index) => () => {\r\n\t\tsetIndexAge(index);\r\n\t\tgoToViewListQuizes();\r\n\t}\r\n\r\n\t// функции для ListQuizes\r\n\tconst onBackListQuizes = () => {\r\n\t\tgoToViewListAge();\r\n\t}\r\n\r\n\tconst createOnClickItemQuizes = (index) => () => {\r\n\t\tsetIndexQuiz(index);\r\n\t\tgoToViewListQuestions();\r\n\t}\r\n\r\n\t// функции для ListQuestions\r\n\tconst onBackListQuestions = () => {\r\n\t\tgoToViewListQuizes();\r\n\t}\r\n\r\n\tconst onFinishListQuestions = (totalScore) => {\r\n\t\talert(totalScore);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Root activeView={activeView}>\r\n\t\t\t<StartWindow \r\n\t\t\t\tid={VIEW_ID_START_WINDOW} \r\n\t\t\t\tonClick={onClickStartWindow}\r\n\t\t\t/>\r\n\r\n\t\t\t<ListAge \r\n\t\t\t\tid={VIEW_ID_LIST_AGE} \r\n\t\t\t\teras={eras} \r\n\t\t\t\tcreateOnClickItemAge={createOnClickItemAge}\r\n\t\t\t/>\r\n\r\n\t\t\t<ListQuizes \r\n\t\t\t\tid={VIEW_ID_LIST_QUIZES} \r\n\t\t\t\ttitle={eras[indexAge].shortTitle} \r\n\t\t\t\tquizes={eras[indexAge].quizzes} \r\n\t\t\t\tonBack={onBackListQuizes} \r\n\t\t\t\tcreateOnClickItemQuizes={createOnClickItemQuizes}\r\n\t\t\t/>\r\n\r\n\t\t\t<ListQuestions \r\n\t\t\t\tid={VIEW_ID_LIST_QUESTIONES}\r\n\t\t\t\tarrQuestions={eras[indexAge].quizzes[indexQuiz].questions}\r\n\t\t\t\tonBack={onBackListQuestions}\r\n\t\t\t\tonFinish={onFinishListQuestions}\r\n\t\t\t/>\r\n\t\t</Root>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import imagePetr1 from \"../../img/ageRussianEmpire/quizPetr1/petr.png\";\r\n\r\nimport imgExample from \"../../img/ageRussianEmpire/quizPetr1/Картинка.png\";\r\n\r\nconst quizPetr1 = {\r\n    title: \"Император Пётр I\",\r\n    imageSrc: imagePetr1,\r\n    questions: [\r\n        {\r\n            questionImg: imgExample,\r\n            overSideImg: imgExample,\r\n            questionText: \"Основная причина дефолта 98-го года?\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"Лопнул пузырь ГКО (Государственные краткосрочные облигации)\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"Отказ западных партнёров выдать кредит\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"Решение о срочном запуске печатного станка в “ускоренном режиме\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            questionImg: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 2\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"4\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            questionImg: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 3\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"4\",\r\n                    score: 0\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            questionImg: imgExample,\r\n            overSideImg: null,\r\n            questionText: \"Вопрос 4\",\r\n            answerOptions: [\r\n                {\r\n                    text: \"1\",\r\n                    score: 1\r\n                },\r\n                {\r\n                    text: \"2\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"3\",\r\n                    score: 0\r\n                },\r\n                {\r\n                    text: \"4\",\r\n                    score: 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default quizPetr1;\r\n","import imageTheEraOfPalaceCoups from \"../../img/ageRussianEmpire/The era of palace coups/The era of palace coups.png\";\r\n\r\nconst quizTheEraOfPalaceCoups = {\r\n    title: \"Эпоха Дворцовых переворотов\",\r\n    imageSrc: imageTheEraOfPalaceCoups,\r\n    questions: []\r\n}\r\n\r\nexport default quizTheEraOfPalaceCoups;\r\n","import ageRussianEmpire from \"./ageRussianEmpire/ageRussianEmpire\";\r\n\r\nconst store = {\r\n    eras: [\r\n        ageRussianEmpire\r\n    ]\r\n}\r\n\r\nexport default store;\r\n","import mainImage from \"../../img/ageRussianEmpire/main.png\";\r\nimport quizPetr1 from \"./quizPetr1\";\r\nimport quizTheEraOfPalaceCoups from \"./quizTheEraOfPalaceCoups\";\r\n\r\nconst ageRussianEmpire = {\r\n    title: \"Российская империя\",\r\n    shortTitle: \"Рос. империя\",\r\n    imageSrc: mainImage,\r\n    quizzes: [\r\n        quizPetr1,\r\n        quizTheEraOfPalaceCoups\r\n    ]\r\n}\r\n\r\nexport default ageRussianEmpire;\r\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\nimport store from \"./store/store.js\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App {...store}/>, document.getElementById(\"root\"));\n\nimport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n\n","module.exports = __webpack_public_path__ + \"static/media/Картинка.f17bd5e3.png\";"],"sourceRoot":""}